<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="150" onload="init(evt)" viewBox="0 0 1200 150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="150" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">faucet-lock-fee</text><text id="details" fill="rgb(0,0,0)" x="10" y="133.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="133.00"> </text><svg id="frames" x="10" width="1180" total_samples="2742856"><g><title>CheckReference(2) (40,011 Execution Cost Units, 1.46%)</title><rect x="0.0035%" y="85" width="1.4587%" height="15" fill="rgb(227,0,7)" fg:x="97" fg:w="40011"/><text x="0.2535%" y="95.50"></text></g><g><title>CreateNode(5) (674 Execution Cost Units, 0.02%)</title><rect x="1.4764%" y="85" width="0.0246%" height="15" fill="rgb(217,0,24)" fg:x="40495" fg:w="674"/><text x="1.7264%" y="95.50"></text></g><g><title>DropNode(566) (1,361 Execution Cost Units, 0.05%)</title><rect x="1.5010%" y="85" width="0.0496%" height="15" fill="rgb(221,193,54)" fg:x="41169" fg:w="1361"/><text x="1.7510%" y="95.50"></text></g><g><title>GetStackId(3) (500 Execution Cost Units, 0.02%)</title><rect x="1.5506%" y="85" width="0.0182%" height="15" fill="rgb(248,212,6)" fg:x="42530" fg:w="500"/><text x="1.8006%" y="95.50"></text></g><g><title>CreateNode(466) (918 Execution Cost Units, 0.03%)</title><rect x="1.6598%" y="69" width="0.0335%" height="15" fill="rgb(208,68,35)" fg:x="45526" fg:w="918"/><text x="1.9098%" y="79.50"></text></g><g><title>CreateNode(48) (644 Execution Cost Units, 0.02%)</title><rect x="1.6933%" y="69" width="0.0235%" height="15" fill="rgb(232,128,0)" fg:x="46444" fg:w="644"/><text x="1.9433%" y="79.50"></text></g><g><title>CreateNode(62) (918 Execution Cost Units, 0.03%)</title><rect x="1.7168%" y="69" width="0.0335%" height="15" fill="rgb(207,160,47)" fg:x="47088" fg:w="918"/><text x="1.9668%" y="79.50"></text></g><g><title>DropNode(463) (1,605 Execution Cost Units, 0.06%)</title><rect x="1.7502%" y="69" width="0.0585%" height="15" fill="rgb(228,23,34)" fg:x="48006" fg:w="1605"/><text x="2.0002%" y="79.50"></text></g><g><title>DropNode(551) (1,605 Execution Cost Units, 0.06%)</title><rect x="1.8087%" y="69" width="0.0585%" height="15" fill="rgb(218,30,26)" fg:x="49611" fg:w="1605"/><text x="2.0587%" y="79.50"></text></g><g><title>GetStackId(464) (500 Execution Cost Units, 0.02%)</title><rect x="1.8673%" y="69" width="0.0182%" height="15" fill="rgb(220,122,19)" fg:x="51216" fg:w="500"/><text x="2.1173%" y="79.50"></text></g><g><title>DropNode(535) (1,331 Execution Cost Units, 0.05%)</title><rect x="1.9339%" y="53" width="0.0485%" height="15" fill="rgb(250,228,42)" fg:x="53043" fg:w="1331"/><text x="2.1839%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(490) (541 Execution Cost Units, 0.02%)</title><rect x="1.9824%" y="53" width="0.0197%" height="15" fill="rgb(240,193,28)" fg:x="54374" fg:w="541"/><text x="2.2324%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(494) (40,001 Execution Cost Units, 1.46%)</title><rect x="2.0021%" y="53" width="1.4584%" height="15" fill="rgb(216,20,37)" fg:x="54915" fg:w="40001"/><text x="2.2521%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(496) (339 Execution Cost Units, 0.01%)</title><rect x="3.4605%" y="53" width="0.0124%" height="15" fill="rgb(206,188,39)" fg:x="94916" fg:w="339"/><text x="3.7105%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(500) (40,082 Execution Cost Units, 1.46%)</title><rect x="3.4728%" y="53" width="1.4613%" height="15" fill="rgb(217,207,13)" fg:x="95255" fg:w="40082"/><text x="3.7228%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(502) (1,957 Execution Cost Units, 0.07%)</title><rect x="4.9342%" y="53" width="0.0713%" height="15" fill="rgb(231,73,38)" fg:x="135337" fg:w="1957"/><text x="5.1842%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(510) (339 Execution Cost Units, 0.01%)</title><rect x="5.0055%" y="53" width="0.0124%" height="15" fill="rgb(225,20,46)" fg:x="137294" fg:w="339"/><text x="5.2555%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(514) (355 Execution Cost Units, 0.01%)</title><rect x="5.0179%" y="53" width="0.0129%" height="15" fill="rgb(210,31,41)" fg:x="137633" fg:w="355"/><text x="5.2679%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(506) (461 Execution Cost Units, 0.02%)</title><rect x="5.0308%" y="53" width="0.0168%" height="15" fill="rgb(221,200,47)" fg:x="137988" fg:w="461"/><text x="5.2808%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(519) (333 Execution Cost Units, 0.01%)</title><rect x="5.0476%" y="53" width="0.0121%" height="15" fill="rgb(226,26,5)" fg:x="138449" fg:w="333"/><text x="5.2976%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(525) (461 Execution Cost Units, 0.02%)</title><rect x="5.0598%" y="53" width="0.0168%" height="15" fill="rgb(249,33,26)" fg:x="138782" fg:w="461"/><text x="5.3098%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(530) (461 Execution Cost Units, 0.02%)</title><rect x="5.0766%" y="53" width="0.0168%" height="15" fill="rgb(235,183,28)" fg:x="139243" fg:w="461"/><text x="5.3266%" y="63.50"></text></g><g><title>ReadSubstate(491) (351 Execution Cost Units, 0.01%)</title><rect x="5.0934%" y="53" width="0.0128%" height="15" fill="rgb(221,5,38)" fg:x="139704" fg:w="351"/><text x="5.3434%" y="63.50"></text></g><g><title>ReadSubstate(503) (1,767 Execution Cost Units, 0.06%)</title><rect x="5.1116%" y="53" width="0.0644%" height="15" fill="rgb(247,18,42)" fg:x="140204" fg:w="1767"/><text x="5.3616%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_drop(517) (17,918 Execution Cost Units, 0.65%)</title><rect x="5.2153%" y="53" width="0.6533%" height="15" fill="rgb(241,131,45)" fg:x="143049" fg:w="17918"/><text x="5.4653%" y="63.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9&gt;::Worktop::Worktop_drop (487) (109,499 Execution Cost Units, 3.99%)</title><rect x="1.8855%" y="69" width="3.9922%" height="15" fill="rgb(249,31,29)" fg:x="51716" fg:w="109499"/><text x="2.1355%" y="79.50">Invo..</text></g><g><title>CreateNode(179) (980 Execution Cost Units, 0.04%)</title><rect x="6.0280%" y="53" width="0.0357%" height="15" fill="rgb(225,111,53)" fg:x="165340" fg:w="980"/><text x="6.2780%" y="63.50"></text></g><g><title>CreateNode(312) (980 Execution Cost Units, 0.04%)</title><rect x="6.0638%" y="53" width="0.0357%" height="15" fill="rgb(238,160,17)" fg:x="166320" fg:w="980"/><text x="6.3138%" y="63.50"></text></g><g><title>DropNode(282) (1,667 Execution Cost Units, 0.06%)</title><rect x="6.0995%" y="53" width="0.0608%" height="15" fill="rgb(214,148,48)" fg:x="167300" fg:w="1667"/><text x="6.3495%" y="63.50"></text></g><g><title>DropNode(420) (1,667 Execution Cost Units, 0.06%)</title><rect x="6.1603%" y="53" width="0.0608%" height="15" fill="rgb(232,36,49)" fg:x="168967" fg:w="1667"/><text x="6.4103%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(202) (40,011 Execution Cost Units, 1.46%)</title><rect x="6.2779%" y="37" width="1.4587%" height="15" fill="rgb(209,103,24)" fg:x="172194" fg:w="40011"/><text x="6.5279%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(204) (541 Execution Cost Units, 0.02%)</title><rect x="7.7366%" y="37" width="0.0197%" height="15" fill="rgb(229,88,8)" fg:x="212205" fg:w="541"/><text x="7.9866%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(208) (40,001 Execution Cost Units, 1.46%)</title><rect x="7.7564%" y="37" width="1.4584%" height="15" fill="rgb(213,181,19)" fg:x="212746" fg:w="40001"/><text x="8.0064%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(210) (339 Execution Cost Units, 0.01%)</title><rect x="9.2147%" y="37" width="0.0124%" height="15" fill="rgb(254,191,54)" fg:x="252747" fg:w="339"/><text x="9.4647%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(214) (40,293 Execution Cost Units, 1.47%)</title><rect x="9.2271%" y="37" width="1.4690%" height="15" fill="rgb(241,83,37)" fg:x="253086" fg:w="40293"/><text x="9.4771%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(216) (6,171 Execution Cost Units, 0.22%)</title><rect x="10.6961%" y="37" width="0.2250%" height="15" fill="rgb(233,36,39)" fg:x="293379" fg:w="6171"/><text x="10.9461%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(224) (40,179 Execution Cost Units, 1.46%)</title><rect x="10.9211%" y="37" width="1.4649%" height="15" fill="rgb(226,3,54)" fg:x="299550" fg:w="40179"/><text x="11.1711%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(226) (3,883 Execution Cost Units, 0.14%)</title><rect x="12.3860%" y="37" width="0.1416%" height="15" fill="rgb(245,192,40)" fg:x="339729" fg:w="3883"/><text x="12.6360%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(230) (40,001 Execution Cost Units, 1.46%)</title><rect x="12.5275%" y="37" width="1.4584%" height="15" fill="rgb(238,167,29)" fg:x="343612" fg:w="40001"/><text x="12.7775%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(232) (339 Execution Cost Units, 0.01%)</title><rect x="13.9859%" y="37" width="0.0124%" height="15" fill="rgb(232,182,51)" fg:x="383613" fg:w="339"/><text x="14.2359%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(236) (40,002 Execution Cost Units, 1.46%)</title><rect x="13.9983%" y="37" width="1.4584%" height="15" fill="rgb(231,60,39)" fg:x="383952" fg:w="40002"/><text x="14.2483%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(238) (355 Execution Cost Units, 0.01%)</title><rect x="15.4567%" y="37" width="0.0129%" height="15" fill="rgb(208,69,12)" fg:x="423954" fg:w="355"/><text x="15.7067%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(220) (535 Execution Cost Units, 0.02%)</title><rect x="15.4696%" y="37" width="0.0195%" height="15" fill="rgb(235,93,37)" fg:x="424309" fg:w="535"/><text x="15.7196%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(243) (535 Execution Cost Units, 0.02%)</title><rect x="15.4891%" y="37" width="0.0195%" height="15" fill="rgb(213,116,39)" fg:x="424844" fg:w="535"/><text x="15.7391%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(247) (40,003 Execution Cost Units, 1.46%)</title><rect x="15.5086%" y="37" width="1.4584%" height="15" fill="rgb(222,207,29)" fg:x="425379" fg:w="40003"/><text x="15.7586%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(249) (377 Execution Cost Units, 0.01%)</title><rect x="16.9671%" y="37" width="0.0137%" height="15" fill="rgb(206,96,30)" fg:x="465382" fg:w="377"/><text x="17.2171%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(253) (535 Execution Cost Units, 0.02%)</title><rect x="16.9808%" y="37" width="0.0195%" height="15" fill="rgb(218,138,4)" fg:x="465759" fg:w="535"/><text x="17.2308%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(259) (339 Execution Cost Units, 0.01%)</title><rect x="17.0003%" y="37" width="0.0124%" height="15" fill="rgb(250,191,14)" fg:x="466294" fg:w="339"/><text x="17.2503%" y="47.50"></text></g><g><title>ReadSubstate(205) (351 Execution Cost Units, 0.01%)</title><rect x="17.0127%" y="37" width="0.0128%" height="15" fill="rgb(239,60,40)" fg:x="466633" fg:w="351"/><text x="17.2627%" y="47.50"></text></g><g><title>ReadSubstate(217) (5,981 Execution Cost Units, 0.22%)</title><rect x="17.0309%" y="37" width="0.2181%" height="15" fill="rgb(206,27,48)" fg:x="467133" fg:w="5981"/><text x="17.2809%" y="47.50"></text></g><g><title>ReadSubstate(221) (345 Execution Cost Units, 0.01%)</title><rect x="17.2490%" y="37" width="0.0126%" height="15" fill="rgb(225,35,8)" fg:x="473114" fg:w="345"/><text x="17.4990%" y="47.50"></text></g><g><title>ReadSubstate(227) (3,693 Execution Cost Units, 0.13%)</title><rect x="17.2615%" y="37" width="0.1346%" height="15" fill="rgb(250,213,24)" fg:x="473459" fg:w="3693"/><text x="17.5115%" y="47.50"></text></g><g><title>ReadSubstate(244) (345 Execution Cost Units, 0.01%)</title><rect x="17.4076%" y="37" width="0.0126%" height="15" fill="rgb(247,123,22)" fg:x="477466" fg:w="345"/><text x="17.6576%" y="47.50"></text></g><g><title>ReadSubstate(254) (345 Execution Cost Units, 0.01%)</title><rect x="17.4270%" y="37" width="0.0126%" height="15" fill="rgb(231,138,38)" fg:x="477998" fg:w="345"/><text x="17.6770%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::get_amount (199) (322,160 Execution Cost Units, 11.75%)</title><rect x="6.2210%" y="53" width="11.7454%" height="15" fill="rgb(231,145,46)" fg:x="170634" fg:w="322160"/><text x="6.4710%" y="63.50">Invocation: Metho..</text></g><g><title>RunNativeCode::get_amount_FungibleVault(241) (14,451 Execution Cost Units, 0.53%)</title><rect x="17.4396%" y="37" width="0.5269%" height="15" fill="rgb(251,118,11)" fg:x="478343" fg:w="14451"/><text x="17.6896%" y="47.50"></text></g><g><title>EmitEvent(393) (556 Execution Cost Units, 0.02%)</title><rect x="18.0373%" y="37" width="0.0203%" height="15" fill="rgb(217,147,25)" fg:x="494736" fg:w="556"/><text x="18.2873%" y="47.50"></text></g><g><title>GetStackId(391) (500 Execution Cost Units, 0.02%)</title><rect x="18.0575%" y="37" width="0.0182%" height="15" fill="rgb(247,81,37)" fg:x="495292" fg:w="500"/><text x="18.3075%" y="47.50"></text></g><g><title>LockFee(392) (500 Execution Cost Units, 0.02%)</title><rect x="18.0758%" y="37" width="0.0182%" height="15" fill="rgb(209,12,38)" fg:x="495792" fg:w="500"/><text x="18.3258%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(361) (40,014 Execution Cost Units, 1.46%)</title><rect x="18.0940%" y="37" width="1.4588%" height="15" fill="rgb(227,1,9)" fg:x="496292" fg:w="40014"/><text x="18.3440%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(363) (593 Execution Cost Units, 0.02%)</title><rect x="19.5528%" y="37" width="0.0216%" height="15" fill="rgb(248,47,43)" fg:x="536306" fg:w="593"/><text x="19.8028%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(376) (593 Execution Cost Units, 0.02%)</title><rect x="19.5745%" y="37" width="0.0216%" height="15" fill="rgb(221,10,30)" fg:x="536899" fg:w="593"/><text x="19.8245%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(386) (40,001 Execution Cost Units, 1.46%)</title><rect x="19.5961%" y="37" width="1.4584%" height="15" fill="rgb(210,229,1)" fg:x="537492" fg:w="40001"/><text x="19.8461%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(388) (331 Execution Cost Units, 0.01%)</title><rect x="21.0544%" y="37" width="0.0121%" height="15" fill="rgb(222,148,37)" fg:x="577493" fg:w="331"/><text x="21.3044%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(335) (541 Execution Cost Units, 0.02%)</title><rect x="21.0665%" y="37" width="0.0197%" height="15" fill="rgb(234,67,33)" fg:x="577824" fg:w="541"/><text x="21.3165%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(339) (339 Execution Cost Units, 0.01%)</title><rect x="21.0862%" y="37" width="0.0124%" height="15" fill="rgb(247,98,35)" fg:x="578365" fg:w="339"/><text x="21.3362%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(347) (339 Execution Cost Units, 0.01%)</title><rect x="21.0986%" y="37" width="0.0124%" height="15" fill="rgb(247,138,52)" fg:x="578704" fg:w="339"/><text x="21.3486%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(351) (355 Execution Cost Units, 0.01%)</title><rect x="21.1110%" y="37" width="0.0129%" height="15" fill="rgb(213,79,30)" fg:x="579043" fg:w="355"/><text x="21.3610%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(380) (40,292 Execution Cost Units, 1.47%)</title><rect x="21.1239%" y="37" width="1.4690%" height="15" fill="rgb(246,177,23)" fg:x="579398" fg:w="40292"/><text x="21.3739%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(382) (6,153 Execution Cost Units, 0.22%)</title><rect x="22.5929%" y="37" width="0.2243%" height="15" fill="rgb(230,62,27)" fg:x="619690" fg:w="6153"/><text x="22.8429%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(343) (535 Execution Cost Units, 0.02%)</title><rect x="22.8172%" y="37" width="0.0195%" height="15" fill="rgb(216,154,8)" fg:x="625843" fg:w="535"/><text x="23.0672%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(357) (535 Execution Cost Units, 0.02%)</title><rect x="22.8367%" y="37" width="0.0195%" height="15" fill="rgb(244,35,45)" fg:x="626378" fg:w="535"/><text x="23.0867%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(368) (535 Execution Cost Units, 0.02%)</title><rect x="22.8562%" y="37" width="0.0195%" height="15" fill="rgb(251,115,12)" fg:x="626913" fg:w="535"/><text x="23.1062%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(372) (535 Execution Cost Units, 0.02%)</title><rect x="22.8757%" y="37" width="0.0195%" height="15" fill="rgb(240,54,50)" fg:x="627448" fg:w="535"/><text x="23.1257%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(395) (535 Execution Cost Units, 0.02%)</title><rect x="22.8952%" y="37" width="0.0195%" height="15" fill="rgb(233,84,52)" fg:x="627983" fg:w="535"/><text x="23.1452%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(399) (377 Execution Cost Units, 0.01%)</title><rect x="22.9147%" y="37" width="0.0137%" height="15" fill="rgb(207,117,47)" fg:x="628518" fg:w="377"/><text x="23.1647%" y="47.50"></text></g><g><title>QueryActor(355) (500 Execution Cost Units, 0.02%)</title><rect x="22.9285%" y="37" width="0.0182%" height="15" fill="rgb(249,43,39)" fg:x="628895" fg:w="500"/><text x="23.1785%" y="47.50"></text></g><g><title>QueryActor(366) (500 Execution Cost Units, 0.02%)</title><rect x="22.9467%" y="37" width="0.0182%" height="15" fill="rgb(209,38,44)" fg:x="629395" fg:w="500"/><text x="23.1967%" y="47.50"></text></g><g><title>ReadSubstate(336) (351 Execution Cost Units, 0.01%)</title><rect x="22.9649%" y="37" width="0.0128%" height="15" fill="rgb(236,212,23)" fg:x="629895" fg:w="351"/><text x="23.2149%" y="47.50"></text></g><g><title>ReadSubstate(344) (345 Execution Cost Units, 0.01%)</title><rect x="22.9832%" y="37" width="0.0126%" height="15" fill="rgb(242,79,21)" fg:x="630395" fg:w="345"/><text x="23.2332%" y="47.50"></text></g><g><title>ReadSubstate(358) (345 Execution Cost Units, 0.01%)</title><rect x="23.0072%" y="37" width="0.0126%" height="15" fill="rgb(211,96,35)" fg:x="631054" fg:w="345"/><text x="23.2572%" y="47.50"></text></g><g><title>ReadSubstate(364) (403 Execution Cost Units, 0.01%)</title><rect x="23.0198%" y="37" width="0.0147%" height="15" fill="rgb(253,215,40)" fg:x="631399" fg:w="403"/><text x="23.2698%" y="47.50"></text></g><g><title>ReadSubstate(369) (345 Execution Cost Units, 0.01%)</title><rect x="23.0345%" y="37" width="0.0126%" height="15" fill="rgb(211,81,21)" fg:x="631802" fg:w="345"/><text x="23.2845%" y="47.50"></text></g><g><title>ReadSubstate(373) (345 Execution Cost Units, 0.01%)</title><rect x="23.0470%" y="37" width="0.0126%" height="15" fill="rgb(208,190,38)" fg:x="632147" fg:w="345"/><text x="23.2970%" y="47.50"></text></g><g><title>ReadSubstate(377) (403 Execution Cost Units, 0.01%)</title><rect x="23.0596%" y="37" width="0.0147%" height="15" fill="rgb(235,213,38)" fg:x="632492" fg:w="403"/><text x="23.3096%" y="47.50"></text></g><g><title>ReadSubstate(383) (5,963 Execution Cost Units, 0.22%)</title><rect x="23.0743%" y="37" width="0.2174%" height="15" fill="rgb(237,122,38)" fg:x="632895" fg:w="5963"/><text x="23.3243%" y="47.50"></text></g><g><title>ReadSubstate(396) (345 Execution Cost Units, 0.01%)</title><rect x="23.2968%" y="37" width="0.0126%" height="15" fill="rgb(244,218,35)" fg:x="638999" fg:w="345"/><text x="23.5468%" y="47.50"></text></g><g><title>RunNativeCode::lock_fee(354) (45,243 Execution Cost Units, 1.65%)</title><rect x="23.3231%" y="37" width="1.6495%" height="15" fill="rgb(240,68,47)" fg:x="639718" fg:w="45243"/><text x="23.5731%" y="47.50"></text></g><g><title>WriteSubstate(402) (292 Execution Cost Units, 0.01%)</title><rect x="24.9725%" y="37" width="0.0106%" height="15" fill="rgb(210,16,53)" fg:x="684961" fg:w="292"/><text x="25.2225%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::lock_fee (332) (192,459 Execution Cost Units, 7.02%)</title><rect x="17.9665%" y="53" width="7.0167%" height="15" fill="rgb(235,124,12)" fg:x="492794" fg:w="192459"/><text x="18.2165%" y="63.50">Invocatio..</text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(327) (40,001 Execution Cost Units, 1.46%)</title><rect x="24.9832%" y="53" width="1.4584%" height="15" fill="rgb(224,169,11)" fg:x="685253" fg:w="40001"/><text x="25.2332%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(329) (339 Execution Cost Units, 0.01%)</title><rect x="26.4416%" y="53" width="0.0124%" height="15" fill="rgb(250,166,2)" fg:x="725254" fg:w="339"/><text x="26.6916%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(108) (539 Execution Cost Units, 0.02%)</title><rect x="26.4539%" y="53" width="0.0197%" height="15" fill="rgb(242,216,29)" fg:x="725593" fg:w="539"/><text x="26.7039%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(140) (539 Execution Cost Units, 0.02%)</title><rect x="26.4736%" y="53" width="0.0197%" height="15" fill="rgb(230,116,27)" fg:x="726132" fg:w="539"/><text x="26.7236%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(144) (40,007 Execution Cost Units, 1.46%)</title><rect x="26.4932%" y="53" width="1.4586%" height="15" fill="rgb(228,99,48)" fg:x="726671" fg:w="40007"/><text x="26.7432%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(146) (449 Execution Cost Units, 0.02%)</title><rect x="27.9518%" y="53" width="0.0164%" height="15" fill="rgb(253,11,6)" fg:x="766678" fg:w="449"/><text x="28.2018%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(102) (40,075 Execution Cost Units, 1.46%)</title><rect x="27.9682%" y="53" width="1.4611%" height="15" fill="rgb(247,143,39)" fg:x="767127" fg:w="40075"/><text x="28.2182%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(104) (1,819 Execution Cost Units, 0.07%)</title><rect x="29.4293%" y="53" width="0.0663%" height="15" fill="rgb(236,97,10)" fg:x="807202" fg:w="1819"/><text x="29.6793%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(112) (40,035 Execution Cost Units, 1.46%)</title><rect x="29.4956%" y="53" width="1.4596%" height="15" fill="rgb(233,208,19)" fg:x="809021" fg:w="40035"/><text x="29.7456%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(114) (1,003 Execution Cost Units, 0.04%)</title><rect x="30.9552%" y="53" width="0.0366%" height="15" fill="rgb(216,164,2)" fg:x="849056" fg:w="1003"/><text x="31.2052%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(118) (40,001 Execution Cost Units, 1.46%)</title><rect x="30.9917%" y="53" width="1.4584%" height="15" fill="rgb(220,129,5)" fg:x="850059" fg:w="40001"/><text x="31.2417%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(120) (339 Execution Cost Units, 0.01%)</title><rect x="32.4501%" y="53" width="0.0124%" height="15" fill="rgb(242,17,10)" fg:x="890060" fg:w="339"/><text x="32.7001%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(124) (57,695 Execution Cost Units, 2.10%)</title><rect x="32.4625%" y="53" width="2.1035%" height="15" fill="rgb(242,107,0)" fg:x="890399" fg:w="57695"/><text x="32.7125%" y="63.50">O..</text></g><g><title>OpenSubstate::GlobalPackage(126) (354,209 Execution Cost Units, 12.91%)</title><rect x="34.5659%" y="53" width="12.9139%" height="15" fill="rgb(251,28,31)" fg:x="948094" fg:w="354209"/><text x="34.8159%" y="63.50">OpenSubstate::Globa..</text></g><g><title>OpenSubstate::GlobalPackage(190) (40,027 Execution Cost Units, 1.46%)</title><rect x="47.4798%" y="53" width="1.4593%" height="15" fill="rgb(233,223,10)" fg:x="1302303" fg:w="40027"/><text x="47.7298%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(192) (853 Execution Cost Units, 0.03%)</title><rect x="48.9391%" y="53" width="0.0311%" height="15" fill="rgb(215,21,27)" fg:x="1342330" fg:w="853"/><text x="49.1891%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(275) (40,221 Execution Cost Units, 1.47%)</title><rect x="48.9702%" y="53" width="1.4664%" height="15" fill="rgb(232,23,21)" fg:x="1343183" fg:w="40221"/><text x="49.2202%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(277) (4,739 Execution Cost Units, 0.17%)</title><rect x="50.4366%" y="53" width="0.1728%" height="15" fill="rgb(244,5,23)" fg:x="1383404" fg:w="4739"/><text x="50.6866%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(84) (40,013 Execution Cost Units, 1.46%)</title><rect x="50.6094%" y="53" width="1.4588%" height="15" fill="rgb(226,81,46)" fg:x="1388143" fg:w="40013"/><text x="50.8594%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(86) (573 Execution Cost Units, 0.02%)</title><rect x="52.0682%" y="53" width="0.0209%" height="15" fill="rgb(247,70,30)" fg:x="1428156" fg:w="573"/><text x="52.3182%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(90) (40,001 Execution Cost Units, 1.46%)</title><rect x="52.0891%" y="53" width="1.4584%" height="15" fill="rgb(212,68,19)" fg:x="1428729" fg:w="40001"/><text x="52.3391%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(92) (339 Execution Cost Units, 0.01%)</title><rect x="53.5475%" y="53" width="0.0124%" height="15" fill="rgb(240,187,13)" fg:x="1468730" fg:w="339"/><text x="53.7975%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(96) (40,001 Execution Cost Units, 1.46%)</title><rect x="53.5598%" y="53" width="1.4584%" height="15" fill="rgb(223,113,26)" fg:x="1469069" fg:w="40001"/><text x="53.8098%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(98) (339 Execution Cost Units, 0.01%)</title><rect x="55.0182%" y="53" width="0.0124%" height="15" fill="rgb(206,192,2)" fg:x="1509070" fg:w="339"/><text x="55.2682%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(166) (40,011 Execution Cost Units, 1.46%)</title><rect x="55.0306%" y="53" width="1.4587%" height="15" fill="rgb(241,108,4)" fg:x="1509409" fg:w="40011"/><text x="55.2806%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(168) (535 Execution Cost Units, 0.02%)</title><rect x="56.4893%" y="53" width="0.0195%" height="15" fill="rgb(247,173,49)" fg:x="1549420" fg:w="535"/><text x="56.7393%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(172) (535 Execution Cost Units, 0.02%)</title><rect x="56.5088%" y="53" width="0.0195%" height="15" fill="rgb(224,114,35)" fg:x="1549955" fg:w="535"/><text x="56.7588%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(186) (535 Execution Cost Units, 0.02%)</title><rect x="56.5283%" y="53" width="0.0195%" height="15" fill="rgb(245,159,27)" fg:x="1550490" fg:w="535"/><text x="56.7783%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(196) (535 Execution Cost Units, 0.02%)</title><rect x="56.5478%" y="53" width="0.0195%" height="15" fill="rgb(245,172,44)" fg:x="1551025" fg:w="535"/><text x="56.7978%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(301) (535 Execution Cost Units, 0.02%)</title><rect x="56.5673%" y="53" width="0.0195%" height="15" fill="rgb(236,23,11)" fg:x="1551560" fg:w="535"/><text x="56.8173%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(305) (535 Execution Cost Units, 0.02%)</title><rect x="56.5868%" y="53" width="0.0195%" height="15" fill="rgb(205,117,38)" fg:x="1552095" fg:w="535"/><text x="56.8368%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(319) (535 Execution Cost Units, 0.02%)</title><rect x="56.6063%" y="53" width="0.0195%" height="15" fill="rgb(237,72,25)" fg:x="1552630" fg:w="535"/><text x="56.8563%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(323) (535 Execution Cost Units, 0.02%)</title><rect x="56.6258%" y="53" width="0.0195%" height="15" fill="rgb(244,70,9)" fg:x="1553165" fg:w="535"/><text x="56.8758%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(436) (535 Execution Cost Units, 0.02%)</title><rect x="56.6453%" y="53" width="0.0195%" height="15" fill="rgb(217,125,39)" fg:x="1553700" fg:w="535"/><text x="56.8953%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(176) (605 Execution Cost Units, 0.02%)</title><rect x="56.6648%" y="53" width="0.0221%" height="15" fill="rgb(235,36,10)" fg:x="1554235" fg:w="605"/><text x="56.9148%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(264) (667 Execution Cost Units, 0.02%)</title><rect x="56.6869%" y="53" width="0.0243%" height="15" fill="rgb(251,123,47)" fg:x="1554840" fg:w="667"/><text x="56.9369%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(271) (463 Execution Cost Units, 0.02%)</title><rect x="56.7112%" y="53" width="0.0169%" height="15" fill="rgb(221,13,13)" fg:x="1555507" fg:w="463"/><text x="56.9612%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(309) (605 Execution Cost Units, 0.02%)</title><rect x="56.7281%" y="53" width="0.0221%" height="15" fill="rgb(238,131,9)" fg:x="1555970" fg:w="605"/><text x="56.9781%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(408) (667 Execution Cost Units, 0.02%)</title><rect x="56.7502%" y="53" width="0.0243%" height="15" fill="rgb(211,50,8)" fg:x="1556575" fg:w="667"/><text x="57.0002%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(415) (463 Execution Cost Units, 0.02%)</title><rect x="56.7745%" y="53" width="0.0169%" height="15" fill="rgb(245,182,24)" fg:x="1557242" fg:w="463"/><text x="57.0245%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(440) (40,011 Execution Cost Units, 1.46%)</title><rect x="56.7914%" y="53" width="1.4587%" height="15" fill="rgb(242,14,37)" fg:x="1557705" fg:w="40011"/><text x="57.0414%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(442) (525 Execution Cost Units, 0.02%)</title><rect x="58.2501%" y="53" width="0.0191%" height="15" fill="rgb(246,228,12)" fg:x="1597716" fg:w="525"/><text x="58.5001%" y="63.50"></text></g><g><title>PrepareWasmCode(129) (353,866 Execution Cost Units, 12.90%)</title><rect x="58.2701%" y="53" width="12.9014%" height="15" fill="rgb(213,55,15)" fg:x="1598265" fg:w="353866"/><text x="58.5201%" y="63.50">PrepareWasmCode(129)</text></g><g><title>ReadSubstate(105) (1,629 Execution Cost Units, 0.06%)</title><rect x="71.1715%" y="53" width="0.0594%" height="15" fill="rgb(209,9,3)" fg:x="1952131" fg:w="1629"/><text x="71.4215%" y="63.50"></text></g><g><title>ReadSubstate(109) (349 Execution Cost Units, 0.01%)</title><rect x="71.2309%" y="53" width="0.0127%" height="15" fill="rgb(230,59,30)" fg:x="1953760" fg:w="349"/><text x="71.4809%" y="63.50"></text></g><g><title>ReadSubstate(115) (813 Execution Cost Units, 0.03%)</title><rect x="71.2436%" y="53" width="0.0296%" height="15" fill="rgb(209,121,21)" fg:x="1954109" fg:w="813"/><text x="71.4936%" y="63.50"></text></g><g><title>ReadSubstate(127) (354,019 Execution Cost Units, 12.91%)</title><rect x="71.2787%" y="53" width="12.9069%" height="15" fill="rgb(220,109,13)" fg:x="1955071" fg:w="354019"/><text x="71.5287%" y="63.50">ReadSubstate(127)</text></g><g><title>ReadSubstate(141) (349 Execution Cost Units, 0.01%)</title><rect x="84.1856%" y="53" width="0.0127%" height="15" fill="rgb(232,18,1)" fg:x="2309090" fg:w="349"/><text x="84.4356%" y="63.50"></text></g><g><title>ReadSubstate(169) (345 Execution Cost Units, 0.01%)</title><rect x="84.2172%" y="53" width="0.0126%" height="15" fill="rgb(215,41,42)" fg:x="2309957" fg:w="345"/><text x="84.4672%" y="63.50"></text></g><g><title>ReadSubstate(173) (345 Execution Cost Units, 0.01%)</title><rect x="84.2298%" y="53" width="0.0126%" height="15" fill="rgb(224,123,36)" fg:x="2310302" fg:w="345"/><text x="84.4798%" y="63.50"></text></g><g><title>ReadSubstate(177) (367 Execution Cost Units, 0.01%)</title><rect x="84.2424%" y="53" width="0.0134%" height="15" fill="rgb(240,125,3)" fg:x="2310647" fg:w="367"/><text x="84.4924%" y="63.50"></text></g><g><title>ReadSubstate(187) (345 Execution Cost Units, 0.01%)</title><rect x="84.2558%" y="53" width="0.0126%" height="15" fill="rgb(205,98,50)" fg:x="2311014" fg:w="345"/><text x="84.5058%" y="63.50"></text></g><g><title>ReadSubstate(193) (663 Execution Cost Units, 0.02%)</title><rect x="84.2683%" y="53" width="0.0242%" height="15" fill="rgb(205,185,37)" fg:x="2311359" fg:w="663"/><text x="84.5183%" y="63.50"></text></g><g><title>ReadSubstate(197) (345 Execution Cost Units, 0.01%)</title><rect x="84.2925%" y="53" width="0.0126%" height="15" fill="rgb(238,207,15)" fg:x="2312022" fg:w="345"/><text x="84.5425%" y="63.50"></text></g><g><title>ReadSubstate(265) (429 Execution Cost Units, 0.02%)</title><rect x="84.3051%" y="53" width="0.0156%" height="15" fill="rgb(213,199,42)" fg:x="2312367" fg:w="429"/><text x="84.5551%" y="63.50"></text></g><g><title>ReadSubstate(278) (4,549 Execution Cost Units, 0.17%)</title><rect x="84.3289%" y="53" width="0.1658%" height="15" fill="rgb(235,201,11)" fg:x="2313021" fg:w="4549"/><text x="84.5789%" y="63.50"></text></g><g><title>ReadSubstate(302) (345 Execution Cost Units, 0.01%)</title><rect x="84.4948%" y="53" width="0.0126%" height="15" fill="rgb(207,46,11)" fg:x="2317570" fg:w="345"/><text x="84.7448%" y="63.50"></text></g><g><title>ReadSubstate(306) (345 Execution Cost Units, 0.01%)</title><rect x="84.5074%" y="53" width="0.0126%" height="15" fill="rgb(241,35,35)" fg:x="2317915" fg:w="345"/><text x="84.7574%" y="63.50"></text></g><g><title>ReadSubstate(310) (367 Execution Cost Units, 0.01%)</title><rect x="84.5199%" y="53" width="0.0134%" height="15" fill="rgb(243,32,47)" fg:x="2318260" fg:w="367"/><text x="84.7699%" y="63.50"></text></g><g><title>ReadSubstate(320) (345 Execution Cost Units, 0.01%)</title><rect x="84.5333%" y="53" width="0.0126%" height="15" fill="rgb(247,202,23)" fg:x="2318627" fg:w="345"/><text x="84.7833%" y="63.50"></text></g><g><title>ReadSubstate(324) (345 Execution Cost Units, 0.01%)</title><rect x="84.5459%" y="53" width="0.0126%" height="15" fill="rgb(219,102,11)" fg:x="2318972" fg:w="345"/><text x="84.7959%" y="63.50"></text></g><g><title>ReadSubstate(409) (429 Execution Cost Units, 0.02%)</title><rect x="84.5639%" y="53" width="0.0156%" height="15" fill="rgb(243,110,44)" fg:x="2319466" fg:w="429"/><text x="84.8139%" y="63.50"></text></g><g><title>ReadSubstate(437) (345 Execution Cost Units, 0.01%)</title><rect x="84.5877%" y="53" width="0.0126%" height="15" fill="rgb(222,74,54)" fg:x="2320120" fg:w="345"/><text x="84.8377%" y="63.50"></text></g><g><title>ReadSubstate(443) (335 Execution Cost Units, 0.01%)</title><rect x="84.6003%" y="53" width="0.0122%" height="15" fill="rgb(216,99,12)" fg:x="2320465" fg:w="335"/><text x="84.8503%" y="63.50"></text></g><g><title>ReadSubstate(87) (383 Execution Cost Units, 0.01%)</title><rect x="84.6125%" y="53" width="0.0140%" height="15" fill="rgb(226,22,26)" fg:x="2320800" fg:w="383"/><text x="84.8625%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(130) (590 Execution Cost Units, 0.02%)</title><rect x="84.6374%" y="53" width="0.0215%" height="15" fill="rgb(217,163,10)" fg:x="2321481" fg:w="590"/><text x="84.8874%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(131) (334 Execution Cost Units, 0.01%)</title><rect x="84.6589%" y="53" width="0.0122%" height="15" fill="rgb(213,25,53)" fg:x="2322071" fg:w="334"/><text x="84.9089%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(132) (5,004 Execution Cost Units, 0.18%)</title><rect x="84.6711%" y="53" width="0.1824%" height="15" fill="rgb(252,105,26)" fg:x="2322405" fg:w="5004"/><text x="84.9211%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(133) (334 Execution Cost Units, 0.01%)</title><rect x="84.8535%" y="53" width="0.0122%" height="15" fill="rgb(220,39,43)" fg:x="2327409" fg:w="334"/><text x="85.1035%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(134) (353 Execution Cost Units, 0.01%)</title><rect x="84.8657%" y="53" width="0.0129%" height="15" fill="rgb(229,68,48)" fg:x="2327743" fg:w="353"/><text x="85.1157%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(135) (358 Execution Cost Units, 0.01%)</title><rect x="84.8785%" y="53" width="0.0131%" height="15" fill="rgb(252,8,32)" fg:x="2328096" fg:w="358"/><text x="85.1285%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(136) (349 Execution Cost Units, 0.01%)</title><rect x="84.8916%" y="53" width="0.0127%" height="15" fill="rgb(223,20,43)" fg:x="2328454" fg:w="349"/><text x="85.1416%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(137) (347 Execution Cost Units, 0.01%)</title><rect x="84.9043%" y="53" width="0.0127%" height="15" fill="rgb(229,81,49)" fg:x="2328803" fg:w="347"/><text x="85.1543%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(138) (341 Execution Cost Units, 0.01%)</title><rect x="84.9170%" y="53" width="0.0124%" height="15" fill="rgb(236,28,36)" fg:x="2329150" fg:w="341"/><text x="85.1670%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(149) (338 Execution Cost Units, 0.01%)</title><rect x="84.9294%" y="53" width="0.0123%" height="15" fill="rgb(249,185,26)" fg:x="2329491" fg:w="338"/><text x="85.1794%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(150) (336 Execution Cost Units, 0.01%)</title><rect x="84.9417%" y="53" width="0.0123%" height="15" fill="rgb(249,174,33)" fg:x="2329829" fg:w="336"/><text x="85.1917%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(151) (341 Execution Cost Units, 0.01%)</title><rect x="84.9540%" y="53" width="0.0124%" height="15" fill="rgb(233,201,37)" fg:x="2330165" fg:w="341"/><text x="85.2040%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(152) (343 Execution Cost Units, 0.01%)</title><rect x="84.9664%" y="53" width="0.0125%" height="15" fill="rgb(221,78,26)" fg:x="2330506" fg:w="343"/><text x="85.2164%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(153) (344 Execution Cost Units, 0.01%)</title><rect x="84.9789%" y="53" width="0.0125%" height="15" fill="rgb(250,127,30)" fg:x="2330849" fg:w="344"/><text x="85.2289%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(154) (394 Execution Cost Units, 0.01%)</title><rect x="84.9914%" y="53" width="0.0144%" height="15" fill="rgb(230,49,44)" fg:x="2331193" fg:w="394"/><text x="85.2414%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(155) (337 Execution Cost Units, 0.01%)</title><rect x="85.0058%" y="53" width="0.0123%" height="15" fill="rgb(229,67,23)" fg:x="2331587" fg:w="337"/><text x="85.2558%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(156) (338 Execution Cost Units, 0.01%)</title><rect x="85.0181%" y="53" width="0.0123%" height="15" fill="rgb(249,83,47)" fg:x="2331924" fg:w="338"/><text x="85.2681%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(157) (380 Execution Cost Units, 0.01%)</title><rect x="85.0304%" y="53" width="0.0139%" height="15" fill="rgb(215,43,3)" fg:x="2332262" fg:w="380"/><text x="85.2804%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(158) (343 Execution Cost Units, 0.01%)</title><rect x="85.0443%" y="53" width="0.0125%" height="15" fill="rgb(238,154,13)" fg:x="2332642" fg:w="343"/><text x="85.2943%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(159) (338 Execution Cost Units, 0.01%)</title><rect x="85.0568%" y="53" width="0.0123%" height="15" fill="rgb(219,56,2)" fg:x="2332985" fg:w="338"/><text x="85.3068%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(160) (339 Execution Cost Units, 0.01%)</title><rect x="85.0691%" y="53" width="0.0124%" height="15" fill="rgb(233,0,4)" fg:x="2333323" fg:w="339"/><text x="85.3191%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(161) (340 Execution Cost Units, 0.01%)</title><rect x="85.0815%" y="53" width="0.0124%" height="15" fill="rgb(235,30,7)" fg:x="2333662" fg:w="340"/><text x="85.3315%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(162) (366 Execution Cost Units, 0.01%)</title><rect x="85.0939%" y="53" width="0.0133%" height="15" fill="rgb(250,79,13)" fg:x="2334002" fg:w="366"/><text x="85.3439%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(163) (340 Execution Cost Units, 0.01%)</title><rect x="85.1072%" y="53" width="0.0124%" height="15" fill="rgb(211,146,34)" fg:x="2334368" fg:w="340"/><text x="85.3572%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(164) (333 Execution Cost Units, 0.01%)</title><rect x="85.1196%" y="53" width="0.0121%" height="15" fill="rgb(228,22,38)" fg:x="2334708" fg:w="333"/><text x="85.3696%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(283) (335 Execution Cost Units, 0.01%)</title><rect x="85.1317%" y="53" width="0.0122%" height="15" fill="rgb(235,168,5)" fg:x="2335041" fg:w="335"/><text x="85.3817%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(284) (352 Execution Cost Units, 0.01%)</title><rect x="85.1440%" y="53" width="0.0128%" height="15" fill="rgb(221,155,16)" fg:x="2335376" fg:w="352"/><text x="85.3940%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(285) (338 Execution Cost Units, 0.01%)</title><rect x="85.1568%" y="53" width="0.0123%" height="15" fill="rgb(215,215,53)" fg:x="2335728" fg:w="338"/><text x="85.4068%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(286) (335 Execution Cost Units, 0.01%)</title><rect x="85.1691%" y="53" width="0.0122%" height="15" fill="rgb(223,4,10)" fg:x="2336066" fg:w="335"/><text x="85.4191%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(287) (352 Execution Cost Units, 0.01%)</title><rect x="85.1813%" y="53" width="0.0128%" height="15" fill="rgb(234,103,6)" fg:x="2336401" fg:w="352"/><text x="85.4313%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(288) (484 Execution Cost Units, 0.02%)</title><rect x="85.1942%" y="53" width="0.0176%" height="15" fill="rgb(227,97,0)" fg:x="2336753" fg:w="484"/><text x="85.4442%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(289) (352 Execution Cost Units, 0.01%)</title><rect x="85.2118%" y="53" width="0.0128%" height="15" fill="rgb(234,150,53)" fg:x="2337237" fg:w="352"/><text x="85.4618%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(290) (343 Execution Cost Units, 0.01%)</title><rect x="85.2246%" y="53" width="0.0125%" height="15" fill="rgb(228,201,54)" fg:x="2337589" fg:w="343"/><text x="85.4746%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(291) (445 Execution Cost Units, 0.02%)</title><rect x="85.2371%" y="53" width="0.0162%" height="15" fill="rgb(222,22,37)" fg:x="2337932" fg:w="445"/><text x="85.4871%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(292) (341 Execution Cost Units, 0.01%)</title><rect x="85.2534%" y="53" width="0.0124%" height="15" fill="rgb(237,53,32)" fg:x="2338377" fg:w="341"/><text x="85.5034%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(293) (417 Execution Cost Units, 0.02%)</title><rect x="85.2658%" y="53" width="0.0152%" height="15" fill="rgb(233,25,53)" fg:x="2338718" fg:w="417"/><text x="85.5158%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(294) (337 Execution Cost Units, 0.01%)</title><rect x="85.2810%" y="53" width="0.0123%" height="15" fill="rgb(210,40,34)" fg:x="2339135" fg:w="337"/><text x="85.5310%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(295) (395 Execution Cost Units, 0.01%)</title><rect x="85.2933%" y="53" width="0.0144%" height="15" fill="rgb(241,220,44)" fg:x="2339472" fg:w="395"/><text x="85.5433%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(296) (336 Execution Cost Units, 0.01%)</title><rect x="85.3077%" y="53" width="0.0123%" height="15" fill="rgb(235,28,35)" fg:x="2339867" fg:w="336"/><text x="85.5577%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(297) (337 Execution Cost Units, 0.01%)</title><rect x="85.3199%" y="53" width="0.0123%" height="15" fill="rgb(210,56,17)" fg:x="2340203" fg:w="337"/><text x="85.5699%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(298) (353 Execution Cost Units, 0.01%)</title><rect x="85.3322%" y="53" width="0.0129%" height="15" fill="rgb(224,130,29)" fg:x="2340540" fg:w="353"/><text x="85.5822%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(299) (361 Execution Cost Units, 0.01%)</title><rect x="85.3451%" y="53" width="0.0132%" height="15" fill="rgb(235,212,8)" fg:x="2340893" fg:w="361"/><text x="85.5951%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(421) (370 Execution Cost Units, 0.01%)</title><rect x="85.3583%" y="53" width="0.0135%" height="15" fill="rgb(223,33,50)" fg:x="2341254" fg:w="370"/><text x="85.6083%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(422) (358 Execution Cost Units, 0.01%)</title><rect x="85.3717%" y="53" width="0.0131%" height="15" fill="rgb(219,149,13)" fg:x="2341624" fg:w="358"/><text x="85.6217%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(423) (336 Execution Cost Units, 0.01%)</title><rect x="85.3848%" y="53" width="0.0123%" height="15" fill="rgb(250,156,29)" fg:x="2341982" fg:w="336"/><text x="85.6348%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(424) (334 Execution Cost Units, 0.01%)</title><rect x="85.3970%" y="53" width="0.0122%" height="15" fill="rgb(216,193,19)" fg:x="2342318" fg:w="334"/><text x="85.6470%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(425) (340 Execution Cost Units, 0.01%)</title><rect x="85.4092%" y="53" width="0.0124%" height="15" fill="rgb(216,135,14)" fg:x="2342652" fg:w="340"/><text x="85.6592%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(426) (339 Execution Cost Units, 0.01%)</title><rect x="85.4216%" y="53" width="0.0124%" height="15" fill="rgb(241,47,5)" fg:x="2342992" fg:w="339"/><text x="85.6716%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(427) (352 Execution Cost Units, 0.01%)</title><rect x="85.4340%" y="53" width="0.0128%" height="15" fill="rgb(233,42,35)" fg:x="2343331" fg:w="352"/><text x="85.6840%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(428) (342 Execution Cost Units, 0.01%)</title><rect x="85.4468%" y="53" width="0.0125%" height="15" fill="rgb(231,13,6)" fg:x="2343683" fg:w="342"/><text x="85.6968%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(429) (341 Execution Cost Units, 0.01%)</title><rect x="85.4593%" y="53" width="0.0124%" height="15" fill="rgb(207,181,40)" fg:x="2344025" fg:w="341"/><text x="85.7093%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(430) (335 Execution Cost Units, 0.01%)</title><rect x="85.4717%" y="53" width="0.0122%" height="15" fill="rgb(254,173,49)" fg:x="2344366" fg:w="335"/><text x="85.7217%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(431) (356 Execution Cost Units, 0.01%)</title><rect x="85.4839%" y="53" width="0.0130%" height="15" fill="rgb(221,1,38)" fg:x="2344701" fg:w="356"/><text x="85.7339%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(432) (338 Execution Cost Units, 0.01%)</title><rect x="85.4969%" y="53" width="0.0123%" height="15" fill="rgb(206,124,46)" fg:x="2345057" fg:w="338"/><text x="85.7469%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(433) (340 Execution Cost Units, 0.01%)</title><rect x="85.5092%" y="53" width="0.0124%" height="15" fill="rgb(249,21,11)" fg:x="2345395" fg:w="340"/><text x="85.7592%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(434) (335 Execution Cost Units, 0.01%)</title><rect x="85.5216%" y="53" width="0.0122%" height="15" fill="rgb(222,201,40)" fg:x="2345735" fg:w="335"/><text x="85.7716%" y="63.50"></text></g><g><title>WriteSubstate(266) (582 Execution Cost Units, 0.02%)</title><rect x="85.5338%" y="53" width="0.0212%" height="15" fill="rgb(235,61,29)" fg:x="2346070" fg:w="582"/><text x="85.7838%" y="63.50"></text></g><g><title>WriteSubstate(410) (582 Execution Cost Units, 0.02%)</title><rect x="85.5551%" y="53" width="0.0212%" height="15" fill="rgb(219,207,3)" fg:x="2346652" fg:w="582"/><text x="85.8051%" y="63.50"></text></g><g><title>WriteSubstate(445) (364 Execution Cost Units, 0.01%)</title><rect x="85.5763%" y="53" width="0.0133%" height="15" fill="rgb(222,56,46)" fg:x="2347234" fg:w="364"/><text x="85.8263%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (81) (2,186,383 Execution Cost Units, 79.71%)</title><rect x="5.8776%" y="69" width="79.7119%" height="15" fill="rgb(239,76,54)" fg:x="161215" fg:w="2186383"/><text x="6.1276%" y="79.50">Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (81)</text></g><g><title>OpenSubstate::GlobalGenericComponent(54) (539 Execution Cost Units, 0.02%)</title><rect x="85.5895%" y="69" width="0.0197%" height="15" fill="rgb(231,124,27)" fg:x="2347598" fg:w="539"/><text x="85.8395%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(58) (539 Execution Cost Units, 0.02%)</title><rect x="85.6092%" y="69" width="0.0197%" height="15" fill="rgb(249,195,6)" fg:x="2348137" fg:w="539"/><text x="85.8592%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(68) (539 Execution Cost Units, 0.02%)</title><rect x="85.6288%" y="69" width="0.0197%" height="15" fill="rgb(237,174,47)" fg:x="2348676" fg:w="539"/><text x="85.8788%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(78) (539 Execution Cost Units, 0.02%)</title><rect x="85.6485%" y="69" width="0.0197%" height="15" fill="rgb(206,201,31)" fg:x="2349215" fg:w="539"/><text x="85.8985%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(18) (40,001 Execution Cost Units, 1.46%)</title><rect x="85.6682%" y="69" width="1.4584%" height="15" fill="rgb(231,57,52)" fg:x="2349754" fg:w="40001"/><text x="85.9182%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(20) (339 Execution Cost Units, 0.01%)</title><rect x="87.1265%" y="69" width="0.0124%" height="15" fill="rgb(248,177,22)" fg:x="2389755" fg:w="339"/><text x="87.3765%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(24) (40,021 Execution Cost Units, 1.46%)</title><rect x="87.1389%" y="69" width="1.4591%" height="15" fill="rgb(215,211,37)" fg:x="2390094" fg:w="40021"/><text x="87.3889%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(26) (737 Execution Cost Units, 0.03%)</title><rect x="88.5980%" y="69" width="0.0269%" height="15" fill="rgb(241,128,51)" fg:x="2430115" fg:w="737"/><text x="88.8480%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(30) (40,039 Execution Cost Units, 1.46%)</title><rect x="88.6248%" y="69" width="1.4598%" height="15" fill="rgb(227,165,31)" fg:x="2430852" fg:w="40039"/><text x="88.8748%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(32) (1,095 Execution Cost Units, 0.04%)</title><rect x="90.0846%" y="69" width="0.0399%" height="15" fill="rgb(228,167,24)" fg:x="2470891" fg:w="1095"/><text x="90.3346%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(36) (40,001 Execution Cost Units, 1.46%)</title><rect x="90.1245%" y="69" width="1.4584%" height="15" fill="rgb(228,143,12)" fg:x="2471986" fg:w="40001"/><text x="90.3745%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(38) (339 Execution Cost Units, 0.01%)</title><rect x="91.5829%" y="69" width="0.0124%" height="15" fill="rgb(249,149,8)" fg:x="2511987" fg:w="339"/><text x="91.8329%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(42) (40,002 Execution Cost Units, 1.46%)</title><rect x="91.5953%" y="69" width="1.4584%" height="15" fill="rgb(243,35,44)" fg:x="2512326" fg:w="40002"/><text x="91.8453%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(44) (355 Execution Cost Units, 0.01%)</title><rect x="93.0537%" y="69" width="0.0129%" height="15" fill="rgb(246,89,9)" fg:x="2552328" fg:w="355"/><text x="93.3037%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(472) (40,002 Execution Cost Units, 1.46%)</title><rect x="93.0666%" y="69" width="1.4584%" height="15" fill="rgb(233,213,13)" fg:x="2552683" fg:w="40002"/><text x="93.3166%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(474) (349 Execution Cost Units, 0.01%)</title><rect x="94.5250%" y="69" width="0.0127%" height="15" fill="rgb(233,141,41)" fg:x="2592685" fg:w="349"/><text x="94.7750%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(482) (40,204 Execution Cost Units, 1.47%)</title><rect x="94.5377%" y="69" width="1.4658%" height="15" fill="rgb(239,167,4)" fg:x="2593034" fg:w="40204"/><text x="94.7877%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(484) (4,389 Execution Cost Units, 0.16%)</title><rect x="96.0035%" y="69" width="0.1600%" height="15" fill="rgb(209,217,16)" fg:x="2633238" fg:w="4389"/><text x="96.2535%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(72) (40,002 Execution Cost Units, 1.46%)</title><rect x="96.1635%" y="69" width="1.4584%" height="15" fill="rgb(219,88,35)" fg:x="2637627" fg:w="40002"/><text x="96.4135%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(74) (349 Execution Cost Units, 0.01%)</title><rect x="97.6219%" y="69" width="0.0127%" height="15" fill="rgb(220,193,23)" fg:x="2677629" fg:w="349"/><text x="97.8719%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(451) (605 Execution Cost Units, 0.02%)</title><rect x="97.6347%" y="69" width="0.0221%" height="15" fill="rgb(230,90,52)" fg:x="2677978" fg:w="605"/><text x="97.8847%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(458) (463 Execution Cost Units, 0.02%)</title><rect x="97.6567%" y="69" width="0.0169%" height="15" fill="rgb(252,106,19)" fg:x="2678583" fg:w="463"/><text x="97.9067%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(478) (461 Execution Cost Units, 0.02%)</title><rect x="97.6736%" y="69" width="0.0168%" height="15" fill="rgb(206,74,20)" fg:x="2679046" fg:w="461"/><text x="97.9236%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(539) (605 Execution Cost Units, 0.02%)</title><rect x="97.6904%" y="69" width="0.0221%" height="15" fill="rgb(230,138,44)" fg:x="2679507" fg:w="605"/><text x="97.9404%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(546) (463 Execution Cost Units, 0.02%)</title><rect x="97.7125%" y="69" width="0.0169%" height="15" fill="rgb(235,182,43)" fg:x="2680112" fg:w="463"/><text x="97.9625%" y="79.50"></text></g><g><title>ReadSubstate(27) (547 Execution Cost Units, 0.02%)</title><rect x="97.7361%" y="69" width="0.0199%" height="15" fill="rgb(242,16,51)" fg:x="2680760" fg:w="547"/><text x="97.9861%" y="79.50"></text></g><g><title>ReadSubstate(33) (905 Execution Cost Units, 0.03%)</title><rect x="97.7560%" y="69" width="0.0330%" height="15" fill="rgb(248,9,4)" fg:x="2681307" fg:w="905"/><text x="98.0060%" y="79.50"></text></g><g><title>ReadSubstate(452) (367 Execution Cost Units, 0.01%)</title><rect x="97.8005%" y="69" width="0.0134%" height="15" fill="rgb(210,31,22)" fg:x="2682526" fg:w="367"/><text x="98.0505%" y="79.50"></text></g><g><title>ReadSubstate(485) (4,199 Execution Cost Units, 0.15%)</title><rect x="97.8360%" y="69" width="0.1531%" height="15" fill="rgb(239,54,39)" fg:x="2683500" fg:w="4199"/><text x="98.0860%" y="79.50"></text></g><g><title>ReadSubstate(540) (367 Execution Cost Units, 0.01%)</title><rect x="97.9891%" y="69" width="0.0134%" height="15" fill="rgb(230,99,41)" fg:x="2687699" fg:w="367"/><text x="98.2391%" y="79.50"></text></g><g><title>ReadSubstate(55) (349 Execution Cost Units, 0.01%)</title><rect x="98.0107%" y="69" width="0.0127%" height="15" fill="rgb(253,106,12)" fg:x="2688291" fg:w="349"/><text x="98.2607%" y="79.50"></text></g><g><title>ReadSubstate(59) (349 Execution Cost Units, 0.01%)</title><rect x="98.0234%" y="69" width="0.0127%" height="15" fill="rgb(213,46,41)" fg:x="2688640" fg:w="349"/><text x="98.2734%" y="79.50"></text></g><g><title>ReadSubstate(69) (349 Execution Cost Units, 0.01%)</title><rect x="98.0361%" y="69" width="0.0127%" height="15" fill="rgb(215,133,35)" fg:x="2688989" fg:w="349"/><text x="98.2861%" y="79.50"></text></g><g><title>ReadSubstate(79) (349 Execution Cost Units, 0.01%)</title><rect x="98.0546%" y="69" width="0.0127%" height="15" fill="rgb(213,28,5)" fg:x="2689497" fg:w="349"/><text x="98.3046%" y="79.50"></text></g><g><title>WriteSubstate(453) (520 Execution Cost Units, 0.02%)</title><rect x="98.0673%" y="69" width="0.0190%" height="15" fill="rgb(215,77,49)" fg:x="2689846" fg:w="520"/><text x="98.3173%" y="79.50"></text></g><g><title>WriteSubstate(541) (520 Execution Cost Units, 0.02%)</title><rect x="98.0863%" y="69" width="0.0190%" height="15" fill="rgb(248,100,22)" fg:x="2690366" fg:w="520"/><text x="98.3363%" y="79.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (16) (2,647,856 Execution Cost Units, 96.54%)</title><rect x="1.5688%" y="85" width="96.5365%" height="15" fill="rgb(208,67,9)" fg:x="43030" fg:w="2647856"/><text x="1.8188%" y="95.50">Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (16)</text></g><g><title>OpenSubstate::GlobalPackage(11) (40,002 Execution Cost Units, 1.46%)</title><rect x="98.1053%" y="85" width="1.4584%" height="15" fill="rgb(219,133,21)" fg:x="2690886" fg:w="40002"/><text x="98.3553%" y="95.50"></text></g><g><title>OpenSubstate::GlobalPackage(13) (349 Execution Cost Units, 0.01%)</title><rect x="99.5637%" y="85" width="0.0127%" height="15" fill="rgb(246,46,29)" fg:x="2730888" fg:w="349"/><text x="99.8137%" y="95.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(554) (361 Execution Cost Units, 0.01%)</title><rect x="99.5764%" y="85" width="0.0132%" height="15" fill="rgb(246,185,52)" fg:x="2731237" fg:w="361"/><text x="99.8264%" y="95.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(561) (463 Execution Cost Units, 0.02%)</title><rect x="99.5896%" y="85" width="0.0169%" height="15" fill="rgb(252,136,11)" fg:x="2731598" fg:w="463"/><text x="99.8396%" y="95.50"></text></g><g><title>ValidateTxPayload(0) (3,000 Execution Cost Units, 0.11%)</title><rect x="99.6254%" y="85" width="0.1094%" height="15" fill="rgb(219,138,53)" fg:x="2732580" fg:w="3000"/><text x="99.8754%" y="95.50"></text></g><g><title>VerifyTxSignatures(1) (7,000 Execution Cost Units, 0.26%)</title><rect x="99.7347%" y="85" width="0.2552%" height="15" fill="rgb(211,51,23)" fg:x="2735580" fg:w="7000"/><text x="99.9847%" y="95.50"></text></g><g><title>WriteSubstate(556) (276 Execution Cost Units, 0.01%)</title><rect x="99.9899%" y="85" width="0.0101%" height="15" fill="rgb(247,221,28)" fg:x="2742580" fg:w="276"/><text x="100.2399%" y="95.50"></text></g><g><title>all (2,742,856 Execution Cost Units, 100%)</title><rect x="0.0000%" y="101" width="100.0000%" height="15" fill="rgb(251,222,45)" fg:x="0" fg:w="2742856"/><text x="0.2500%" y="111.50"></text></g></svg></svg>