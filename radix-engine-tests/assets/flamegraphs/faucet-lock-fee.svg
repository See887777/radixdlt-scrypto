<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="150" onload="init(evt)" viewBox="0 0 1200 150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="150" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">faucet-lock-fee</text><text id="details" fill="rgb(0,0,0)" x="10" y="133.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="133.00"> </text><svg id="frames" x="10" width="1180" total_samples="2741356"><g><title>CheckReference(2) (40,011 Execution Cost Units, 1.46%)</title><rect x="0.0035%" y="85" width="1.4595%" height="15" fill="rgb(227,0,7)" fg:x="97" fg:w="40011"/><text x="0.2535%" y="95.50"></text></g><g><title>CreateNode(4) (674 Execution Cost Units, 0.02%)</title><rect x="1.4772%" y="85" width="0.0246%" height="15" fill="rgb(217,0,24)" fg:x="40495" fg:w="674"/><text x="1.7272%" y="95.50"></text></g><g><title>DropNode(563) (1,361 Execution Cost Units, 0.05%)</title><rect x="1.5018%" y="85" width="0.0496%" height="15" fill="rgb(221,193,54)" fg:x="41169" fg:w="1361"/><text x="1.7518%" y="95.50"></text></g><g><title>CreateNode(463) (918 Execution Cost Units, 0.03%)</title><rect x="1.6425%" y="69" width="0.0335%" height="15" fill="rgb(248,212,6)" fg:x="45026" fg:w="918"/><text x="1.8925%" y="79.50"></text></g><g><title>CreateNode(47) (644 Execution Cost Units, 0.02%)</title><rect x="1.6760%" y="69" width="0.0235%" height="15" fill="rgb(208,68,35)" fg:x="45944" fg:w="644"/><text x="1.9260%" y="79.50"></text></g><g><title>CreateNode(61) (918 Execution Cost Units, 0.03%)</title><rect x="1.6995%" y="69" width="0.0335%" height="15" fill="rgb(232,128,0)" fg:x="46588" fg:w="918"/><text x="1.9495%" y="79.50"></text></g><g><title>DropNode(461) (1,605 Execution Cost Units, 0.06%)</title><rect x="1.7329%" y="69" width="0.0585%" height="15" fill="rgb(207,160,47)" fg:x="47506" fg:w="1605"/><text x="1.9829%" y="79.50"></text></g><g><title>DropNode(548) (1,605 Execution Cost Units, 0.06%)</title><rect x="1.7915%" y="69" width="0.0585%" height="15" fill="rgb(228,23,34)" fg:x="49111" fg:w="1605"/><text x="2.0415%" y="79.50"></text></g><g><title>DropNode(532) (1,331 Execution Cost Units, 0.05%)</title><rect x="1.8984%" y="53" width="0.0486%" height="15" fill="rgb(218,30,26)" fg:x="52043" fg:w="1331"/><text x="2.1484%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(487) (541 Execution Cost Units, 0.02%)</title><rect x="1.9470%" y="53" width="0.0197%" height="15" fill="rgb(220,122,19)" fg:x="53374" fg:w="541"/><text x="2.1970%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(491) (40,001 Execution Cost Units, 1.46%)</title><rect x="1.9667%" y="53" width="1.4592%" height="15" fill="rgb(250,228,42)" fg:x="53915" fg:w="40001"/><text x="2.2167%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(493) (339 Execution Cost Units, 0.01%)</title><rect x="3.4259%" y="53" width="0.0124%" height="15" fill="rgb(240,193,28)" fg:x="93916" fg:w="339"/><text x="3.6759%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(497) (40,082 Execution Cost Units, 1.46%)</title><rect x="3.4383%" y="53" width="1.4621%" height="15" fill="rgb(216,20,37)" fg:x="94255" fg:w="40082"/><text x="3.6883%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(499) (1,957 Execution Cost Units, 0.07%)</title><rect x="4.9004%" y="53" width="0.0714%" height="15" fill="rgb(206,188,39)" fg:x="134337" fg:w="1957"/><text x="5.1504%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(507) (339 Execution Cost Units, 0.01%)</title><rect x="4.9718%" y="53" width="0.0124%" height="15" fill="rgb(217,207,13)" fg:x="136294" fg:w="339"/><text x="5.2218%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(511) (355 Execution Cost Units, 0.01%)</title><rect x="4.9841%" y="53" width="0.0129%" height="15" fill="rgb(231,73,38)" fg:x="136633" fg:w="355"/><text x="5.2341%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(503) (461 Execution Cost Units, 0.02%)</title><rect x="4.9971%" y="53" width="0.0168%" height="15" fill="rgb(225,20,46)" fg:x="136988" fg:w="461"/><text x="5.2471%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(516) (333 Execution Cost Units, 0.01%)</title><rect x="5.0139%" y="53" width="0.0121%" height="15" fill="rgb(210,31,41)" fg:x="137449" fg:w="333"/><text x="5.2639%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(522) (461 Execution Cost Units, 0.02%)</title><rect x="5.0261%" y="53" width="0.0168%" height="15" fill="rgb(221,200,47)" fg:x="137782" fg:w="461"/><text x="5.2761%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(527) (461 Execution Cost Units, 0.02%)</title><rect x="5.0429%" y="53" width="0.0168%" height="15" fill="rgb(226,26,5)" fg:x="138243" fg:w="461"/><text x="5.2929%" y="63.50"></text></g><g><title>ReadSubstate(488) (351 Execution Cost Units, 0.01%)</title><rect x="5.0597%" y="53" width="0.0128%" height="15" fill="rgb(249,33,26)" fg:x="138704" fg:w="351"/><text x="5.3097%" y="63.50"></text></g><g><title>ReadSubstate(500) (1,767 Execution Cost Units, 0.06%)</title><rect x="5.0779%" y="53" width="0.0645%" height="15" fill="rgb(235,183,28)" fg:x="139204" fg:w="1767"/><text x="5.3279%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_drop(514) (17,918 Execution Cost Units, 0.65%)</title><rect x="5.1817%" y="53" width="0.6536%" height="15" fill="rgb(221,5,38)" fg:x="142049" fg:w="17918"/><text x="5.4317%" y="63.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9&gt;::Worktop::Worktop_drop (484) (109,499 Execution Cost Units, 3.99%)</title><rect x="1.8500%" y="69" width="3.9943%" height="15" fill="rgb(247,18,42)" fg:x="50716" fg:w="109499"/><text x="2.1000%" y="79.50">Invo..</text></g><g><title>CreateNode(178) (980 Execution Cost Units, 0.04%)</title><rect x="5.9948%" y="53" width="0.0357%" height="15" fill="rgb(241,131,45)" fg:x="164340" fg:w="980"/><text x="6.2448%" y="63.50"></text></g><g><title>CreateNode(311) (980 Execution Cost Units, 0.04%)</title><rect x="6.0306%" y="53" width="0.0357%" height="15" fill="rgb(249,31,29)" fg:x="165320" fg:w="980"/><text x="6.2806%" y="63.50"></text></g><g><title>DropNode(281) (1,667 Execution Cost Units, 0.06%)</title><rect x="6.0663%" y="53" width="0.0608%" height="15" fill="rgb(225,111,53)" fg:x="166300" fg:w="1667"/><text x="6.3163%" y="63.50"></text></g><g><title>DropNode(418) (1,667 Execution Cost Units, 0.06%)</title><rect x="6.1272%" y="53" width="0.0608%" height="15" fill="rgb(238,160,17)" fg:x="167967" fg:w="1667"/><text x="6.3772%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(201) (40,011 Execution Cost Units, 1.46%)</title><rect x="6.2449%" y="37" width="1.4595%" height="15" fill="rgb(214,148,48)" fg:x="171194" fg:w="40011"/><text x="6.4949%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(203) (541 Execution Cost Units, 0.02%)</title><rect x="7.7044%" y="37" width="0.0197%" height="15" fill="rgb(232,36,49)" fg:x="211205" fg:w="541"/><text x="7.9544%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(207) (40,001 Execution Cost Units, 1.46%)</title><rect x="7.7241%" y="37" width="1.4592%" height="15" fill="rgb(209,103,24)" fg:x="211746" fg:w="40001"/><text x="7.9741%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(209) (339 Execution Cost Units, 0.01%)</title><rect x="9.1833%" y="37" width="0.0124%" height="15" fill="rgb(229,88,8)" fg:x="251747" fg:w="339"/><text x="9.4333%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(213) (40,293 Execution Cost Units, 1.47%)</title><rect x="9.1957%" y="37" width="1.4698%" height="15" fill="rgb(213,181,19)" fg:x="252086" fg:w="40293"/><text x="9.4457%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(215) (6,171 Execution Cost Units, 0.23%)</title><rect x="10.6655%" y="37" width="0.2251%" height="15" fill="rgb(254,191,54)" fg:x="292379" fg:w="6171"/><text x="10.9155%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(223) (40,179 Execution Cost Units, 1.47%)</title><rect x="10.8906%" y="37" width="1.4657%" height="15" fill="rgb(241,83,37)" fg:x="298550" fg:w="40179"/><text x="11.1406%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(225) (3,883 Execution Cost Units, 0.14%)</title><rect x="12.3563%" y="37" width="0.1416%" height="15" fill="rgb(233,36,39)" fg:x="338729" fg:w="3883"/><text x="12.6063%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(229) (40,001 Execution Cost Units, 1.46%)</title><rect x="12.4979%" y="37" width="1.4592%" height="15" fill="rgb(226,3,54)" fg:x="342612" fg:w="40001"/><text x="12.7479%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(231) (339 Execution Cost Units, 0.01%)</title><rect x="13.9571%" y="37" width="0.0124%" height="15" fill="rgb(245,192,40)" fg:x="382613" fg:w="339"/><text x="14.2071%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(235) (40,002 Execution Cost Units, 1.46%)</title><rect x="13.9694%" y="37" width="1.4592%" height="15" fill="rgb(238,167,29)" fg:x="382952" fg:w="40002"/><text x="14.2194%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(237) (355 Execution Cost Units, 0.01%)</title><rect x="15.4286%" y="37" width="0.0129%" height="15" fill="rgb(232,182,51)" fg:x="422954" fg:w="355"/><text x="15.6786%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(219) (535 Execution Cost Units, 0.02%)</title><rect x="15.4416%" y="37" width="0.0195%" height="15" fill="rgb(231,60,39)" fg:x="423309" fg:w="535"/><text x="15.6916%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(242) (535 Execution Cost Units, 0.02%)</title><rect x="15.4611%" y="37" width="0.0195%" height="15" fill="rgb(208,69,12)" fg:x="423844" fg:w="535"/><text x="15.7111%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(246) (40,003 Execution Cost Units, 1.46%)</title><rect x="15.4806%" y="37" width="1.4592%" height="15" fill="rgb(235,93,37)" fg:x="424379" fg:w="40003"/><text x="15.7306%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(248) (377 Execution Cost Units, 0.01%)</title><rect x="16.9399%" y="37" width="0.0138%" height="15" fill="rgb(213,116,39)" fg:x="464382" fg:w="377"/><text x="17.1899%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(252) (535 Execution Cost Units, 0.02%)</title><rect x="16.9536%" y="37" width="0.0195%" height="15" fill="rgb(222,207,29)" fg:x="464759" fg:w="535"/><text x="17.2036%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(258) (339 Execution Cost Units, 0.01%)</title><rect x="16.9731%" y="37" width="0.0124%" height="15" fill="rgb(206,96,30)" fg:x="465294" fg:w="339"/><text x="17.2231%" y="47.50"></text></g><g><title>ReadSubstate(204) (351 Execution Cost Units, 0.01%)</title><rect x="16.9855%" y="37" width="0.0128%" height="15" fill="rgb(218,138,4)" fg:x="465633" fg:w="351"/><text x="17.2355%" y="47.50"></text></g><g><title>ReadSubstate(216) (5,981 Execution Cost Units, 0.22%)</title><rect x="17.0037%" y="37" width="0.2182%" height="15" fill="rgb(250,191,14)" fg:x="466133" fg:w="5981"/><text x="17.2537%" y="47.50"></text></g><g><title>ReadSubstate(220) (345 Execution Cost Units, 0.01%)</title><rect x="17.2219%" y="37" width="0.0126%" height="15" fill="rgb(239,60,40)" fg:x="472114" fg:w="345"/><text x="17.4719%" y="47.50"></text></g><g><title>ReadSubstate(226) (3,693 Execution Cost Units, 0.13%)</title><rect x="17.2345%" y="37" width="0.1347%" height="15" fill="rgb(206,27,48)" fg:x="472459" fg:w="3693"/><text x="17.4845%" y="47.50"></text></g><g><title>ReadSubstate(243) (345 Execution Cost Units, 0.01%)</title><rect x="17.3807%" y="37" width="0.0126%" height="15" fill="rgb(225,35,8)" fg:x="476466" fg:w="345"/><text x="17.6307%" y="47.50"></text></g><g><title>ReadSubstate(253) (345 Execution Cost Units, 0.01%)</title><rect x="17.4001%" y="37" width="0.0126%" height="15" fill="rgb(250,213,24)" fg:x="476998" fg:w="345"/><text x="17.6501%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::get_amount (198) (322,160 Execution Cost Units, 11.75%)</title><rect x="6.1880%" y="53" width="11.7518%" height="15" fill="rgb(247,123,22)" fg:x="169634" fg:w="322160"/><text x="6.4380%" y="63.50">Invocation: Metho..</text></g><g><title>RunNativeCode::get_amount_FungibleVault(240) (14,451 Execution Cost Units, 0.53%)</title><rect x="17.4127%" y="37" width="0.5271%" height="15" fill="rgb(231,138,38)" fg:x="477343" fg:w="14451"/><text x="17.6627%" y="47.50"></text></g><g><title>EmitEvent(391) (556 Execution Cost Units, 0.02%)</title><rect x="18.0106%" y="37" width="0.0203%" height="15" fill="rgb(231,145,46)" fg:x="493736" fg:w="556"/><text x="18.2606%" y="47.50"></text></g><g><title>LockFee(390) (500 Execution Cost Units, 0.02%)</title><rect x="18.0309%" y="37" width="0.0182%" height="15" fill="rgb(251,118,11)" fg:x="494292" fg:w="500"/><text x="18.2809%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(360) (40,014 Execution Cost Units, 1.46%)</title><rect x="18.0492%" y="37" width="1.4596%" height="15" fill="rgb(217,147,25)" fg:x="494792" fg:w="40014"/><text x="18.2992%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(362) (593 Execution Cost Units, 0.02%)</title><rect x="19.5088%" y="37" width="0.0216%" height="15" fill="rgb(247,81,37)" fg:x="534806" fg:w="593"/><text x="19.7588%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(375) (593 Execution Cost Units, 0.02%)</title><rect x="19.5304%" y="37" width="0.0216%" height="15" fill="rgb(209,12,38)" fg:x="535399" fg:w="593"/><text x="19.7804%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(385) (40,001 Execution Cost Units, 1.46%)</title><rect x="19.5521%" y="37" width="1.4592%" height="15" fill="rgb(227,1,9)" fg:x="535992" fg:w="40001"/><text x="19.8021%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(387) (331 Execution Cost Units, 0.01%)</title><rect x="21.0112%" y="37" width="0.0121%" height="15" fill="rgb(248,47,43)" fg:x="575993" fg:w="331"/><text x="21.2612%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(334) (541 Execution Cost Units, 0.02%)</title><rect x="21.0233%" y="37" width="0.0197%" height="15" fill="rgb(221,10,30)" fg:x="576324" fg:w="541"/><text x="21.2733%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(338) (339 Execution Cost Units, 0.01%)</title><rect x="21.0431%" y="37" width="0.0124%" height="15" fill="rgb(210,229,1)" fg:x="576865" fg:w="339"/><text x="21.2931%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(346) (339 Execution Cost Units, 0.01%)</title><rect x="21.0554%" y="37" width="0.0124%" height="15" fill="rgb(222,148,37)" fg:x="577204" fg:w="339"/><text x="21.3054%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(350) (355 Execution Cost Units, 0.01%)</title><rect x="21.0678%" y="37" width="0.0129%" height="15" fill="rgb(234,67,33)" fg:x="577543" fg:w="355"/><text x="21.3178%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(379) (40,292 Execution Cost Units, 1.47%)</title><rect x="21.0807%" y="37" width="1.4698%" height="15" fill="rgb(247,98,35)" fg:x="577898" fg:w="40292"/><text x="21.3307%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(381) (6,153 Execution Cost Units, 0.22%)</title><rect x="22.5505%" y="37" width="0.2245%" height="15" fill="rgb(247,138,52)" fg:x="618190" fg:w="6153"/><text x="22.8005%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(342) (535 Execution Cost Units, 0.02%)</title><rect x="22.7750%" y="37" width="0.0195%" height="15" fill="rgb(213,79,30)" fg:x="624343" fg:w="535"/><text x="23.0250%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(356) (535 Execution Cost Units, 0.02%)</title><rect x="22.7945%" y="37" width="0.0195%" height="15" fill="rgb(246,177,23)" fg:x="624878" fg:w="535"/><text x="23.0445%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(367) (535 Execution Cost Units, 0.02%)</title><rect x="22.8140%" y="37" width="0.0195%" height="15" fill="rgb(230,62,27)" fg:x="625413" fg:w="535"/><text x="23.0640%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(371) (535 Execution Cost Units, 0.02%)</title><rect x="22.8335%" y="37" width="0.0195%" height="15" fill="rgb(216,154,8)" fg:x="625948" fg:w="535"/><text x="23.0835%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(393) (535 Execution Cost Units, 0.02%)</title><rect x="22.8530%" y="37" width="0.0195%" height="15" fill="rgb(244,35,45)" fg:x="626483" fg:w="535"/><text x="23.1030%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(397) (377 Execution Cost Units, 0.01%)</title><rect x="22.8725%" y="37" width="0.0138%" height="15" fill="rgb(251,115,12)" fg:x="627018" fg:w="377"/><text x="23.1225%" y="47.50"></text></g><g><title>QueryActor(354) (500 Execution Cost Units, 0.02%)</title><rect x="22.8863%" y="37" width="0.0182%" height="15" fill="rgb(240,54,50)" fg:x="627395" fg:w="500"/><text x="23.1363%" y="47.50"></text></g><g><title>QueryActor(365) (500 Execution Cost Units, 0.02%)</title><rect x="22.9045%" y="37" width="0.0182%" height="15" fill="rgb(233,84,52)" fg:x="627895" fg:w="500"/><text x="23.1545%" y="47.50"></text></g><g><title>ReadSubstate(335) (351 Execution Cost Units, 0.01%)</title><rect x="22.9228%" y="37" width="0.0128%" height="15" fill="rgb(207,117,47)" fg:x="628395" fg:w="351"/><text x="23.1728%" y="47.50"></text></g><g><title>ReadSubstate(343) (345 Execution Cost Units, 0.01%)</title><rect x="22.9410%" y="37" width="0.0126%" height="15" fill="rgb(249,43,39)" fg:x="628895" fg:w="345"/><text x="23.1910%" y="47.50"></text></g><g><title>ReadSubstate(357) (345 Execution Cost Units, 0.01%)</title><rect x="22.9651%" y="37" width="0.0126%" height="15" fill="rgb(209,38,44)" fg:x="629554" fg:w="345"/><text x="23.2151%" y="47.50"></text></g><g><title>ReadSubstate(363) (403 Execution Cost Units, 0.01%)</title><rect x="22.9776%" y="37" width="0.0147%" height="15" fill="rgb(236,212,23)" fg:x="629899" fg:w="403"/><text x="23.2276%" y="47.50"></text></g><g><title>ReadSubstate(368) (345 Execution Cost Units, 0.01%)</title><rect x="22.9923%" y="37" width="0.0126%" height="15" fill="rgb(242,79,21)" fg:x="630302" fg:w="345"/><text x="23.2423%" y="47.50"></text></g><g><title>ReadSubstate(372) (345 Execution Cost Units, 0.01%)</title><rect x="23.0049%" y="37" width="0.0126%" height="15" fill="rgb(211,96,35)" fg:x="630647" fg:w="345"/><text x="23.2549%" y="47.50"></text></g><g><title>ReadSubstate(376) (403 Execution Cost Units, 0.01%)</title><rect x="23.0175%" y="37" width="0.0147%" height="15" fill="rgb(253,215,40)" fg:x="630992" fg:w="403"/><text x="23.2675%" y="47.50"></text></g><g><title>ReadSubstate(382) (5,963 Execution Cost Units, 0.22%)</title><rect x="23.0322%" y="37" width="0.2175%" height="15" fill="rgb(211,81,21)" fg:x="631395" fg:w="5963"/><text x="23.2822%" y="47.50"></text></g><g><title>ReadSubstate(394) (345 Execution Cost Units, 0.01%)</title><rect x="23.2549%" y="37" width="0.0126%" height="15" fill="rgb(208,190,38)" fg:x="637499" fg:w="345"/><text x="23.5049%" y="47.50"></text></g><g><title>RunNativeCode::lock_fee(353) (45,243 Execution Cost Units, 1.65%)</title><rect x="23.2811%" y="37" width="1.6504%" height="15" fill="rgb(235,213,38)" fg:x="638218" fg:w="45243"/><text x="23.5311%" y="47.50"></text></g><g><title>WriteSubstate(400) (292 Execution Cost Units, 0.01%)</title><rect x="24.9315%" y="37" width="0.0107%" height="15" fill="rgb(237,122,38)" fg:x="683461" fg:w="292"/><text x="25.1815%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::lock_fee (331) (191,959 Execution Cost Units, 7.00%)</title><rect x="17.9398%" y="53" width="7.0023%" height="15" fill="rgb(244,218,35)" fg:x="491794" fg:w="191959"/><text x="18.1898%" y="63.50">Invocatio..</text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(326) (40,001 Execution Cost Units, 1.46%)</title><rect x="24.9421%" y="53" width="1.4592%" height="15" fill="rgb(240,68,47)" fg:x="683753" fg:w="40001"/><text x="25.1921%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(328) (339 Execution Cost Units, 0.01%)</title><rect x="26.4013%" y="53" width="0.0124%" height="15" fill="rgb(210,16,53)" fg:x="723754" fg:w="339"/><text x="26.6513%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(107) (539 Execution Cost Units, 0.02%)</title><rect x="26.4137%" y="53" width="0.0197%" height="15" fill="rgb(235,124,12)" fg:x="724093" fg:w="539"/><text x="26.6637%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(139) (539 Execution Cost Units, 0.02%)</title><rect x="26.4333%" y="53" width="0.0197%" height="15" fill="rgb(224,169,11)" fg:x="724632" fg:w="539"/><text x="26.6833%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(143) (40,007 Execution Cost Units, 1.46%)</title><rect x="26.4530%" y="53" width="1.4594%" height="15" fill="rgb(250,166,2)" fg:x="725171" fg:w="40007"/><text x="26.7030%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(145) (449 Execution Cost Units, 0.02%)</title><rect x="27.9124%" y="53" width="0.0164%" height="15" fill="rgb(242,216,29)" fg:x="765178" fg:w="449"/><text x="28.1624%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(101) (40,075 Execution Cost Units, 1.46%)</title><rect x="27.9288%" y="53" width="1.4619%" height="15" fill="rgb(230,116,27)" fg:x="765627" fg:w="40075"/><text x="28.1788%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(103) (1,819 Execution Cost Units, 0.07%)</title><rect x="29.3906%" y="53" width="0.0664%" height="15" fill="rgb(228,99,48)" fg:x="805702" fg:w="1819"/><text x="29.6406%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(111) (40,035 Execution Cost Units, 1.46%)</title><rect x="29.4570%" y="53" width="1.4604%" height="15" fill="rgb(253,11,6)" fg:x="807521" fg:w="40035"/><text x="29.7070%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(113) (1,003 Execution Cost Units, 0.04%)</title><rect x="30.9174%" y="53" width="0.0366%" height="15" fill="rgb(247,143,39)" fg:x="847556" fg:w="1003"/><text x="31.1674%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(117) (40,001 Execution Cost Units, 1.46%)</title><rect x="30.9540%" y="53" width="1.4592%" height="15" fill="rgb(236,97,10)" fg:x="848559" fg:w="40001"/><text x="31.2040%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(119) (339 Execution Cost Units, 0.01%)</title><rect x="32.4132%" y="53" width="0.0124%" height="15" fill="rgb(233,208,19)" fg:x="888560" fg:w="339"/><text x="32.6632%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(123) (57,695 Execution Cost Units, 2.10%)</title><rect x="32.4255%" y="53" width="2.1046%" height="15" fill="rgb(216,164,2)" fg:x="888899" fg:w="57695"/><text x="32.6755%" y="63.50">O..</text></g><g><title>OpenSubstate::GlobalPackage(125) (354,209 Execution Cost Units, 12.92%)</title><rect x="34.5301%" y="53" width="12.9209%" height="15" fill="rgb(220,129,5)" fg:x="946594" fg:w="354209"/><text x="34.7801%" y="63.50">OpenSubstate::Globa..</text></g><g><title>OpenSubstate::GlobalPackage(189) (40,027 Execution Cost Units, 1.46%)</title><rect x="47.4511%" y="53" width="1.4601%" height="15" fill="rgb(242,17,10)" fg:x="1300803" fg:w="40027"/><text x="47.7011%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(191) (853 Execution Cost Units, 0.03%)</title><rect x="48.9112%" y="53" width="0.0311%" height="15" fill="rgb(242,107,0)" fg:x="1340830" fg:w="853"/><text x="49.1612%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(274) (40,221 Execution Cost Units, 1.47%)</title><rect x="48.9423%" y="53" width="1.4672%" height="15" fill="rgb(251,28,31)" fg:x="1341683" fg:w="40221"/><text x="49.1923%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(276) (4,739 Execution Cost Units, 0.17%)</title><rect x="50.4095%" y="53" width="0.1729%" height="15" fill="rgb(233,223,10)" fg:x="1381904" fg:w="4739"/><text x="50.6595%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(83) (40,013 Execution Cost Units, 1.46%)</title><rect x="50.5824%" y="53" width="1.4596%" height="15" fill="rgb(215,21,27)" fg:x="1386643" fg:w="40013"/><text x="50.8324%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(85) (573 Execution Cost Units, 0.02%)</title><rect x="52.0420%" y="53" width="0.0209%" height="15" fill="rgb(232,23,21)" fg:x="1426656" fg:w="573"/><text x="52.2920%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(89) (40,001 Execution Cost Units, 1.46%)</title><rect x="52.0629%" y="53" width="1.4592%" height="15" fill="rgb(244,5,23)" fg:x="1427229" fg:w="40001"/><text x="52.3129%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(91) (339 Execution Cost Units, 0.01%)</title><rect x="53.5221%" y="53" width="0.0124%" height="15" fill="rgb(226,81,46)" fg:x="1467230" fg:w="339"/><text x="53.7721%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(95) (40,001 Execution Cost Units, 1.46%)</title><rect x="53.5344%" y="53" width="1.4592%" height="15" fill="rgb(247,70,30)" fg:x="1467569" fg:w="40001"/><text x="53.7844%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(97) (339 Execution Cost Units, 0.01%)</title><rect x="54.9936%" y="53" width="0.0124%" height="15" fill="rgb(212,68,19)" fg:x="1507570" fg:w="339"/><text x="55.2436%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(165) (40,011 Execution Cost Units, 1.46%)</title><rect x="55.0060%" y="53" width="1.4595%" height="15" fill="rgb(240,187,13)" fg:x="1507909" fg:w="40011"/><text x="55.2560%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(167) (535 Execution Cost Units, 0.02%)</title><rect x="56.4655%" y="53" width="0.0195%" height="15" fill="rgb(223,113,26)" fg:x="1547920" fg:w="535"/><text x="56.7155%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(171) (535 Execution Cost Units, 0.02%)</title><rect x="56.4850%" y="53" width="0.0195%" height="15" fill="rgb(206,192,2)" fg:x="1548455" fg:w="535"/><text x="56.7350%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(185) (535 Execution Cost Units, 0.02%)</title><rect x="56.5045%" y="53" width="0.0195%" height="15" fill="rgb(241,108,4)" fg:x="1548990" fg:w="535"/><text x="56.7545%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(195) (535 Execution Cost Units, 0.02%)</title><rect x="56.5240%" y="53" width="0.0195%" height="15" fill="rgb(247,173,49)" fg:x="1549525" fg:w="535"/><text x="56.7740%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(300) (535 Execution Cost Units, 0.02%)</title><rect x="56.5435%" y="53" width="0.0195%" height="15" fill="rgb(224,114,35)" fg:x="1550060" fg:w="535"/><text x="56.7935%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(304) (535 Execution Cost Units, 0.02%)</title><rect x="56.5631%" y="53" width="0.0195%" height="15" fill="rgb(245,159,27)" fg:x="1550595" fg:w="535"/><text x="56.8131%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(318) (535 Execution Cost Units, 0.02%)</title><rect x="56.5826%" y="53" width="0.0195%" height="15" fill="rgb(245,172,44)" fg:x="1551130" fg:w="535"/><text x="56.8326%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(322) (535 Execution Cost Units, 0.02%)</title><rect x="56.6021%" y="53" width="0.0195%" height="15" fill="rgb(236,23,11)" fg:x="1551665" fg:w="535"/><text x="56.8521%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(434) (535 Execution Cost Units, 0.02%)</title><rect x="56.6216%" y="53" width="0.0195%" height="15" fill="rgb(205,117,38)" fg:x="1552200" fg:w="535"/><text x="56.8716%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(175) (605 Execution Cost Units, 0.02%)</title><rect x="56.6411%" y="53" width="0.0221%" height="15" fill="rgb(237,72,25)" fg:x="1552735" fg:w="605"/><text x="56.8911%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(263) (667 Execution Cost Units, 0.02%)</title><rect x="56.6632%" y="53" width="0.0243%" height="15" fill="rgb(244,70,9)" fg:x="1553340" fg:w="667"/><text x="56.9132%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(270) (463 Execution Cost Units, 0.02%)</title><rect x="56.6875%" y="53" width="0.0169%" height="15" fill="rgb(217,125,39)" fg:x="1554007" fg:w="463"/><text x="56.9375%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(308) (605 Execution Cost Units, 0.02%)</title><rect x="56.7044%" y="53" width="0.0221%" height="15" fill="rgb(235,36,10)" fg:x="1554470" fg:w="605"/><text x="56.9544%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(406) (667 Execution Cost Units, 0.02%)</title><rect x="56.7265%" y="53" width="0.0243%" height="15" fill="rgb(251,123,47)" fg:x="1555075" fg:w="667"/><text x="56.9765%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(413) (463 Execution Cost Units, 0.02%)</title><rect x="56.7508%" y="53" width="0.0169%" height="15" fill="rgb(221,13,13)" fg:x="1555742" fg:w="463"/><text x="57.0008%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(438) (40,011 Execution Cost Units, 1.46%)</title><rect x="56.7677%" y="53" width="1.4595%" height="15" fill="rgb(238,131,9)" fg:x="1556205" fg:w="40011"/><text x="57.0177%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(440) (525 Execution Cost Units, 0.02%)</title><rect x="58.2272%" y="53" width="0.0192%" height="15" fill="rgb(211,50,8)" fg:x="1596216" fg:w="525"/><text x="58.4772%" y="63.50"></text></g><g><title>PrepareWasmCode(128) (353,866 Execution Cost Units, 12.91%)</title><rect x="58.2473%" y="53" width="12.9084%" height="15" fill="rgb(245,182,24)" fg:x="1596765" fg:w="353866"/><text x="58.4973%" y="63.50">PrepareWasmCode(128)</text></g><g><title>ReadSubstate(104) (1,629 Execution Cost Units, 0.06%)</title><rect x="71.1557%" y="53" width="0.0594%" height="15" fill="rgb(242,14,37)" fg:x="1950631" fg:w="1629"/><text x="71.4057%" y="63.50"></text></g><g><title>ReadSubstate(108) (349 Execution Cost Units, 0.01%)</title><rect x="71.2151%" y="53" width="0.0127%" height="15" fill="rgb(246,228,12)" fg:x="1952260" fg:w="349"/><text x="71.4651%" y="63.50"></text></g><g><title>ReadSubstate(114) (813 Execution Cost Units, 0.03%)</title><rect x="71.2279%" y="53" width="0.0297%" height="15" fill="rgb(213,55,15)" fg:x="1952609" fg:w="813"/><text x="71.4779%" y="63.50"></text></g><g><title>ReadSubstate(126) (354,019 Execution Cost Units, 12.91%)</title><rect x="71.2629%" y="53" width="12.9140%" height="15" fill="rgb(209,9,3)" fg:x="1953571" fg:w="354019"/><text x="71.5129%" y="63.50">ReadSubstate(126)</text></g><g><title>ReadSubstate(140) (349 Execution Cost Units, 0.01%)</title><rect x="84.1770%" y="53" width="0.0127%" height="15" fill="rgb(230,59,30)" fg:x="2307590" fg:w="349"/><text x="84.4270%" y="63.50"></text></g><g><title>ReadSubstate(168) (345 Execution Cost Units, 0.01%)</title><rect x="84.2086%" y="53" width="0.0126%" height="15" fill="rgb(209,121,21)" fg:x="2308457" fg:w="345"/><text x="84.4586%" y="63.50"></text></g><g><title>ReadSubstate(172) (345 Execution Cost Units, 0.01%)</title><rect x="84.2212%" y="53" width="0.0126%" height="15" fill="rgb(220,109,13)" fg:x="2308802" fg:w="345"/><text x="84.4712%" y="63.50"></text></g><g><title>ReadSubstate(176) (367 Execution Cost Units, 0.01%)</title><rect x="84.2338%" y="53" width="0.0134%" height="15" fill="rgb(232,18,1)" fg:x="2309147" fg:w="367"/><text x="84.4838%" y="63.50"></text></g><g><title>ReadSubstate(186) (345 Execution Cost Units, 0.01%)</title><rect x="84.2471%" y="53" width="0.0126%" height="15" fill="rgb(215,41,42)" fg:x="2309514" fg:w="345"/><text x="84.4971%" y="63.50"></text></g><g><title>ReadSubstate(192) (663 Execution Cost Units, 0.02%)</title><rect x="84.2597%" y="53" width="0.0242%" height="15" fill="rgb(224,123,36)" fg:x="2309859" fg:w="663"/><text x="84.5097%" y="63.50"></text></g><g><title>ReadSubstate(196) (345 Execution Cost Units, 0.01%)</title><rect x="84.2839%" y="53" width="0.0126%" height="15" fill="rgb(240,125,3)" fg:x="2310522" fg:w="345"/><text x="84.5339%" y="63.50"></text></g><g><title>ReadSubstate(264) (429 Execution Cost Units, 0.02%)</title><rect x="84.2965%" y="53" width="0.0156%" height="15" fill="rgb(205,98,50)" fg:x="2310867" fg:w="429"/><text x="84.5465%" y="63.50"></text></g><g><title>ReadSubstate(277) (4,549 Execution Cost Units, 0.17%)</title><rect x="84.3204%" y="53" width="0.1659%" height="15" fill="rgb(205,185,37)" fg:x="2311521" fg:w="4549"/><text x="84.5704%" y="63.50"></text></g><g><title>ReadSubstate(301) (345 Execution Cost Units, 0.01%)</title><rect x="84.4863%" y="53" width="0.0126%" height="15" fill="rgb(238,207,15)" fg:x="2316070" fg:w="345"/><text x="84.7363%" y="63.50"></text></g><g><title>ReadSubstate(305) (345 Execution Cost Units, 0.01%)</title><rect x="84.4989%" y="53" width="0.0126%" height="15" fill="rgb(213,199,42)" fg:x="2316415" fg:w="345"/><text x="84.7489%" y="63.50"></text></g><g><title>ReadSubstate(309) (367 Execution Cost Units, 0.01%)</title><rect x="84.5115%" y="53" width="0.0134%" height="15" fill="rgb(235,201,11)" fg:x="2316760" fg:w="367"/><text x="84.7615%" y="63.50"></text></g><g><title>ReadSubstate(319) (345 Execution Cost Units, 0.01%)</title><rect x="84.5248%" y="53" width="0.0126%" height="15" fill="rgb(207,46,11)" fg:x="2317127" fg:w="345"/><text x="84.7748%" y="63.50"></text></g><g><title>ReadSubstate(323) (345 Execution Cost Units, 0.01%)</title><rect x="84.5374%" y="53" width="0.0126%" height="15" fill="rgb(241,35,35)" fg:x="2317472" fg:w="345"/><text x="84.7874%" y="63.50"></text></g><g><title>ReadSubstate(407) (429 Execution Cost Units, 0.02%)</title><rect x="84.5555%" y="53" width="0.0156%" height="15" fill="rgb(243,32,47)" fg:x="2317966" fg:w="429"/><text x="84.8055%" y="63.50"></text></g><g><title>ReadSubstate(435) (345 Execution Cost Units, 0.01%)</title><rect x="84.5793%" y="53" width="0.0126%" height="15" fill="rgb(247,202,23)" fg:x="2318620" fg:w="345"/><text x="84.8293%" y="63.50"></text></g><g><title>ReadSubstate(441) (335 Execution Cost Units, 0.01%)</title><rect x="84.5919%" y="53" width="0.0122%" height="15" fill="rgb(219,102,11)" fg:x="2318965" fg:w="335"/><text x="84.8419%" y="63.50"></text></g><g><title>ReadSubstate(86) (383 Execution Cost Units, 0.01%)</title><rect x="84.6041%" y="53" width="0.0140%" height="15" fill="rgb(243,110,44)" fg:x="2319300" fg:w="383"/><text x="84.8541%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(129) (590 Execution Cost Units, 0.02%)</title><rect x="84.6290%" y="53" width="0.0215%" height="15" fill="rgb(222,74,54)" fg:x="2319981" fg:w="590"/><text x="84.8790%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(130) (334 Execution Cost Units, 0.01%)</title><rect x="84.6505%" y="53" width="0.0122%" height="15" fill="rgb(216,99,12)" fg:x="2320571" fg:w="334"/><text x="84.9005%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(131) (5,004 Execution Cost Units, 0.18%)</title><rect x="84.6627%" y="53" width="0.1825%" height="15" fill="rgb(226,22,26)" fg:x="2320905" fg:w="5004"/><text x="84.9127%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(132) (334 Execution Cost Units, 0.01%)</title><rect x="84.8452%" y="53" width="0.0122%" height="15" fill="rgb(217,163,10)" fg:x="2325909" fg:w="334"/><text x="85.0952%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(133) (353 Execution Cost Units, 0.01%)</title><rect x="84.8574%" y="53" width="0.0129%" height="15" fill="rgb(213,25,53)" fg:x="2326243" fg:w="353"/><text x="85.1074%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(134) (358 Execution Cost Units, 0.01%)</title><rect x="84.8703%" y="53" width="0.0131%" height="15" fill="rgb(252,105,26)" fg:x="2326596" fg:w="358"/><text x="85.1203%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(135) (349 Execution Cost Units, 0.01%)</title><rect x="84.8833%" y="53" width="0.0127%" height="15" fill="rgb(220,39,43)" fg:x="2326954" fg:w="349"/><text x="85.1333%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(136) (347 Execution Cost Units, 0.01%)</title><rect x="84.8961%" y="53" width="0.0127%" height="15" fill="rgb(229,68,48)" fg:x="2327303" fg:w="347"/><text x="85.1461%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(137) (341 Execution Cost Units, 0.01%)</title><rect x="84.9087%" y="53" width="0.0124%" height="15" fill="rgb(252,8,32)" fg:x="2327650" fg:w="341"/><text x="85.1587%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(148) (338 Execution Cost Units, 0.01%)</title><rect x="84.9211%" y="53" width="0.0123%" height="15" fill="rgb(223,20,43)" fg:x="2327991" fg:w="338"/><text x="85.1711%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(149) (336 Execution Cost Units, 0.01%)</title><rect x="84.9335%" y="53" width="0.0123%" height="15" fill="rgb(229,81,49)" fg:x="2328329" fg:w="336"/><text x="85.1835%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(150) (341 Execution Cost Units, 0.01%)</title><rect x="84.9457%" y="53" width="0.0124%" height="15" fill="rgb(236,28,36)" fg:x="2328665" fg:w="341"/><text x="85.1957%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(151) (343 Execution Cost Units, 0.01%)</title><rect x="84.9582%" y="53" width="0.0125%" height="15" fill="rgb(249,185,26)" fg:x="2329006" fg:w="343"/><text x="85.2082%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(152) (344 Execution Cost Units, 0.01%)</title><rect x="84.9707%" y="53" width="0.0125%" height="15" fill="rgb(249,174,33)" fg:x="2329349" fg:w="344"/><text x="85.2207%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(153) (394 Execution Cost Units, 0.01%)</title><rect x="84.9832%" y="53" width="0.0144%" height="15" fill="rgb(233,201,37)" fg:x="2329693" fg:w="394"/><text x="85.2332%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(154) (337 Execution Cost Units, 0.01%)</title><rect x="84.9976%" y="53" width="0.0123%" height="15" fill="rgb(221,78,26)" fg:x="2330087" fg:w="337"/><text x="85.2476%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(155) (338 Execution Cost Units, 0.01%)</title><rect x="85.0099%" y="53" width="0.0123%" height="15" fill="rgb(250,127,30)" fg:x="2330424" fg:w="338"/><text x="85.2599%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(156) (380 Execution Cost Units, 0.01%)</title><rect x="85.0222%" y="53" width="0.0139%" height="15" fill="rgb(230,49,44)" fg:x="2330762" fg:w="380"/><text x="85.2722%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(157) (343 Execution Cost Units, 0.01%)</title><rect x="85.0361%" y="53" width="0.0125%" height="15" fill="rgb(229,67,23)" fg:x="2331142" fg:w="343"/><text x="85.2861%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(158) (338 Execution Cost Units, 0.01%)</title><rect x="85.0486%" y="53" width="0.0123%" height="15" fill="rgb(249,83,47)" fg:x="2331485" fg:w="338"/><text x="85.2986%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(159) (339 Execution Cost Units, 0.01%)</title><rect x="85.0609%" y="53" width="0.0124%" height="15" fill="rgb(215,43,3)" fg:x="2331823" fg:w="339"/><text x="85.3109%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(160) (340 Execution Cost Units, 0.01%)</title><rect x="85.0733%" y="53" width="0.0124%" height="15" fill="rgb(238,154,13)" fg:x="2332162" fg:w="340"/><text x="85.3233%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(161) (366 Execution Cost Units, 0.01%)</title><rect x="85.0857%" y="53" width="0.0134%" height="15" fill="rgb(219,56,2)" fg:x="2332502" fg:w="366"/><text x="85.3357%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(162) (340 Execution Cost Units, 0.01%)</title><rect x="85.0991%" y="53" width="0.0124%" height="15" fill="rgb(233,0,4)" fg:x="2332868" fg:w="340"/><text x="85.3491%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(163) (333 Execution Cost Units, 0.01%)</title><rect x="85.1115%" y="53" width="0.0121%" height="15" fill="rgb(235,30,7)" fg:x="2333208" fg:w="333"/><text x="85.3615%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(282) (335 Execution Cost Units, 0.01%)</title><rect x="85.1236%" y="53" width="0.0122%" height="15" fill="rgb(250,79,13)" fg:x="2333541" fg:w="335"/><text x="85.3736%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(283) (352 Execution Cost Units, 0.01%)</title><rect x="85.1358%" y="53" width="0.0128%" height="15" fill="rgb(211,146,34)" fg:x="2333876" fg:w="352"/><text x="85.3858%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(284) (338 Execution Cost Units, 0.01%)</title><rect x="85.1487%" y="53" width="0.0123%" height="15" fill="rgb(228,22,38)" fg:x="2334228" fg:w="338"/><text x="85.3987%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(285) (335 Execution Cost Units, 0.01%)</title><rect x="85.1610%" y="53" width="0.0122%" height="15" fill="rgb(235,168,5)" fg:x="2334566" fg:w="335"/><text x="85.4110%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(286) (352 Execution Cost Units, 0.01%)</title><rect x="85.1732%" y="53" width="0.0128%" height="15" fill="rgb(221,155,16)" fg:x="2334901" fg:w="352"/><text x="85.4232%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(287) (484 Execution Cost Units, 0.02%)</title><rect x="85.1861%" y="53" width="0.0177%" height="15" fill="rgb(215,215,53)" fg:x="2335253" fg:w="484"/><text x="85.4361%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(288) (352 Execution Cost Units, 0.01%)</title><rect x="85.2037%" y="53" width="0.0128%" height="15" fill="rgb(223,4,10)" fg:x="2335737" fg:w="352"/><text x="85.4537%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(289) (343 Execution Cost Units, 0.01%)</title><rect x="85.2165%" y="53" width="0.0125%" height="15" fill="rgb(234,103,6)" fg:x="2336089" fg:w="343"/><text x="85.4665%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(290) (445 Execution Cost Units, 0.02%)</title><rect x="85.2291%" y="53" width="0.0162%" height="15" fill="rgb(227,97,0)" fg:x="2336432" fg:w="445"/><text x="85.4791%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(291) (341 Execution Cost Units, 0.01%)</title><rect x="85.2453%" y="53" width="0.0124%" height="15" fill="rgb(234,150,53)" fg:x="2336877" fg:w="341"/><text x="85.4953%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(292) (417 Execution Cost Units, 0.02%)</title><rect x="85.2577%" y="53" width="0.0152%" height="15" fill="rgb(228,201,54)" fg:x="2337218" fg:w="417"/><text x="85.5077%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(293) (337 Execution Cost Units, 0.01%)</title><rect x="85.2729%" y="53" width="0.0123%" height="15" fill="rgb(222,22,37)" fg:x="2337635" fg:w="337"/><text x="85.5229%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(294) (395 Execution Cost Units, 0.01%)</title><rect x="85.2852%" y="53" width="0.0144%" height="15" fill="rgb(237,53,32)" fg:x="2337972" fg:w="395"/><text x="85.5352%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(295) (336 Execution Cost Units, 0.01%)</title><rect x="85.2996%" y="53" width="0.0123%" height="15" fill="rgb(233,25,53)" fg:x="2338367" fg:w="336"/><text x="85.5496%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(296) (337 Execution Cost Units, 0.01%)</title><rect x="85.3119%" y="53" width="0.0123%" height="15" fill="rgb(210,40,34)" fg:x="2338703" fg:w="337"/><text x="85.5619%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(297) (353 Execution Cost Units, 0.01%)</title><rect x="85.3242%" y="53" width="0.0129%" height="15" fill="rgb(241,220,44)" fg:x="2339040" fg:w="353"/><text x="85.5742%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(298) (361 Execution Cost Units, 0.01%)</title><rect x="85.3371%" y="53" width="0.0132%" height="15" fill="rgb(235,28,35)" fg:x="2339393" fg:w="361"/><text x="85.5871%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(419) (370 Execution Cost Units, 0.01%)</title><rect x="85.3502%" y="53" width="0.0135%" height="15" fill="rgb(210,56,17)" fg:x="2339754" fg:w="370"/><text x="85.6002%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(420) (358 Execution Cost Units, 0.01%)</title><rect x="85.3637%" y="53" width="0.0131%" height="15" fill="rgb(224,130,29)" fg:x="2340124" fg:w="358"/><text x="85.6137%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(421) (336 Execution Cost Units, 0.01%)</title><rect x="85.3768%" y="53" width="0.0123%" height="15" fill="rgb(235,212,8)" fg:x="2340482" fg:w="336"/><text x="85.6268%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(422) (334 Execution Cost Units, 0.01%)</title><rect x="85.3891%" y="53" width="0.0122%" height="15" fill="rgb(223,33,50)" fg:x="2340818" fg:w="334"/><text x="85.6391%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(423) (340 Execution Cost Units, 0.01%)</title><rect x="85.4012%" y="53" width="0.0124%" height="15" fill="rgb(219,149,13)" fg:x="2341152" fg:w="340"/><text x="85.6512%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(424) (339 Execution Cost Units, 0.01%)</title><rect x="85.4136%" y="53" width="0.0124%" height="15" fill="rgb(250,156,29)" fg:x="2341492" fg:w="339"/><text x="85.6636%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(425) (352 Execution Cost Units, 0.01%)</title><rect x="85.4260%" y="53" width="0.0128%" height="15" fill="rgb(216,193,19)" fg:x="2341831" fg:w="352"/><text x="85.6760%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(426) (342 Execution Cost Units, 0.01%)</title><rect x="85.4388%" y="53" width="0.0125%" height="15" fill="rgb(216,135,14)" fg:x="2342183" fg:w="342"/><text x="85.6888%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(427) (341 Execution Cost Units, 0.01%)</title><rect x="85.4513%" y="53" width="0.0124%" height="15" fill="rgb(241,47,5)" fg:x="2342525" fg:w="341"/><text x="85.7013%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(428) (335 Execution Cost Units, 0.01%)</title><rect x="85.4638%" y="53" width="0.0122%" height="15" fill="rgb(233,42,35)" fg:x="2342866" fg:w="335"/><text x="85.7138%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(429) (356 Execution Cost Units, 0.01%)</title><rect x="85.4760%" y="53" width="0.0130%" height="15" fill="rgb(231,13,6)" fg:x="2343201" fg:w="356"/><text x="85.7260%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(430) (338 Execution Cost Units, 0.01%)</title><rect x="85.4890%" y="53" width="0.0123%" height="15" fill="rgb(207,181,40)" fg:x="2343557" fg:w="338"/><text x="85.7390%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(431) (340 Execution Cost Units, 0.01%)</title><rect x="85.5013%" y="53" width="0.0124%" height="15" fill="rgb(254,173,49)" fg:x="2343895" fg:w="340"/><text x="85.7513%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(432) (335 Execution Cost Units, 0.01%)</title><rect x="85.5137%" y="53" width="0.0122%" height="15" fill="rgb(221,1,38)" fg:x="2344235" fg:w="335"/><text x="85.7637%" y="63.50"></text></g><g><title>WriteSubstate(265) (582 Execution Cost Units, 0.02%)</title><rect x="85.5259%" y="53" width="0.0212%" height="15" fill="rgb(206,124,46)" fg:x="2344570" fg:w="582"/><text x="85.7759%" y="63.50"></text></g><g><title>WriteSubstate(408) (582 Execution Cost Units, 0.02%)</title><rect x="85.5472%" y="53" width="0.0212%" height="15" fill="rgb(249,21,11)" fg:x="2345152" fg:w="582"/><text x="85.7972%" y="63.50"></text></g><g><title>WriteSubstate(443) (364 Execution Cost Units, 0.01%)</title><rect x="85.5684%" y="53" width="0.0133%" height="15" fill="rgb(222,201,40)" fg:x="2345734" fg:w="364"/><text x="85.8184%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (80) (2,185,883 Execution Cost Units, 79.74%)</title><rect x="5.8444%" y="69" width="79.7373%" height="15" fill="rgb(235,61,29)" fg:x="160215" fg:w="2185883"/><text x="6.0944%" y="79.50">Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (80)</text></g><g><title>OpenSubstate::GlobalGenericComponent(53) (539 Execution Cost Units, 0.02%)</title><rect x="85.5817%" y="69" width="0.0197%" height="15" fill="rgb(219,207,3)" fg:x="2346098" fg:w="539"/><text x="85.8317%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(57) (539 Execution Cost Units, 0.02%)</title><rect x="85.6013%" y="69" width="0.0197%" height="15" fill="rgb(222,56,46)" fg:x="2346637" fg:w="539"/><text x="85.8513%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(67) (539 Execution Cost Units, 0.02%)</title><rect x="85.6210%" y="69" width="0.0197%" height="15" fill="rgb(239,76,54)" fg:x="2347176" fg:w="539"/><text x="85.8710%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(77) (539 Execution Cost Units, 0.02%)</title><rect x="85.6406%" y="69" width="0.0197%" height="15" fill="rgb(231,124,27)" fg:x="2347715" fg:w="539"/><text x="85.8906%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(17) (40,001 Execution Cost Units, 1.46%)</title><rect x="85.6603%" y="69" width="1.4592%" height="15" fill="rgb(249,195,6)" fg:x="2348254" fg:w="40001"/><text x="85.9103%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(19) (339 Execution Cost Units, 0.01%)</title><rect x="87.1195%" y="69" width="0.0124%" height="15" fill="rgb(237,174,47)" fg:x="2388255" fg:w="339"/><text x="87.3695%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(23) (40,021 Execution Cost Units, 1.46%)</title><rect x="87.1318%" y="69" width="1.4599%" height="15" fill="rgb(206,201,31)" fg:x="2388594" fg:w="40021"/><text x="87.3818%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(25) (737 Execution Cost Units, 0.03%)</title><rect x="88.5917%" y="69" width="0.0269%" height="15" fill="rgb(231,57,52)" fg:x="2428615" fg:w="737"/><text x="88.8417%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(29) (40,039 Execution Cost Units, 1.46%)</title><rect x="88.6186%" y="69" width="1.4606%" height="15" fill="rgb(248,177,22)" fg:x="2429352" fg:w="40039"/><text x="88.8686%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(31) (1,095 Execution Cost Units, 0.04%)</title><rect x="90.0792%" y="69" width="0.0399%" height="15" fill="rgb(215,211,37)" fg:x="2469391" fg:w="1095"/><text x="90.3292%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(35) (40,001 Execution Cost Units, 1.46%)</title><rect x="90.1191%" y="69" width="1.4592%" height="15" fill="rgb(241,128,51)" fg:x="2470486" fg:w="40001"/><text x="90.3691%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(37) (339 Execution Cost Units, 0.01%)</title><rect x="91.5783%" y="69" width="0.0124%" height="15" fill="rgb(227,165,31)" fg:x="2510487" fg:w="339"/><text x="91.8283%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(41) (40,002 Execution Cost Units, 1.46%)</title><rect x="91.5907%" y="69" width="1.4592%" height="15" fill="rgb(228,167,24)" fg:x="2510826" fg:w="40002"/><text x="91.8407%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(43) (355 Execution Cost Units, 0.01%)</title><rect x="93.0499%" y="69" width="0.0129%" height="15" fill="rgb(228,143,12)" fg:x="2550828" fg:w="355"/><text x="93.2999%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(469) (40,002 Execution Cost Units, 1.46%)</title><rect x="93.0628%" y="69" width="1.4592%" height="15" fill="rgb(249,149,8)" fg:x="2551183" fg:w="40002"/><text x="93.3128%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(471) (349 Execution Cost Units, 0.01%)</title><rect x="94.5220%" y="69" width="0.0127%" height="15" fill="rgb(243,35,44)" fg:x="2591185" fg:w="349"/><text x="94.7720%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(479) (40,204 Execution Cost Units, 1.47%)</title><rect x="94.5347%" y="69" width="1.4666%" height="15" fill="rgb(246,89,9)" fg:x="2591534" fg:w="40204"/><text x="94.7847%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(481) (4,389 Execution Cost Units, 0.16%)</title><rect x="96.0013%" y="69" width="0.1601%" height="15" fill="rgb(233,213,13)" fg:x="2631738" fg:w="4389"/><text x="96.2513%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(71) (40,002 Execution Cost Units, 1.46%)</title><rect x="96.1614%" y="69" width="1.4592%" height="15" fill="rgb(233,141,41)" fg:x="2636127" fg:w="40002"/><text x="96.4114%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(73) (349 Execution Cost Units, 0.01%)</title><rect x="97.6206%" y="69" width="0.0127%" height="15" fill="rgb(239,167,4)" fg:x="2676129" fg:w="349"/><text x="97.8706%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(449) (605 Execution Cost Units, 0.02%)</title><rect x="97.6334%" y="69" width="0.0221%" height="15" fill="rgb(209,217,16)" fg:x="2676478" fg:w="605"/><text x="97.8834%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(456) (463 Execution Cost Units, 0.02%)</title><rect x="97.6554%" y="69" width="0.0169%" height="15" fill="rgb(219,88,35)" fg:x="2677083" fg:w="463"/><text x="97.9054%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(475) (461 Execution Cost Units, 0.02%)</title><rect x="97.6723%" y="69" width="0.0168%" height="15" fill="rgb(220,193,23)" fg:x="2677546" fg:w="461"/><text x="97.9223%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(536) (605 Execution Cost Units, 0.02%)</title><rect x="97.6891%" y="69" width="0.0221%" height="15" fill="rgb(230,90,52)" fg:x="2678007" fg:w="605"/><text x="97.9391%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(543) (463 Execution Cost Units, 0.02%)</title><rect x="97.7112%" y="69" width="0.0169%" height="15" fill="rgb(252,106,19)" fg:x="2678612" fg:w="463"/><text x="97.9612%" y="79.50"></text></g><g><title>ReadSubstate(26) (547 Execution Cost Units, 0.02%)</title><rect x="97.7348%" y="69" width="0.0200%" height="15" fill="rgb(206,74,20)" fg:x="2679260" fg:w="547"/><text x="97.9848%" y="79.50"></text></g><g><title>ReadSubstate(32) (905 Execution Cost Units, 0.03%)</title><rect x="97.7548%" y="69" width="0.0330%" height="15" fill="rgb(230,138,44)" fg:x="2679807" fg:w="905"/><text x="98.0048%" y="79.50"></text></g><g><title>ReadSubstate(450) (367 Execution Cost Units, 0.01%)</title><rect x="97.7993%" y="69" width="0.0134%" height="15" fill="rgb(235,182,43)" fg:x="2681026" fg:w="367"/><text x="98.0493%" y="79.50"></text></g><g><title>ReadSubstate(482) (4,199 Execution Cost Units, 0.15%)</title><rect x="97.8348%" y="69" width="0.1532%" height="15" fill="rgb(242,16,51)" fg:x="2682000" fg:w="4199"/><text x="98.0848%" y="79.50"></text></g><g><title>ReadSubstate(537) (367 Execution Cost Units, 0.01%)</title><rect x="97.9880%" y="69" width="0.0134%" height="15" fill="rgb(248,9,4)" fg:x="2686199" fg:w="367"/><text x="98.2380%" y="79.50"></text></g><g><title>ReadSubstate(54) (349 Execution Cost Units, 0.01%)</title><rect x="98.0014%" y="69" width="0.0127%" height="15" fill="rgb(210,31,22)" fg:x="2686566" fg:w="349"/><text x="98.2514%" y="79.50"></text></g><g><title>ReadSubstate(58) (349 Execution Cost Units, 0.01%)</title><rect x="98.0223%" y="69" width="0.0127%" height="15" fill="rgb(239,54,39)" fg:x="2687140" fg:w="349"/><text x="98.2723%" y="79.50"></text></g><g><title>ReadSubstate(68) (349 Execution Cost Units, 0.01%)</title><rect x="98.0350%" y="69" width="0.0127%" height="15" fill="rgb(230,99,41)" fg:x="2687489" fg:w="349"/><text x="98.2850%" y="79.50"></text></g><g><title>ReadSubstate(78) (349 Execution Cost Units, 0.01%)</title><rect x="98.0536%" y="69" width="0.0127%" height="15" fill="rgb(253,106,12)" fg:x="2687997" fg:w="349"/><text x="98.3036%" y="79.50"></text></g><g><title>WriteSubstate(451) (520 Execution Cost Units, 0.02%)</title><rect x="98.0663%" y="69" width="0.0190%" height="15" fill="rgb(213,46,41)" fg:x="2688346" fg:w="520"/><text x="98.3163%" y="79.50"></text></g><g><title>WriteSubstate(538) (520 Execution Cost Units, 0.02%)</title><rect x="98.0853%" y="69" width="0.0190%" height="15" fill="rgb(215,133,35)" fg:x="2688866" fg:w="520"/><text x="98.3353%" y="79.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (15) (2,646,856 Execution Cost Units, 96.55%)</title><rect x="1.5514%" y="85" width="96.5528%" height="15" fill="rgb(213,28,5)" fg:x="42530" fg:w="2646856"/><text x="1.8014%" y="95.50">Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (15)</text></g><g><title>OpenSubstate::GlobalPackage(10) (40,002 Execution Cost Units, 1.46%)</title><rect x="98.1042%" y="85" width="1.4592%" height="15" fill="rgb(215,77,49)" fg:x="2689386" fg:w="40002"/><text x="98.3542%" y="95.50"></text></g><g><title>OpenSubstate::GlobalPackage(12) (349 Execution Cost Units, 0.01%)</title><rect x="99.5634%" y="85" width="0.0127%" height="15" fill="rgb(248,100,22)" fg:x="2729388" fg:w="349"/><text x="99.8134%" y="95.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(551) (361 Execution Cost Units, 0.01%)</title><rect x="99.5762%" y="85" width="0.0132%" height="15" fill="rgb(208,67,9)" fg:x="2729737" fg:w="361"/><text x="99.8262%" y="95.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(558) (463 Execution Cost Units, 0.02%)</title><rect x="99.5893%" y="85" width="0.0169%" height="15" fill="rgb(219,133,21)" fg:x="2730098" fg:w="463"/><text x="99.8393%" y="95.50"></text></g><g><title>ValidateTxPayload(0) (3,000 Execution Cost Units, 0.11%)</title><rect x="99.6251%" y="85" width="0.1094%" height="15" fill="rgb(246,46,29)" fg:x="2731080" fg:w="3000"/><text x="99.8751%" y="95.50"></text></g><g><title>VerifyTxSignatures(1) (7,000 Execution Cost Units, 0.26%)</title><rect x="99.7346%" y="85" width="0.2553%" height="15" fill="rgb(246,185,52)" fg:x="2734080" fg:w="7000"/><text x="99.9846%" y="95.50"></text></g><g><title>WriteSubstate(553) (276 Execution Cost Units, 0.01%)</title><rect x="99.9899%" y="85" width="0.0101%" height="15" fill="rgb(252,136,11)" fg:x="2741080" fg:w="276"/><text x="100.2399%" y="95.50"></text></g><g><title>all (2,741,356 Execution Cost Units, 100%)</title><rect x="0.0000%" y="101" width="100.0000%" height="15" fill="rgb(219,138,53)" fg:x="0" fg:w="2741356"/><text x="0.2500%" y="111.50"></text></g></svg></svg>