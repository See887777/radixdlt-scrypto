<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="150" onload="init(evt)" viewBox="0 0 1200 150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="150" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">faucet-lock-fee</text><text id="details" fill="rgb(0,0,0)" x="10" y="133.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="133.00"> </text><svg id="frames" x="10" width="1180" total_samples="2691345"><g><title>CreateNode(1) (674 Execution Cost Units, 0.03%)</title><rect x="0.0180%" y="85" width="0.0250%" height="15" fill="rgb(227,0,7)" fg:x="484" fg:w="674"/><text x="0.2680%" y="95.50"></text></g><g><title>DropNode(560) (1,361 Execution Cost Units, 0.05%)</title><rect x="0.0430%" y="85" width="0.0506%" height="15" fill="rgb(217,0,24)" fg:x="1158" fg:w="1361"/><text x="0.2930%" y="95.50"></text></g><g><title>CreateNode(44) (644 Execution Cost Units, 0.02%)</title><rect x="0.1863%" y="69" width="0.0239%" height="15" fill="rgb(221,193,54)" fg:x="5015" fg:w="644"/><text x="0.4363%" y="79.50"></text></g><g><title>CreateNode(460) (918 Execution Cost Units, 0.03%)</title><rect x="0.2103%" y="69" width="0.0341%" height="15" fill="rgb(248,212,6)" fg:x="5659" fg:w="918"/><text x="0.4603%" y="79.50"></text></g><g><title>CreateNode(58) (918 Execution Cost Units, 0.03%)</title><rect x="0.2444%" y="69" width="0.0341%" height="15" fill="rgb(208,68,35)" fg:x="6577" fg:w="918"/><text x="0.4944%" y="79.50"></text></g><g><title>DropNode(458) (1,605 Execution Cost Units, 0.06%)</title><rect x="0.2785%" y="69" width="0.0596%" height="15" fill="rgb(232,128,0)" fg:x="7495" fg:w="1605"/><text x="0.5285%" y="79.50"></text></g><g><title>DropNode(545) (1,605 Execution Cost Units, 0.06%)</title><rect x="0.3381%" y="69" width="0.0596%" height="15" fill="rgb(207,160,47)" fg:x="9100" fg:w="1605"/><text x="0.5881%" y="79.50"></text></g><g><title>DropNode(529) (1,331 Execution Cost Units, 0.05%)</title><rect x="0.4471%" y="53" width="0.0495%" height="15" fill="rgb(228,23,34)" fg:x="12032" fg:w="1331"/><text x="0.6971%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(484) (541 Execution Cost Units, 0.02%)</title><rect x="0.4965%" y="53" width="0.0201%" height="15" fill="rgb(218,30,26)" fg:x="13363" fg:w="541"/><text x="0.7465%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(488) (40,001 Execution Cost Units, 1.49%)</title><rect x="0.5166%" y="53" width="1.4863%" height="15" fill="rgb(220,122,19)" fg:x="13904" fg:w="40001"/><text x="0.7666%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(490) (339 Execution Cost Units, 0.01%)</title><rect x="2.0029%" y="53" width="0.0126%" height="15" fill="rgb(250,228,42)" fg:x="53905" fg:w="339"/><text x="2.2529%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(494) (40,082 Execution Cost Units, 1.49%)</title><rect x="2.0155%" y="53" width="1.4893%" height="15" fill="rgb(240,193,28)" fg:x="54244" fg:w="40082"/><text x="2.2655%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(496) (1,957 Execution Cost Units, 0.07%)</title><rect x="3.5048%" y="53" width="0.0727%" height="15" fill="rgb(216,20,37)" fg:x="94326" fg:w="1957"/><text x="3.7548%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(504) (339 Execution Cost Units, 0.01%)</title><rect x="3.5775%" y="53" width="0.0126%" height="15" fill="rgb(206,188,39)" fg:x="96283" fg:w="339"/><text x="3.8275%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(508) (355 Execution Cost Units, 0.01%)</title><rect x="3.5901%" y="53" width="0.0132%" height="15" fill="rgb(217,207,13)" fg:x="96622" fg:w="355"/><text x="3.8401%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(500) (461 Execution Cost Units, 0.02%)</title><rect x="3.6033%" y="53" width="0.0171%" height="15" fill="rgb(231,73,38)" fg:x="96977" fg:w="461"/><text x="3.8533%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(513) (333 Execution Cost Units, 0.01%)</title><rect x="3.6204%" y="53" width="0.0124%" height="15" fill="rgb(225,20,46)" fg:x="97438" fg:w="333"/><text x="3.8704%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(519) (461 Execution Cost Units, 0.02%)</title><rect x="3.6328%" y="53" width="0.0171%" height="15" fill="rgb(210,31,41)" fg:x="97771" fg:w="461"/><text x="3.8828%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(524) (461 Execution Cost Units, 0.02%)</title><rect x="3.6499%" y="53" width="0.0171%" height="15" fill="rgb(221,200,47)" fg:x="98232" fg:w="461"/><text x="3.8999%" y="63.50"></text></g><g><title>ReadSubstate(485) (351 Execution Cost Units, 0.01%)</title><rect x="3.6671%" y="53" width="0.0130%" height="15" fill="rgb(226,26,5)" fg:x="98693" fg:w="351"/><text x="3.9171%" y="63.50"></text></g><g><title>ReadSubstate(497) (1,767 Execution Cost Units, 0.07%)</title><rect x="3.6856%" y="53" width="0.0657%" height="15" fill="rgb(249,33,26)" fg:x="99193" fg:w="1767"/><text x="3.9356%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_drop(511) (17,918 Execution Cost Units, 0.67%)</title><rect x="3.7913%" y="53" width="0.6658%" height="15" fill="rgb(235,183,28)" fg:x="102038" fg:w="17918"/><text x="4.0413%" y="63.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9&gt;::Worktop::Worktop_drop (481) (109,499 Execution Cost Units, 4.07%)</title><rect x="0.3978%" y="69" width="4.0686%" height="15" fill="rgb(221,5,38)" fg:x="10705" fg:w="109499"/><text x="0.6478%" y="79.50">Invo..</text></g><g><title>CreateNode(175) (980 Execution Cost Units, 0.04%)</title><rect x="4.6196%" y="53" width="0.0364%" height="15" fill="rgb(247,18,42)" fg:x="124329" fg:w="980"/><text x="4.8696%" y="63.50"></text></g><g><title>CreateNode(308) (980 Execution Cost Units, 0.04%)</title><rect x="4.6560%" y="53" width="0.0364%" height="15" fill="rgb(241,131,45)" fg:x="125309" fg:w="980"/><text x="4.9060%" y="63.50"></text></g><g><title>DropNode(278) (1,667 Execution Cost Units, 0.06%)</title><rect x="4.6924%" y="53" width="0.0619%" height="15" fill="rgb(249,31,29)" fg:x="126289" fg:w="1667"/><text x="4.9424%" y="63.50"></text></g><g><title>DropNode(415) (1,667 Execution Cost Units, 0.06%)</title><rect x="4.7544%" y="53" width="0.0619%" height="15" fill="rgb(225,111,53)" fg:x="127956" fg:w="1667"/><text x="5.0044%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(198) (40,011 Execution Cost Units, 1.49%)</title><rect x="4.8743%" y="37" width="1.4867%" height="15" fill="rgb(238,160,17)" fg:x="131183" fg:w="40011"/><text x="5.1243%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(200) (541 Execution Cost Units, 0.02%)</title><rect x="6.3609%" y="37" width="0.0201%" height="15" fill="rgb(214,148,48)" fg:x="171194" fg:w="541"/><text x="6.6109%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(204) (40,001 Execution Cost Units, 1.49%)</title><rect x="6.3810%" y="37" width="1.4863%" height="15" fill="rgb(232,36,49)" fg:x="171735" fg:w="40001"/><text x="6.6310%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(206) (339 Execution Cost Units, 0.01%)</title><rect x="7.8673%" y="37" width="0.0126%" height="15" fill="rgb(209,103,24)" fg:x="211736" fg:w="339"/><text x="8.1173%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(210) (40,293 Execution Cost Units, 1.50%)</title><rect x="7.8799%" y="37" width="1.4971%" height="15" fill="rgb(229,88,8)" fg:x="212075" fg:w="40293"/><text x="8.1299%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(212) (6,171 Execution Cost Units, 0.23%)</title><rect x="9.3770%" y="37" width="0.2293%" height="15" fill="rgb(213,181,19)" fg:x="252368" fg:w="6171"/><text x="9.6270%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(220) (40,179 Execution Cost Units, 1.49%)</title><rect x="9.6063%" y="37" width="1.4929%" height="15" fill="rgb(254,191,54)" fg:x="258539" fg:w="40179"/><text x="9.8563%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(222) (3,883 Execution Cost Units, 0.14%)</title><rect x="11.0992%" y="37" width="0.1443%" height="15" fill="rgb(241,83,37)" fg:x="298718" fg:w="3883"/><text x="11.3492%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(226) (40,001 Execution Cost Units, 1.49%)</title><rect x="11.2435%" y="37" width="1.4863%" height="15" fill="rgb(233,36,39)" fg:x="302601" fg:w="40001"/><text x="11.4935%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(228) (339 Execution Cost Units, 0.01%)</title><rect x="12.7298%" y="37" width="0.0126%" height="15" fill="rgb(226,3,54)" fg:x="342602" fg:w="339"/><text x="12.9798%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(232) (40,002 Execution Cost Units, 1.49%)</title><rect x="12.7424%" y="37" width="1.4863%" height="15" fill="rgb(245,192,40)" fg:x="342941" fg:w="40002"/><text x="12.9924%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(234) (355 Execution Cost Units, 0.01%)</title><rect x="14.2287%" y="37" width="0.0132%" height="15" fill="rgb(238,167,29)" fg:x="382943" fg:w="355"/><text x="14.4787%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(216) (535 Execution Cost Units, 0.02%)</title><rect x="14.2419%" y="37" width="0.0199%" height="15" fill="rgb(232,182,51)" fg:x="383298" fg:w="535"/><text x="14.4919%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(239) (535 Execution Cost Units, 0.02%)</title><rect x="14.2618%" y="37" width="0.0199%" height="15" fill="rgb(231,60,39)" fg:x="383833" fg:w="535"/><text x="14.5118%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(243) (40,003 Execution Cost Units, 1.49%)</title><rect x="14.2816%" y="37" width="1.4864%" height="15" fill="rgb(208,69,12)" fg:x="384368" fg:w="40003"/><text x="14.5316%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(245) (377 Execution Cost Units, 0.01%)</title><rect x="15.7680%" y="37" width="0.0140%" height="15" fill="rgb(235,93,37)" fg:x="424371" fg:w="377"/><text x="16.0180%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(249) (535 Execution Cost Units, 0.02%)</title><rect x="15.7820%" y="37" width="0.0199%" height="15" fill="rgb(213,116,39)" fg:x="424748" fg:w="535"/><text x="16.0320%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(255) (339 Execution Cost Units, 0.01%)</title><rect x="15.8019%" y="37" width="0.0126%" height="15" fill="rgb(222,207,29)" fg:x="425283" fg:w="339"/><text x="16.0519%" y="47.50"></text></g><g><title>ReadSubstate(201) (351 Execution Cost Units, 0.01%)</title><rect x="15.8145%" y="37" width="0.0130%" height="15" fill="rgb(206,96,30)" fg:x="425622" fg:w="351"/><text x="16.0645%" y="47.50"></text></g><g><title>ReadSubstate(213) (5,981 Execution Cost Units, 0.22%)</title><rect x="15.8331%" y="37" width="0.2222%" height="15" fill="rgb(218,138,4)" fg:x="426122" fg:w="5981"/><text x="16.0831%" y="47.50"></text></g><g><title>ReadSubstate(217) (345 Execution Cost Units, 0.01%)</title><rect x="16.0553%" y="37" width="0.0128%" height="15" fill="rgb(250,191,14)" fg:x="432103" fg:w="345"/><text x="16.3053%" y="47.50"></text></g><g><title>ReadSubstate(223) (3,693 Execution Cost Units, 0.14%)</title><rect x="16.0681%" y="37" width="0.1372%" height="15" fill="rgb(239,60,40)" fg:x="432448" fg:w="3693"/><text x="16.3181%" y="47.50"></text></g><g><title>ReadSubstate(240) (345 Execution Cost Units, 0.01%)</title><rect x="16.2170%" y="37" width="0.0128%" height="15" fill="rgb(206,27,48)" fg:x="436455" fg:w="345"/><text x="16.4670%" y="47.50"></text></g><g><title>ReadSubstate(250) (345 Execution Cost Units, 0.01%)</title><rect x="16.2368%" y="37" width="0.0128%" height="15" fill="rgb(225,35,8)" fg:x="436987" fg:w="345"/><text x="16.4868%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::get_amount (195) (322,160 Execution Cost Units, 11.97%)</title><rect x="4.8163%" y="53" width="11.9702%" height="15" fill="rgb(250,213,24)" fg:x="129623" fg:w="322160"/><text x="5.0663%" y="63.50">Invocation: Method..</text></g><g><title>RunNativeCode::get_amount_FungibleVault(237) (14,451 Execution Cost Units, 0.54%)</title><rect x="16.2496%" y="37" width="0.5369%" height="15" fill="rgb(247,123,22)" fg:x="437332" fg:w="14451"/><text x="16.4996%" y="47.50"></text></g><g><title>EmitEvent(388) (556 Execution Cost Units, 0.02%)</title><rect x="16.8587%" y="37" width="0.0207%" height="15" fill="rgb(231,138,38)" fg:x="453725" fg:w="556"/><text x="17.1087%" y="47.50"></text></g><g><title>LockFee(387) (500 Execution Cost Units, 0.02%)</title><rect x="16.8793%" y="37" width="0.0186%" height="15" fill="rgb(231,145,46)" fg:x="454281" fg:w="500"/><text x="17.1293%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(357) (40,014 Execution Cost Units, 1.49%)</title><rect x="16.8979%" y="37" width="1.4868%" height="15" fill="rgb(251,118,11)" fg:x="454781" fg:w="40014"/><text x="17.1479%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(359) (593 Execution Cost Units, 0.02%)</title><rect x="18.3847%" y="37" width="0.0220%" height="15" fill="rgb(217,147,25)" fg:x="494795" fg:w="593"/><text x="18.6347%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(372) (593 Execution Cost Units, 0.02%)</title><rect x="18.4067%" y="37" width="0.0220%" height="15" fill="rgb(247,81,37)" fg:x="495388" fg:w="593"/><text x="18.6567%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(382) (40,001 Execution Cost Units, 1.49%)</title><rect x="18.4287%" y="37" width="1.4863%" height="15" fill="rgb(209,12,38)" fg:x="495981" fg:w="40001"/><text x="18.6787%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(384) (331 Execution Cost Units, 0.01%)</title><rect x="19.9150%" y="37" width="0.0123%" height="15" fill="rgb(227,1,9)" fg:x="535982" fg:w="331"/><text x="20.1650%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(331) (541 Execution Cost Units, 0.02%)</title><rect x="19.9273%" y="37" width="0.0201%" height="15" fill="rgb(248,47,43)" fg:x="536313" fg:w="541"/><text x="20.1773%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(335) (339 Execution Cost Units, 0.01%)</title><rect x="19.9474%" y="37" width="0.0126%" height="15" fill="rgb(221,10,30)" fg:x="536854" fg:w="339"/><text x="20.1974%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(343) (339 Execution Cost Units, 0.01%)</title><rect x="19.9600%" y="37" width="0.0126%" height="15" fill="rgb(210,229,1)" fg:x="537193" fg:w="339"/><text x="20.2100%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(347) (355 Execution Cost Units, 0.01%)</title><rect x="19.9726%" y="37" width="0.0132%" height="15" fill="rgb(222,148,37)" fg:x="537532" fg:w="355"/><text x="20.2226%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(376) (40,292 Execution Cost Units, 1.50%)</title><rect x="19.9858%" y="37" width="1.4971%" height="15" fill="rgb(234,67,33)" fg:x="537887" fg:w="40292"/><text x="20.2358%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(378) (6,153 Execution Cost Units, 0.23%)</title><rect x="21.4829%" y="37" width="0.2286%" height="15" fill="rgb(247,98,35)" fg:x="578179" fg:w="6153"/><text x="21.7329%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(339) (535 Execution Cost Units, 0.02%)</title><rect x="21.7115%" y="37" width="0.0199%" height="15" fill="rgb(247,138,52)" fg:x="584332" fg:w="535"/><text x="21.9615%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(353) (535 Execution Cost Units, 0.02%)</title><rect x="21.7314%" y="37" width="0.0199%" height="15" fill="rgb(213,79,30)" fg:x="584867" fg:w="535"/><text x="21.9814%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(364) (535 Execution Cost Units, 0.02%)</title><rect x="21.7513%" y="37" width="0.0199%" height="15" fill="rgb(246,177,23)" fg:x="585402" fg:w="535"/><text x="22.0013%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(368) (535 Execution Cost Units, 0.02%)</title><rect x="21.7712%" y="37" width="0.0199%" height="15" fill="rgb(230,62,27)" fg:x="585937" fg:w="535"/><text x="22.0212%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(390) (535 Execution Cost Units, 0.02%)</title><rect x="21.7910%" y="37" width="0.0199%" height="15" fill="rgb(216,154,8)" fg:x="586472" fg:w="535"/><text x="22.0410%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(394) (377 Execution Cost Units, 0.01%)</title><rect x="21.8109%" y="37" width="0.0140%" height="15" fill="rgb(244,35,45)" fg:x="587007" fg:w="377"/><text x="22.0609%" y="47.50"></text></g><g><title>QueryActor(351) (500 Execution Cost Units, 0.02%)</title><rect x="21.8249%" y="37" width="0.0186%" height="15" fill="rgb(251,115,12)" fg:x="587384" fg:w="500"/><text x="22.0749%" y="47.50"></text></g><g><title>QueryActor(362) (500 Execution Cost Units, 0.02%)</title><rect x="21.8435%" y="37" width="0.0186%" height="15" fill="rgb(240,54,50)" fg:x="587884" fg:w="500"/><text x="22.0935%" y="47.50"></text></g><g><title>ReadSubstate(332) (351 Execution Cost Units, 0.01%)</title><rect x="21.8621%" y="37" width="0.0130%" height="15" fill="rgb(233,84,52)" fg:x="588384" fg:w="351"/><text x="22.1121%" y="47.50"></text></g><g><title>ReadSubstate(340) (345 Execution Cost Units, 0.01%)</title><rect x="21.8807%" y="37" width="0.0128%" height="15" fill="rgb(207,117,47)" fg:x="588884" fg:w="345"/><text x="22.1307%" y="47.50"></text></g><g><title>ReadSubstate(354) (345 Execution Cost Units, 0.01%)</title><rect x="21.9051%" y="37" width="0.0128%" height="15" fill="rgb(249,43,39)" fg:x="589543" fg:w="345"/><text x="22.1551%" y="47.50"></text></g><g><title>ReadSubstate(360) (403 Execution Cost Units, 0.01%)</title><rect x="21.9180%" y="37" width="0.0150%" height="15" fill="rgb(209,38,44)" fg:x="589888" fg:w="403"/><text x="22.1680%" y="47.50"></text></g><g><title>ReadSubstate(365) (345 Execution Cost Units, 0.01%)</title><rect x="21.9329%" y="37" width="0.0128%" height="15" fill="rgb(236,212,23)" fg:x="590291" fg:w="345"/><text x="22.1829%" y="47.50"></text></g><g><title>ReadSubstate(369) (345 Execution Cost Units, 0.01%)</title><rect x="21.9458%" y="37" width="0.0128%" height="15" fill="rgb(242,79,21)" fg:x="590636" fg:w="345"/><text x="22.1958%" y="47.50"></text></g><g><title>ReadSubstate(373) (403 Execution Cost Units, 0.01%)</title><rect x="21.9586%" y="37" width="0.0150%" height="15" fill="rgb(211,96,35)" fg:x="590981" fg:w="403"/><text x="22.2086%" y="47.50"></text></g><g><title>ReadSubstate(379) (5,963 Execution Cost Units, 0.22%)</title><rect x="21.9735%" y="37" width="0.2216%" height="15" fill="rgb(253,215,40)" fg:x="591384" fg:w="5963"/><text x="22.2235%" y="47.50"></text></g><g><title>ReadSubstate(391) (345 Execution Cost Units, 0.01%)</title><rect x="22.2003%" y="37" width="0.0128%" height="15" fill="rgb(211,81,21)" fg:x="597488" fg:w="345"/><text x="22.4503%" y="47.50"></text></g><g><title>RunNativeCode::lock_fee(350) (45,243 Execution Cost Units, 1.68%)</title><rect x="22.2271%" y="37" width="1.6811%" height="15" fill="rgb(208,190,38)" fg:x="598207" fg:w="45243"/><text x="22.4771%" y="47.50"></text></g><g><title>WriteSubstate(397) (292 Execution Cost Units, 0.01%)</title><rect x="23.9081%" y="37" width="0.0108%" height="15" fill="rgb(235,213,38)" fg:x="643450" fg:w="292"/><text x="24.1581%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::lock_fee (328) (191,959 Execution Cost Units, 7.13%)</title><rect x="16.7865%" y="53" width="7.1325%" height="15" fill="rgb(237,122,38)" fg:x="451783" fg:w="191959"/><text x="17.0365%" y="63.50">Invocation..</text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(323) (40,001 Execution Cost Units, 1.49%)</title><rect x="23.9190%" y="53" width="1.4863%" height="15" fill="rgb(244,218,35)" fg:x="643742" fg:w="40001"/><text x="24.1690%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(325) (339 Execution Cost Units, 0.01%)</title><rect x="25.4053%" y="53" width="0.0126%" height="15" fill="rgb(240,68,47)" fg:x="683743" fg:w="339"/><text x="25.6553%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(104) (539 Execution Cost Units, 0.02%)</title><rect x="25.4178%" y="53" width="0.0200%" height="15" fill="rgb(210,16,53)" fg:x="684082" fg:w="539"/><text x="25.6678%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(136) (539 Execution Cost Units, 0.02%)</title><rect x="25.4379%" y="53" width="0.0200%" height="15" fill="rgb(235,124,12)" fg:x="684621" fg:w="539"/><text x="25.6879%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(140) (40,007 Execution Cost Units, 1.49%)</title><rect x="25.4579%" y="53" width="1.4865%" height="15" fill="rgb(224,169,11)" fg:x="685160" fg:w="40007"/><text x="25.7079%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(142) (449 Execution Cost Units, 0.02%)</title><rect x="26.9444%" y="53" width="0.0167%" height="15" fill="rgb(250,166,2)" fg:x="725167" fg:w="449"/><text x="27.1944%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(100) (1,819 Execution Cost Units, 0.07%)</title><rect x="26.9611%" y="53" width="0.0676%" height="15" fill="rgb(242,216,29)" fg:x="725616" fg:w="1819"/><text x="27.2111%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(108) (40,035 Execution Cost Units, 1.49%)</title><rect x="27.0287%" y="53" width="1.4875%" height="15" fill="rgb(230,116,27)" fg:x="727435" fg:w="40035"/><text x="27.2787%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(110) (1,003 Execution Cost Units, 0.04%)</title><rect x="28.5162%" y="53" width="0.0373%" height="15" fill="rgb(228,99,48)" fg:x="767470" fg:w="1003"/><text x="28.7662%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(114) (40,001 Execution Cost Units, 1.49%)</title><rect x="28.5535%" y="53" width="1.4863%" height="15" fill="rgb(253,11,6)" fg:x="768473" fg:w="40001"/><text x="28.8035%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(116) (339 Execution Cost Units, 0.01%)</title><rect x="30.0398%" y="53" width="0.0126%" height="15" fill="rgb(247,143,39)" fg:x="808474" fg:w="339"/><text x="30.2898%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(120) (57,695 Execution Cost Units, 2.14%)</title><rect x="30.0524%" y="53" width="2.1437%" height="15" fill="rgb(236,97,10)" fg:x="808813" fg:w="57695"/><text x="30.3024%" y="63.50">O..</text></g><g><title>OpenSubstate::GlobalPackage(122) (354,209 Execution Cost Units, 13.16%)</title><rect x="32.1961%" y="53" width="13.1610%" height="15" fill="rgb(233,208,19)" fg:x="866508" fg:w="354209"/><text x="32.4461%" y="63.50">OpenSubstate::Global..</text></g><g><title>OpenSubstate::GlobalPackage(186) (40,027 Execution Cost Units, 1.49%)</title><rect x="45.3571%" y="53" width="1.4872%" height="15" fill="rgb(216,164,2)" fg:x="1220717" fg:w="40027"/><text x="45.6071%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(188) (853 Execution Cost Units, 0.03%)</title><rect x="46.8444%" y="53" width="0.0317%" height="15" fill="rgb(220,129,5)" fg:x="1260744" fg:w="853"/><text x="47.0944%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(271) (40,221 Execution Cost Units, 1.49%)</title><rect x="46.8761%" y="53" width="1.4945%" height="15" fill="rgb(242,17,10)" fg:x="1261597" fg:w="40221"/><text x="47.1261%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(273) (4,739 Execution Cost Units, 0.18%)</title><rect x="48.3705%" y="53" width="0.1761%" height="15" fill="rgb(242,107,0)" fg:x="1301818" fg:w="4739"/><text x="48.6205%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(80) (40,013 Execution Cost Units, 1.49%)</title><rect x="48.5466%" y="53" width="1.4867%" height="15" fill="rgb(251,28,31)" fg:x="1306557" fg:w="40013"/><text x="48.7966%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(82) (573 Execution Cost Units, 0.02%)</title><rect x="50.0333%" y="53" width="0.0213%" height="15" fill="rgb(233,223,10)" fg:x="1346570" fg:w="573"/><text x="50.2833%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(86) (40,001 Execution Cost Units, 1.49%)</title><rect x="50.0546%" y="53" width="1.4863%" height="15" fill="rgb(215,21,27)" fg:x="1347143" fg:w="40001"/><text x="50.3046%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(88) (339 Execution Cost Units, 0.01%)</title><rect x="51.5409%" y="53" width="0.0126%" height="15" fill="rgb(232,23,21)" fg:x="1387144" fg:w="339"/><text x="51.7909%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(92) (40,001 Execution Cost Units, 1.49%)</title><rect x="51.5535%" y="53" width="1.4863%" height="15" fill="rgb(244,5,23)" fg:x="1387483" fg:w="40001"/><text x="51.8035%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(94) (339 Execution Cost Units, 0.01%)</title><rect x="53.0398%" y="53" width="0.0126%" height="15" fill="rgb(226,81,46)" fg:x="1427484" fg:w="339"/><text x="53.2898%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(98) (40,075 Execution Cost Units, 1.49%)</title><rect x="53.0524%" y="53" width="1.4890%" height="15" fill="rgb(247,70,30)" fg:x="1427823" fg:w="40075"/><text x="53.3024%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(162) (40,011 Execution Cost Units, 1.49%)</title><rect x="54.5414%" y="53" width="1.4867%" height="15" fill="rgb(212,68,19)" fg:x="1467898" fg:w="40011"/><text x="54.7914%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(164) (535 Execution Cost Units, 0.02%)</title><rect x="56.0281%" y="53" width="0.0199%" height="15" fill="rgb(240,187,13)" fg:x="1507909" fg:w="535"/><text x="56.2781%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(168) (535 Execution Cost Units, 0.02%)</title><rect x="56.0480%" y="53" width="0.0199%" height="15" fill="rgb(223,113,26)" fg:x="1508444" fg:w="535"/><text x="56.2980%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(182) (535 Execution Cost Units, 0.02%)</title><rect x="56.0678%" y="53" width="0.0199%" height="15" fill="rgb(206,192,2)" fg:x="1508979" fg:w="535"/><text x="56.3178%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(192) (535 Execution Cost Units, 0.02%)</title><rect x="56.0877%" y="53" width="0.0199%" height="15" fill="rgb(241,108,4)" fg:x="1509514" fg:w="535"/><text x="56.3377%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(297) (535 Execution Cost Units, 0.02%)</title><rect x="56.1076%" y="53" width="0.0199%" height="15" fill="rgb(247,173,49)" fg:x="1510049" fg:w="535"/><text x="56.3576%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(301) (535 Execution Cost Units, 0.02%)</title><rect x="56.1275%" y="53" width="0.0199%" height="15" fill="rgb(224,114,35)" fg:x="1510584" fg:w="535"/><text x="56.3775%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(315) (535 Execution Cost Units, 0.02%)</title><rect x="56.1474%" y="53" width="0.0199%" height="15" fill="rgb(245,159,27)" fg:x="1511119" fg:w="535"/><text x="56.3974%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(319) (535 Execution Cost Units, 0.02%)</title><rect x="56.1672%" y="53" width="0.0199%" height="15" fill="rgb(245,172,44)" fg:x="1511654" fg:w="535"/><text x="56.4172%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(431) (535 Execution Cost Units, 0.02%)</title><rect x="56.1871%" y="53" width="0.0199%" height="15" fill="rgb(236,23,11)" fg:x="1512189" fg:w="535"/><text x="56.4371%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(172) (605 Execution Cost Units, 0.02%)</title><rect x="56.2070%" y="53" width="0.0225%" height="15" fill="rgb(205,117,38)" fg:x="1512724" fg:w="605"/><text x="56.4570%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(260) (667 Execution Cost Units, 0.02%)</title><rect x="56.2295%" y="53" width="0.0248%" height="15" fill="rgb(237,72,25)" fg:x="1513329" fg:w="667"/><text x="56.4795%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(267) (463 Execution Cost Units, 0.02%)</title><rect x="56.2543%" y="53" width="0.0172%" height="15" fill="rgb(244,70,9)" fg:x="1513996" fg:w="463"/><text x="56.5043%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(305) (605 Execution Cost Units, 0.02%)</title><rect x="56.2715%" y="53" width="0.0225%" height="15" fill="rgb(217,125,39)" fg:x="1514459" fg:w="605"/><text x="56.5215%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(403) (667 Execution Cost Units, 0.02%)</title><rect x="56.2939%" y="53" width="0.0248%" height="15" fill="rgb(235,36,10)" fg:x="1515064" fg:w="667"/><text x="56.5439%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(410) (463 Execution Cost Units, 0.02%)</title><rect x="56.3187%" y="53" width="0.0172%" height="15" fill="rgb(251,123,47)" fg:x="1515731" fg:w="463"/><text x="56.5687%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(435) (40,011 Execution Cost Units, 1.49%)</title><rect x="56.3359%" y="53" width="1.4867%" height="15" fill="rgb(221,13,13)" fg:x="1516194" fg:w="40011"/><text x="56.5859%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(437) (525 Execution Cost Units, 0.02%)</title><rect x="57.8226%" y="53" width="0.0195%" height="15" fill="rgb(238,131,9)" fg:x="1556205" fg:w="525"/><text x="58.0726%" y="63.50"></text></g><g><title>PrepareWasmCode(125) (353,866 Execution Cost Units, 13.15%)</title><rect x="57.8430%" y="53" width="13.1483%" height="15" fill="rgb(211,50,8)" fg:x="1556754" fg:w="353866"/><text x="58.0930%" y="63.50">PrepareWasmCode(125)</text></g><g><title>ReadSubstate(101) (1,629 Execution Cost Units, 0.06%)</title><rect x="70.9913%" y="53" width="0.0605%" height="15" fill="rgb(245,182,24)" fg:x="1910620" fg:w="1629"/><text x="71.2413%" y="63.50"></text></g><g><title>ReadSubstate(105) (349 Execution Cost Units, 0.01%)</title><rect x="71.0518%" y="53" width="0.0130%" height="15" fill="rgb(242,14,37)" fg:x="1912249" fg:w="349"/><text x="71.3018%" y="63.50"></text></g><g><title>ReadSubstate(111) (813 Execution Cost Units, 0.03%)</title><rect x="71.0648%" y="53" width="0.0302%" height="15" fill="rgb(246,228,12)" fg:x="1912598" fg:w="813"/><text x="71.3148%" y="63.50"></text></g><g><title>ReadSubstate(123) (354,019 Execution Cost Units, 13.15%)</title><rect x="71.1005%" y="53" width="13.1540%" height="15" fill="rgb(213,55,15)" fg:x="1913560" fg:w="354019"/><text x="71.3505%" y="63.50">ReadSubstate(123)</text></g><g><title>ReadSubstate(137) (349 Execution Cost Units, 0.01%)</title><rect x="84.2545%" y="53" width="0.0130%" height="15" fill="rgb(209,9,3)" fg:x="2267579" fg:w="349"/><text x="84.5045%" y="63.50"></text></g><g><title>ReadSubstate(165) (345 Execution Cost Units, 0.01%)</title><rect x="84.2867%" y="53" width="0.0128%" height="15" fill="rgb(230,59,30)" fg:x="2268446" fg:w="345"/><text x="84.5367%" y="63.50"></text></g><g><title>ReadSubstate(169) (345 Execution Cost Units, 0.01%)</title><rect x="84.2995%" y="53" width="0.0128%" height="15" fill="rgb(209,121,21)" fg:x="2268791" fg:w="345"/><text x="84.5495%" y="63.50"></text></g><g><title>ReadSubstate(173) (367 Execution Cost Units, 0.01%)</title><rect x="84.3123%" y="53" width="0.0136%" height="15" fill="rgb(220,109,13)" fg:x="2269136" fg:w="367"/><text x="84.5623%" y="63.50"></text></g><g><title>ReadSubstate(183) (345 Execution Cost Units, 0.01%)</title><rect x="84.3260%" y="53" width="0.0128%" height="15" fill="rgb(232,18,1)" fg:x="2269503" fg:w="345"/><text x="84.5760%" y="63.50"></text></g><g><title>ReadSubstate(189) (663 Execution Cost Units, 0.02%)</title><rect x="84.3388%" y="53" width="0.0246%" height="15" fill="rgb(215,41,42)" fg:x="2269848" fg:w="663"/><text x="84.5888%" y="63.50"></text></g><g><title>ReadSubstate(193) (345 Execution Cost Units, 0.01%)</title><rect x="84.3634%" y="53" width="0.0128%" height="15" fill="rgb(224,123,36)" fg:x="2270511" fg:w="345"/><text x="84.6134%" y="63.50"></text></g><g><title>ReadSubstate(261) (429 Execution Cost Units, 0.02%)</title><rect x="84.3763%" y="53" width="0.0159%" height="15" fill="rgb(240,125,3)" fg:x="2270856" fg:w="429"/><text x="84.6263%" y="63.50"></text></g><g><title>ReadSubstate(274) (4,549 Execution Cost Units, 0.17%)</title><rect x="84.4006%" y="53" width="0.1690%" height="15" fill="rgb(205,98,50)" fg:x="2271510" fg:w="4549"/><text x="84.6506%" y="63.50"></text></g><g><title>ReadSubstate(298) (345 Execution Cost Units, 0.01%)</title><rect x="84.5696%" y="53" width="0.0128%" height="15" fill="rgb(205,185,37)" fg:x="2276059" fg:w="345"/><text x="84.8196%" y="63.50"></text></g><g><title>ReadSubstate(302) (345 Execution Cost Units, 0.01%)</title><rect x="84.5824%" y="53" width="0.0128%" height="15" fill="rgb(238,207,15)" fg:x="2276404" fg:w="345"/><text x="84.8324%" y="63.50"></text></g><g><title>ReadSubstate(306) (367 Execution Cost Units, 0.01%)</title><rect x="84.5952%" y="53" width="0.0136%" height="15" fill="rgb(213,199,42)" fg:x="2276749" fg:w="367"/><text x="84.8452%" y="63.50"></text></g><g><title>ReadSubstate(316) (345 Execution Cost Units, 0.01%)</title><rect x="84.6088%" y="53" width="0.0128%" height="15" fill="rgb(235,201,11)" fg:x="2277116" fg:w="345"/><text x="84.8588%" y="63.50"></text></g><g><title>ReadSubstate(320) (345 Execution Cost Units, 0.01%)</title><rect x="84.6217%" y="53" width="0.0128%" height="15" fill="rgb(207,46,11)" fg:x="2277461" fg:w="345"/><text x="84.8717%" y="63.50"></text></g><g><title>ReadSubstate(404) (429 Execution Cost Units, 0.02%)</title><rect x="84.6400%" y="53" width="0.0159%" height="15" fill="rgb(241,35,35)" fg:x="2277955" fg:w="429"/><text x="84.8900%" y="63.50"></text></g><g><title>ReadSubstate(432) (345 Execution Cost Units, 0.01%)</title><rect x="84.6643%" y="53" width="0.0128%" height="15" fill="rgb(243,32,47)" fg:x="2278609" fg:w="345"/><text x="84.9143%" y="63.50"></text></g><g><title>ReadSubstate(438) (335 Execution Cost Units, 0.01%)</title><rect x="84.6771%" y="53" width="0.0124%" height="15" fill="rgb(247,202,23)" fg:x="2278954" fg:w="335"/><text x="84.9271%" y="63.50"></text></g><g><title>ReadSubstate(83) (383 Execution Cost Units, 0.01%)</title><rect x="84.6896%" y="53" width="0.0142%" height="15" fill="rgb(219,102,11)" fg:x="2279289" fg:w="383"/><text x="84.9396%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(126) (590 Execution Cost Units, 0.02%)</title><rect x="84.7149%" y="53" width="0.0219%" height="15" fill="rgb(243,110,44)" fg:x="2279970" fg:w="590"/><text x="84.9649%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(127) (334 Execution Cost Units, 0.01%)</title><rect x="84.7368%" y="53" width="0.0124%" height="15" fill="rgb(222,74,54)" fg:x="2280560" fg:w="334"/><text x="84.9868%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(128) (5,004 Execution Cost Units, 0.19%)</title><rect x="84.7492%" y="53" width="0.1859%" height="15" fill="rgb(216,99,12)" fg:x="2280894" fg:w="5004"/><text x="84.9992%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(129) (334 Execution Cost Units, 0.01%)</title><rect x="84.9352%" y="53" width="0.0124%" height="15" fill="rgb(226,22,26)" fg:x="2285898" fg:w="334"/><text x="85.1852%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(130) (353 Execution Cost Units, 0.01%)</title><rect x="84.9476%" y="53" width="0.0131%" height="15" fill="rgb(217,163,10)" fg:x="2286232" fg:w="353"/><text x="85.1976%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(131) (358 Execution Cost Units, 0.01%)</title><rect x="84.9607%" y="53" width="0.0133%" height="15" fill="rgb(213,25,53)" fg:x="2286585" fg:w="358"/><text x="85.2107%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(132) (349 Execution Cost Units, 0.01%)</title><rect x="84.9740%" y="53" width="0.0130%" height="15" fill="rgb(252,105,26)" fg:x="2286943" fg:w="349"/><text x="85.2240%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(133) (347 Execution Cost Units, 0.01%)</title><rect x="84.9869%" y="53" width="0.0129%" height="15" fill="rgb(220,39,43)" fg:x="2287292" fg:w="347"/><text x="85.2369%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(134) (341 Execution Cost Units, 0.01%)</title><rect x="84.9998%" y="53" width="0.0127%" height="15" fill="rgb(229,68,48)" fg:x="2287639" fg:w="341"/><text x="85.2498%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(145) (338 Execution Cost Units, 0.01%)</title><rect x="85.0125%" y="53" width="0.0126%" height="15" fill="rgb(252,8,32)" fg:x="2287980" fg:w="338"/><text x="85.2625%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(146) (336 Execution Cost Units, 0.01%)</title><rect x="85.0251%" y="53" width="0.0125%" height="15" fill="rgb(223,20,43)" fg:x="2288318" fg:w="336"/><text x="85.2751%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(147) (341 Execution Cost Units, 0.01%)</title><rect x="85.0376%" y="53" width="0.0127%" height="15" fill="rgb(229,81,49)" fg:x="2288654" fg:w="341"/><text x="85.2876%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(148) (343 Execution Cost Units, 0.01%)</title><rect x="85.0502%" y="53" width="0.0127%" height="15" fill="rgb(236,28,36)" fg:x="2288995" fg:w="343"/><text x="85.3002%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(149) (344 Execution Cost Units, 0.01%)</title><rect x="85.0630%" y="53" width="0.0128%" height="15" fill="rgb(249,185,26)" fg:x="2289338" fg:w="344"/><text x="85.3130%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(150) (394 Execution Cost Units, 0.01%)</title><rect x="85.0758%" y="53" width="0.0146%" height="15" fill="rgb(249,174,33)" fg:x="2289682" fg:w="394"/><text x="85.3258%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(151) (337 Execution Cost Units, 0.01%)</title><rect x="85.0904%" y="53" width="0.0125%" height="15" fill="rgb(233,201,37)" fg:x="2290076" fg:w="337"/><text x="85.3404%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(152) (338 Execution Cost Units, 0.01%)</title><rect x="85.1029%" y="53" width="0.0126%" height="15" fill="rgb(221,78,26)" fg:x="2290413" fg:w="338"/><text x="85.3529%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(153) (380 Execution Cost Units, 0.01%)</title><rect x="85.1155%" y="53" width="0.0141%" height="15" fill="rgb(250,127,30)" fg:x="2290751" fg:w="380"/><text x="85.3655%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(154) (343 Execution Cost Units, 0.01%)</title><rect x="85.1296%" y="53" width="0.0127%" height="15" fill="rgb(230,49,44)" fg:x="2291131" fg:w="343"/><text x="85.3796%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(155) (338 Execution Cost Units, 0.01%)</title><rect x="85.1423%" y="53" width="0.0126%" height="15" fill="rgb(229,67,23)" fg:x="2291474" fg:w="338"/><text x="85.3923%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(156) (339 Execution Cost Units, 0.01%)</title><rect x="85.1549%" y="53" width="0.0126%" height="15" fill="rgb(249,83,47)" fg:x="2291812" fg:w="339"/><text x="85.4049%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(157) (340 Execution Cost Units, 0.01%)</title><rect x="85.1675%" y="53" width="0.0126%" height="15" fill="rgb(215,43,3)" fg:x="2292151" fg:w="340"/><text x="85.4175%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(158) (366 Execution Cost Units, 0.01%)</title><rect x="85.1801%" y="53" width="0.0136%" height="15" fill="rgb(238,154,13)" fg:x="2292491" fg:w="366"/><text x="85.4301%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(159) (340 Execution Cost Units, 0.01%)</title><rect x="85.1937%" y="53" width="0.0126%" height="15" fill="rgb(219,56,2)" fg:x="2292857" fg:w="340"/><text x="85.4437%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(160) (333 Execution Cost Units, 0.01%)</title><rect x="85.2064%" y="53" width="0.0124%" height="15" fill="rgb(233,0,4)" fg:x="2293197" fg:w="333"/><text x="85.4564%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(279) (335 Execution Cost Units, 0.01%)</title><rect x="85.2187%" y="53" width="0.0124%" height="15" fill="rgb(235,30,7)" fg:x="2293530" fg:w="335"/><text x="85.4687%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(280) (352 Execution Cost Units, 0.01%)</title><rect x="85.2312%" y="53" width="0.0131%" height="15" fill="rgb(250,79,13)" fg:x="2293865" fg:w="352"/><text x="85.4812%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(281) (338 Execution Cost Units, 0.01%)</title><rect x="85.2443%" y="53" width="0.0126%" height="15" fill="rgb(211,146,34)" fg:x="2294217" fg:w="338"/><text x="85.4943%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(282) (335 Execution Cost Units, 0.01%)</title><rect x="85.2568%" y="53" width="0.0124%" height="15" fill="rgb(228,22,38)" fg:x="2294555" fg:w="335"/><text x="85.5068%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(283) (352 Execution Cost Units, 0.01%)</title><rect x="85.2693%" y="53" width="0.0131%" height="15" fill="rgb(235,168,5)" fg:x="2294890" fg:w="352"/><text x="85.5193%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(284) (484 Execution Cost Units, 0.02%)</title><rect x="85.2823%" y="53" width="0.0180%" height="15" fill="rgb(221,155,16)" fg:x="2295242" fg:w="484"/><text x="85.5323%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(285) (352 Execution Cost Units, 0.01%)</title><rect x="85.3003%" y="53" width="0.0131%" height="15" fill="rgb(215,215,53)" fg:x="2295726" fg:w="352"/><text x="85.5503%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(286) (343 Execution Cost Units, 0.01%)</title><rect x="85.3134%" y="53" width="0.0127%" height="15" fill="rgb(223,4,10)" fg:x="2296078" fg:w="343"/><text x="85.5634%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(287) (445 Execution Cost Units, 0.02%)</title><rect x="85.3261%" y="53" width="0.0165%" height="15" fill="rgb(234,103,6)" fg:x="2296421" fg:w="445"/><text x="85.5761%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(288) (341 Execution Cost Units, 0.01%)</title><rect x="85.3427%" y="53" width="0.0127%" height="15" fill="rgb(227,97,0)" fg:x="2296866" fg:w="341"/><text x="85.5927%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(289) (417 Execution Cost Units, 0.02%)</title><rect x="85.3554%" y="53" width="0.0155%" height="15" fill="rgb(234,150,53)" fg:x="2297207" fg:w="417"/><text x="85.6054%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(290) (337 Execution Cost Units, 0.01%)</title><rect x="85.3708%" y="53" width="0.0125%" height="15" fill="rgb(228,201,54)" fg:x="2297624" fg:w="337"/><text x="85.6208%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(291) (395 Execution Cost Units, 0.01%)</title><rect x="85.3834%" y="53" width="0.0147%" height="15" fill="rgb(222,22,37)" fg:x="2297961" fg:w="395"/><text x="85.6334%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(292) (336 Execution Cost Units, 0.01%)</title><rect x="85.3980%" y="53" width="0.0125%" height="15" fill="rgb(237,53,32)" fg:x="2298356" fg:w="336"/><text x="85.6480%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(293) (337 Execution Cost Units, 0.01%)</title><rect x="85.4105%" y="53" width="0.0125%" height="15" fill="rgb(233,25,53)" fg:x="2298692" fg:w="337"/><text x="85.6605%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(294) (353 Execution Cost Units, 0.01%)</title><rect x="85.4231%" y="53" width="0.0131%" height="15" fill="rgb(210,40,34)" fg:x="2299029" fg:w="353"/><text x="85.6731%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(295) (361 Execution Cost Units, 0.01%)</title><rect x="85.4362%" y="53" width="0.0134%" height="15" fill="rgb(241,220,44)" fg:x="2299382" fg:w="361"/><text x="85.6862%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(416) (370 Execution Cost Units, 0.01%)</title><rect x="85.4496%" y="53" width="0.0137%" height="15" fill="rgb(235,28,35)" fg:x="2299743" fg:w="370"/><text x="85.6996%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(417) (358 Execution Cost Units, 0.01%)</title><rect x="85.4633%" y="53" width="0.0133%" height="15" fill="rgb(210,56,17)" fg:x="2300113" fg:w="358"/><text x="85.7133%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(418) (336 Execution Cost Units, 0.01%)</title><rect x="85.4766%" y="53" width="0.0125%" height="15" fill="rgb(224,130,29)" fg:x="2300471" fg:w="336"/><text x="85.7266%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(419) (334 Execution Cost Units, 0.01%)</title><rect x="85.4891%" y="53" width="0.0124%" height="15" fill="rgb(235,212,8)" fg:x="2300807" fg:w="334"/><text x="85.7391%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(420) (340 Execution Cost Units, 0.01%)</title><rect x="85.5015%" y="53" width="0.0126%" height="15" fill="rgb(223,33,50)" fg:x="2301141" fg:w="340"/><text x="85.7515%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(421) (339 Execution Cost Units, 0.01%)</title><rect x="85.5142%" y="53" width="0.0126%" height="15" fill="rgb(219,149,13)" fg:x="2301481" fg:w="339"/><text x="85.7642%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(422) (352 Execution Cost Units, 0.01%)</title><rect x="85.5268%" y="53" width="0.0131%" height="15" fill="rgb(250,156,29)" fg:x="2301820" fg:w="352"/><text x="85.7768%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(423) (342 Execution Cost Units, 0.01%)</title><rect x="85.5398%" y="53" width="0.0127%" height="15" fill="rgb(216,193,19)" fg:x="2302172" fg:w="342"/><text x="85.7898%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(424) (341 Execution Cost Units, 0.01%)</title><rect x="85.5525%" y="53" width="0.0127%" height="15" fill="rgb(216,135,14)" fg:x="2302514" fg:w="341"/><text x="85.8025%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(425) (335 Execution Cost Units, 0.01%)</title><rect x="85.5652%" y="53" width="0.0124%" height="15" fill="rgb(241,47,5)" fg:x="2302855" fg:w="335"/><text x="85.8152%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(426) (356 Execution Cost Units, 0.01%)</title><rect x="85.5777%" y="53" width="0.0132%" height="15" fill="rgb(233,42,35)" fg:x="2303190" fg:w="356"/><text x="85.8277%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(427) (338 Execution Cost Units, 0.01%)</title><rect x="85.5909%" y="53" width="0.0126%" height="15" fill="rgb(231,13,6)" fg:x="2303546" fg:w="338"/><text x="85.8409%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(428) (340 Execution Cost Units, 0.01%)</title><rect x="85.6034%" y="53" width="0.0126%" height="15" fill="rgb(207,181,40)" fg:x="2303884" fg:w="340"/><text x="85.8534%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(429) (335 Execution Cost Units, 0.01%)</title><rect x="85.6161%" y="53" width="0.0124%" height="15" fill="rgb(254,173,49)" fg:x="2304224" fg:w="335"/><text x="85.8661%" y="63.50"></text></g><g><title>WriteSubstate(262) (582 Execution Cost Units, 0.02%)</title><rect x="85.6285%" y="53" width="0.0216%" height="15" fill="rgb(221,1,38)" fg:x="2304559" fg:w="582"/><text x="85.8785%" y="63.50"></text></g><g><title>WriteSubstate(405) (582 Execution Cost Units, 0.02%)</title><rect x="85.6501%" y="53" width="0.0216%" height="15" fill="rgb(206,124,46)" fg:x="2305141" fg:w="582"/><text x="85.9001%" y="63.50"></text></g><g><title>WriteSubstate(440) (364 Execution Cost Units, 0.01%)</title><rect x="85.6718%" y="53" width="0.0135%" height="15" fill="rgb(249,21,11)" fg:x="2305723" fg:w="364"/><text x="85.9218%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (77) (2,185,883 Execution Cost Units, 81.22%)</title><rect x="4.4663%" y="69" width="81.2190%" height="15" fill="rgb(222,201,40)" fg:x="120204" fg:w="2185883"/><text x="4.7163%" y="79.50">Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (77)</text></g><g><title>OpenSubstate::GlobalGenericComponent(50) (539 Execution Cost Units, 0.02%)</title><rect x="85.6853%" y="69" width="0.0200%" height="15" fill="rgb(235,61,29)" fg:x="2306087" fg:w="539"/><text x="85.9353%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(54) (539 Execution Cost Units, 0.02%)</title><rect x="85.7053%" y="69" width="0.0200%" height="15" fill="rgb(219,207,3)" fg:x="2306626" fg:w="539"/><text x="85.9553%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(64) (539 Execution Cost Units, 0.02%)</title><rect x="85.7254%" y="69" width="0.0200%" height="15" fill="rgb(222,56,46)" fg:x="2307165" fg:w="539"/><text x="85.9754%" y="79.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(74) (539 Execution Cost Units, 0.02%)</title><rect x="85.7454%" y="69" width="0.0200%" height="15" fill="rgb(239,76,54)" fg:x="2307704" fg:w="539"/><text x="85.9954%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(14) (40,001 Execution Cost Units, 1.49%)</title><rect x="85.7654%" y="69" width="1.4863%" height="15" fill="rgb(231,124,27)" fg:x="2308243" fg:w="40001"/><text x="86.0154%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(16) (339 Execution Cost Units, 0.01%)</title><rect x="87.2517%" y="69" width="0.0126%" height="15" fill="rgb(249,195,6)" fg:x="2348244" fg:w="339"/><text x="87.5017%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(20) (40,021 Execution Cost Units, 1.49%)</title><rect x="87.2643%" y="69" width="1.4870%" height="15" fill="rgb(237,174,47)" fg:x="2348583" fg:w="40021"/><text x="87.5143%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(22) (737 Execution Cost Units, 0.03%)</title><rect x="88.7513%" y="69" width="0.0274%" height="15" fill="rgb(206,201,31)" fg:x="2388604" fg:w="737"/><text x="89.0013%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(26) (40,039 Execution Cost Units, 1.49%)</title><rect x="88.7787%" y="69" width="1.4877%" height="15" fill="rgb(231,57,52)" fg:x="2389341" fg:w="40039"/><text x="89.0287%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(28) (1,095 Execution Cost Units, 0.04%)</title><rect x="90.2664%" y="69" width="0.0407%" height="15" fill="rgb(248,177,22)" fg:x="2429380" fg:w="1095"/><text x="90.5164%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(32) (40,001 Execution Cost Units, 1.49%)</title><rect x="90.3071%" y="69" width="1.4863%" height="15" fill="rgb(215,211,37)" fg:x="2430475" fg:w="40001"/><text x="90.5571%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(34) (339 Execution Cost Units, 0.01%)</title><rect x="91.7934%" y="69" width="0.0126%" height="15" fill="rgb(241,128,51)" fg:x="2470476" fg:w="339"/><text x="92.0434%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(38) (40,002 Execution Cost Units, 1.49%)</title><rect x="91.8060%" y="69" width="1.4863%" height="15" fill="rgb(227,165,31)" fg:x="2470815" fg:w="40002"/><text x="92.0560%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(40) (355 Execution Cost Units, 0.01%)</title><rect x="93.2923%" y="69" width="0.0132%" height="15" fill="rgb(228,167,24)" fg:x="2510817" fg:w="355"/><text x="93.5423%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(466) (40,002 Execution Cost Units, 1.49%)</title><rect x="93.3055%" y="69" width="1.4863%" height="15" fill="rgb(228,143,12)" fg:x="2511172" fg:w="40002"/><text x="93.5555%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(468) (349 Execution Cost Units, 0.01%)</title><rect x="94.7918%" y="69" width="0.0130%" height="15" fill="rgb(249,149,8)" fg:x="2551174" fg:w="349"/><text x="95.0418%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(476) (40,204 Execution Cost Units, 1.49%)</title><rect x="94.8048%" y="69" width="1.4938%" height="15" fill="rgb(243,35,44)" fg:x="2551523" fg:w="40204"/><text x="95.0548%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(478) (4,389 Execution Cost Units, 0.16%)</title><rect x="96.2986%" y="69" width="0.1631%" height="15" fill="rgb(246,89,9)" fg:x="2591727" fg:w="4389"/><text x="96.5486%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(68) (40,002 Execution Cost Units, 1.49%)</title><rect x="96.4617%" y="69" width="1.4863%" height="15" fill="rgb(233,213,13)" fg:x="2596116" fg:w="40002"/><text x="96.7117%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(70) (349 Execution Cost Units, 0.01%)</title><rect x="97.9480%" y="69" width="0.0130%" height="15" fill="rgb(233,141,41)" fg:x="2636118" fg:w="349"/><text x="98.1980%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(446) (605 Execution Cost Units, 0.02%)</title><rect x="97.9609%" y="69" width="0.0225%" height="15" fill="rgb(239,167,4)" fg:x="2636467" fg:w="605"/><text x="98.2109%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(453) (463 Execution Cost Units, 0.02%)</title><rect x="97.9834%" y="69" width="0.0172%" height="15" fill="rgb(209,217,16)" fg:x="2637072" fg:w="463"/><text x="98.2334%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(472) (461 Execution Cost Units, 0.02%)</title><rect x="98.0006%" y="69" width="0.0171%" height="15" fill="rgb(219,88,35)" fg:x="2637535" fg:w="461"/><text x="98.2506%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(533) (605 Execution Cost Units, 0.02%)</title><rect x="98.0178%" y="69" width="0.0225%" height="15" fill="rgb(220,193,23)" fg:x="2637996" fg:w="605"/><text x="98.2678%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(540) (463 Execution Cost Units, 0.02%)</title><rect x="98.0402%" y="69" width="0.0172%" height="15" fill="rgb(230,90,52)" fg:x="2638601" fg:w="463"/><text x="98.2902%" y="79.50"></text></g><g><title>ReadSubstate(23) (547 Execution Cost Units, 0.02%)</title><rect x="98.0643%" y="69" width="0.0203%" height="15" fill="rgb(252,106,19)" fg:x="2639249" fg:w="547"/><text x="98.3143%" y="79.50"></text></g><g><title>ReadSubstate(29) (905 Execution Cost Units, 0.03%)</title><rect x="98.0846%" y="69" width="0.0336%" height="15" fill="rgb(206,74,20)" fg:x="2639796" fg:w="905"/><text x="98.3346%" y="79.50"></text></g><g><title>ReadSubstate(447) (367 Execution Cost Units, 0.01%)</title><rect x="98.1299%" y="69" width="0.0136%" height="15" fill="rgb(230,138,44)" fg:x="2641015" fg:w="367"/><text x="98.3799%" y="79.50"></text></g><g><title>ReadSubstate(479) (4,199 Execution Cost Units, 0.16%)</title><rect x="98.1661%" y="69" width="0.1560%" height="15" fill="rgb(235,182,43)" fg:x="2641989" fg:w="4199"/><text x="98.4161%" y="79.50"></text></g><g><title>ReadSubstate(51) (349 Execution Cost Units, 0.01%)</title><rect x="98.3221%" y="69" width="0.0130%" height="15" fill="rgb(242,16,51)" fg:x="2646188" fg:w="349"/><text x="98.5721%" y="79.50"></text></g><g><title>ReadSubstate(534) (367 Execution Cost Units, 0.01%)</title><rect x="98.3351%" y="69" width="0.0136%" height="15" fill="rgb(248,9,4)" fg:x="2646537" fg:w="367"/><text x="98.5851%" y="79.50"></text></g><g><title>ReadSubstate(55) (349 Execution Cost Units, 0.01%)</title><rect x="98.3571%" y="69" width="0.0130%" height="15" fill="rgb(210,31,22)" fg:x="2647129" fg:w="349"/><text x="98.6071%" y="79.50"></text></g><g><title>ReadSubstate(65) (349 Execution Cost Units, 0.01%)</title><rect x="98.3701%" y="69" width="0.0130%" height="15" fill="rgb(239,54,39)" fg:x="2647478" fg:w="349"/><text x="98.6201%" y="79.50"></text></g><g><title>ReadSubstate(75) (349 Execution Cost Units, 0.01%)</title><rect x="98.3889%" y="69" width="0.0130%" height="15" fill="rgb(230,99,41)" fg:x="2647986" fg:w="349"/><text x="98.6389%" y="79.50"></text></g><g><title>WriteSubstate(448) (520 Execution Cost Units, 0.02%)</title><rect x="98.4019%" y="69" width="0.0193%" height="15" fill="rgb(253,106,12)" fg:x="2648335" fg:w="520"/><text x="98.6519%" y="79.50"></text></g><g><title>WriteSubstate(535) (520 Execution Cost Units, 0.02%)</title><rect x="98.4212%" y="69" width="0.0193%" height="15" fill="rgb(213,46,41)" fg:x="2648855" fg:w="520"/><text x="98.6712%" y="79.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (12) (2,646,856 Execution Cost Units, 98.35%)</title><rect x="0.0936%" y="85" width="98.3470%" height="15" fill="rgb(215,133,35)" fg:x="2519" fg:w="2646856"/><text x="0.3436%" y="95.50">Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (12)</text></g><g><title>OpenSubstate::GlobalPackage(7) (40,002 Execution Cost Units, 1.49%)</title><rect x="98.4406%" y="85" width="1.4863%" height="15" fill="rgb(213,28,5)" fg:x="2649375" fg:w="40002"/><text x="98.6906%" y="95.50"></text></g><g><title>OpenSubstate::GlobalPackage(9) (349 Execution Cost Units, 0.01%)</title><rect x="99.9269%" y="85" width="0.0130%" height="15" fill="rgb(215,77,49)" fg:x="2689377" fg:w="349"/><text x="100.1769%" y="95.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(548) (361 Execution Cost Units, 0.01%)</title><rect x="99.9398%" y="85" width="0.0134%" height="15" fill="rgb(248,100,22)" fg:x="2689726" fg:w="361"/><text x="100.1898%" y="95.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(555) (463 Execution Cost Units, 0.02%)</title><rect x="99.9533%" y="85" width="0.0172%" height="15" fill="rgb(208,67,9)" fg:x="2690087" fg:w="463"/><text x="100.2033%" y="95.50"></text></g><g><title>WriteSubstate(550) (276 Execution Cost Units, 0.01%)</title><rect x="99.9897%" y="85" width="0.0103%" height="15" fill="rgb(219,133,21)" fg:x="2691069" fg:w="276"/><text x="100.2397%" y="95.50"></text></g><g><title>all (2,691,345 Execution Cost Units, 100%)</title><rect x="0.0000%" y="101" width="100.0000%" height="15" fill="rgb(246,46,29)" fg:x="0" fg:w="2691345"/><text x="0.2500%" y="111.50"></text></g></svg></svg>