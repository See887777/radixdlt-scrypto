<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="150" onload="init(evt)" viewBox="0 0 1200 150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="150" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">faucet-lock-fee-and-free-xrd</text><text id="details" fill="rgb(0,0,0)" x="10" y="133.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="133.00"> </text><svg id="frames" x="10" width="1180" total_samples="5811282"><g><title>CheckReference(2) (40,011 Execution Cost Units, 0.69%)</title><rect x="0.0017%" y="85" width="0.6885%" height="15" fill="rgb(227,0,7)" fg:x="97" fg:w="40011"/><text x="0.2517%" y="95.50"></text></g><g><title>CheckReference(3) (40,011 Execution Cost Units, 0.69%)</title><rect x="0.6902%" y="85" width="0.6885%" height="15" fill="rgb(217,0,24)" fg:x="40108" fg:w="40011"/><text x="0.9402%" y="95.50"></text></g><g><title>CreateNode(5) (802 Execution Cost Units, 0.01%)</title><rect x="1.3853%" y="85" width="0.0138%" height="15" fill="rgb(221,193,54)" fg:x="80506" fg:w="802"/><text x="1.6353%" y="95.50"></text></g><g><title>DropNode(1698) (1,489 Execution Cost Units, 0.03%)</title><rect x="1.3991%" y="85" width="0.0256%" height="15" fill="rgb(248,212,6)" fg:x="81308" fg:w="1489"/><text x="1.6491%" y="95.50"></text></g><g><title>CreateNode(1196) (798 Execution Cost Units, 0.01%)</title><rect x="1.5501%" y="69" width="0.0137%" height="15" fill="rgb(208,68,35)" fg:x="90082" fg:w="798"/><text x="1.8001%" y="79.50"></text></g><g><title>CreateNode(1277) (918 Execution Cost Units, 0.02%)</title><rect x="1.5639%" y="69" width="0.0158%" height="15" fill="rgb(232,128,0)" fg:x="90880" fg:w="918"/><text x="1.8139%" y="79.50"></text></g><g><title>CreateNode(1618) (918 Execution Cost Units, 0.02%)</title><rect x="1.5797%" y="69" width="0.0158%" height="15" fill="rgb(207,160,47)" fg:x="91798" fg:w="918"/><text x="1.8297%" y="79.50"></text></g><g><title>CreateNode(472) (918 Execution Cost Units, 0.02%)</title><rect x="1.5954%" y="69" width="0.0158%" height="15" fill="rgb(228,23,34)" fg:x="92716" fg:w="918"/><text x="1.8454%" y="79.50"></text></g><g><title>CreateNode(48) (644 Execution Cost Units, 0.01%)</title><rect x="1.6112%" y="69" width="0.0111%" height="15" fill="rgb(218,30,26)" fg:x="93634" fg:w="644"/><text x="1.8612%" y="79.50"></text></g><g><title>CreateNode(62) (918 Execution Cost Units, 0.02%)</title><rect x="1.6223%" y="69" width="0.0158%" height="15" fill="rgb(220,122,19)" fg:x="94278" fg:w="918"/><text x="1.8723%" y="79.50"></text></g><g><title>CreateNode(995) (798 Execution Cost Units, 0.01%)</title><rect x="1.6381%" y="69" width="0.0137%" height="15" fill="rgb(250,228,42)" fg:x="95196" fg:w="798"/><text x="1.8881%" y="79.50"></text></g><g><title>DropNode(1183) (1,485 Execution Cost Units, 0.03%)</title><rect x="1.6519%" y="69" width="0.0256%" height="15" fill="rgb(240,193,28)" fg:x="95994" fg:w="1485"/><text x="1.9019%" y="79.50"></text></g><g><title>DropNode(1267) (1,485 Execution Cost Units, 0.03%)</title><rect x="1.6774%" y="69" width="0.0256%" height="15" fill="rgb(216,20,37)" fg:x="97479" fg:w="1485"/><text x="1.9274%" y="79.50"></text></g><g><title>DropNode(1616) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7030%" y="69" width="0.0276%" height="15" fill="rgb(206,188,39)" fg:x="98964" fg:w="1605"/><text x="1.9530%" y="79.50"></text></g><g><title>DropNode(1683) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7306%" y="69" width="0.0276%" height="15" fill="rgb(217,207,13)" fg:x="100569" fg:w="1605"/><text x="1.9806%" y="79.50"></text></g><g><title>DropNode(462) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7582%" y="69" width="0.0276%" height="15" fill="rgb(231,73,38)" fg:x="102174" fg:w="1605"/><text x="2.0082%" y="79.50"></text></g><g><title>DropNode(978) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7858%" y="69" width="0.0276%" height="15" fill="rgb(225,20,46)" fg:x="103779" fg:w="1605"/><text x="2.0358%" y="79.50"></text></g><g><title>DropNode(1667) (1,331 Execution Cost Units, 0.02%)</title><rect x="1.8341%" y="53" width="0.0229%" height="15" fill="rgb(210,31,41)" fg:x="106582" fg:w="1331"/><text x="2.0841%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_drop(1649) (17,918 Execution Cost Units, 0.31%)</title><rect x="1.9407%" y="53" width="0.3083%" height="15" fill="rgb(221,200,47)" fg:x="112781" fg:w="17918"/><text x="2.1907%" y="63.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9&gt;::Worktop::Worktop_drop (1627) (25,563 Execution Cost Units, 0.44%)</title><rect x="1.8134%" y="69" width="0.4399%" height="15" fill="rgb(226,26,5)" fg:x="105384" fg:w="25563"/><text x="2.0634%" y="79.50"></text></g><g><title>CreateNode(1388) (980 Execution Cost Units, 0.02%)</title><rect x="2.3292%" y="53" width="0.0169%" height="15" fill="rgb(249,33,26)" fg:x="135356" fg:w="980"/><text x="2.5792%" y="63.50"></text></g><g><title>CreateNode(1484) (980 Execution Cost Units, 0.02%)</title><rect x="2.3461%" y="53" width="0.0169%" height="15" fill="rgb(235,183,28)" fg:x="136336" fg:w="980"/><text x="2.5961%" y="63.50"></text></g><g><title>DropNode(1456) (1,667 Execution Cost Units, 0.03%)</title><rect x="2.3629%" y="53" width="0.0287%" height="15" fill="rgb(221,5,38)" fg:x="137316" fg:w="1667"/><text x="2.6129%" y="63.50"></text></g><g><title>DropNode(1590) (1,667 Execution Cost Units, 0.03%)</title><rect x="2.3916%" y="53" width="0.0287%" height="15" fill="rgb(247,18,42)" fg:x="138983" fg:w="1667"/><text x="2.6416%" y="63.50"></text></g><g><title>EmitEvent(1592) (620 Execution Cost Units, 0.01%)</title><rect x="2.4203%" y="53" width="0.0107%" height="15" fill="rgb(241,131,45)" fg:x="140650" fg:w="620"/><text x="2.6703%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lqfj6847j2mvhxjz289pxu7d34az0k9hgy4366tjfcrjs8s4qyffpf&gt;::FungibleBucket::get_amount (1402) (18,091 Execution Cost Units, 0.31%)</title><rect x="2.4310%" y="53" width="0.3113%" height="15" fill="rgb(249,31,29)" fg:x="141270" fg:w="18091"/><text x="2.6810%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleBucket(1424) (11,016 Execution Cost Units, 0.19%)</title><rect x="2.5527%" y="37" width="0.1896%" height="15" fill="rgb(225,111,53)" fg:x="148345" fg:w="11016"/><text x="2.8027%" y="47.50"></text></g><g><title>DropNode(1556) (1,475 Execution Cost Units, 0.03%)</title><rect x="2.7734%" y="37" width="0.0254%" height="15" fill="rgb(238,160,17)" fg:x="161172" fg:w="1475"/><text x="3.0234%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1541) (593 Execution Cost Units, 0.01%)</title><rect x="2.8084%" y="37" width="0.0102%" height="15" fill="rgb(214,148,48)" fg:x="163203" fg:w="593"/><text x="3.0584%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(1562) (40,003 Execution Cost Units, 0.69%)</title><rect x="2.8733%" y="37" width="0.6884%" height="15" fill="rgb(232,36,49)" fg:x="166975" fg:w="40003"/><text x="3.1233%" y="47.50"></text></g><g><title>RunNativeCode::put_FungibleVault(1534) (24,554 Execution Cost Units, 0.42%)</title><rect x="3.6802%" y="37" width="0.4225%" height="15" fill="rgb(209,103,24)" fg:x="213869" fg:w="24554"/><text x="3.9302%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1trfekxxzevygt2uwrknmykuh8m2538myupm9d954d9q658844cxfp8&gt;::FungibleVault::put (1508) (79,354 Execution Cost Units, 1.37%)</title><rect x="2.7423%" y="53" width="1.3655%" height="15" fill="rgb(229,88,8)" fg:x="159361" fg:w="79354"/><text x="2.9923%" y="63.50"></text></g><g><title>OpenSubstate::GlobalAccount(1466) (40,004 Execution Cost Units, 0.69%)</title><rect x="4.1264%" y="53" width="0.6884%" height="15" fill="rgb(213,181,19)" fg:x="239797" fg:w="40004"/><text x="4.3764%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1462) (593 Execution Cost Units, 0.01%)</title><rect x="4.8309%" y="53" width="0.0102%" height="15" fill="rgb(254,191,54)" fg:x="280737" fg:w="593"/><text x="5.0809%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1499) (40,001 Execution Cost Units, 0.69%)</title><rect x="4.8411%" y="53" width="0.6883%" height="15" fill="rgb(241,83,37)" fg:x="281330" fg:w="40001"/><text x="5.0911%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1598) (593 Execution Cost Units, 0.01%)</title><rect x="5.5353%" y="53" width="0.0102%" height="15" fill="rgb(233,36,39)" fg:x="321670" fg:w="593"/><text x="5.7853%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1322) (40,013 Execution Cost Units, 0.69%)</title><rect x="5.5455%" y="53" width="0.6885%" height="15" fill="rgb(226,3,54)" fg:x="322263" fg:w="40013"/><text x="5.7955%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1328) (40,001 Execution Cost Units, 0.69%)</title><rect x="6.2439%" y="53" width="0.6883%" height="15" fill="rgb(245,192,40)" fg:x="362849" fg:w="40001"/><text x="6.4939%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1334) (40,013 Execution Cost Units, 0.69%)</title><rect x="6.9380%" y="53" width="0.6885%" height="15" fill="rgb(238,167,29)" fg:x="403189" fg:w="40013"/><text x="7.1880%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1340) (40,615 Execution Cost Units, 0.70%)</title><rect x="7.6365%" y="53" width="0.6989%" height="15" fill="rgb(232,182,51)" fg:x="443781" fg:w="40615"/><text x="7.8865%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1342) (12,611 Execution Cost Units, 0.22%)</title><rect x="8.3354%" y="53" width="0.2170%" height="15" fill="rgb(231,60,39)" fg:x="484396" fg:w="12611"/><text x="8.5854%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1350) (40,370 Execution Cost Units, 0.69%)</title><rect x="8.5525%" y="53" width="0.6947%" height="15" fill="rgb(208,69,12)" fg:x="497007" fg:w="40370"/><text x="8.8025%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1352) (7,715 Execution Cost Units, 0.13%)</title><rect x="9.2471%" y="53" width="0.1328%" height="15" fill="rgb(235,93,37)" fg:x="537377" fg:w="7715"/><text x="9.4971%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1360) (40,001 Execution Cost Units, 0.69%)</title><rect x="9.3799%" y="53" width="0.6883%" height="15" fill="rgb(213,116,39)" fg:x="545092" fg:w="40001"/><text x="9.6299%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1366) (40,002 Execution Cost Units, 0.69%)</title><rect x="10.0741%" y="53" width="0.6884%" height="15" fill="rgb(222,207,29)" fg:x="585432" fg:w="40002"/><text x="10.3241%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(1471) (40,011 Execution Cost Units, 0.69%)</title><rect x="10.7685%" y="53" width="0.6885%" height="15" fill="rgb(206,96,30)" fg:x="625789" fg:w="40011"/><text x="11.0185%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1385) (605 Execution Cost Units, 0.01%)</title><rect x="11.5308%" y="53" width="0.0104%" height="15" fill="rgb(218,138,4)" fg:x="670088" fg:w="605"/><text x="11.7808%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1444) (667 Execution Cost Units, 0.01%)</title><rect x="11.5597%" y="53" width="0.0115%" height="15" fill="rgb(250,191,14)" fg:x="671767" fg:w="667"/><text x="11.8097%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1481) (605 Execution Cost Units, 0.01%)</title><rect x="11.5791%" y="53" width="0.0104%" height="15" fill="rgb(239,60,40)" fg:x="672897" fg:w="605"/><text x="11.8291%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1578) (667 Execution Cost Units, 0.01%)</title><rect x="11.5988%" y="53" width="0.0115%" height="15" fill="rgb(206,27,48)" fg:x="674039" fg:w="667"/><text x="11.8488%" y="63.50"></text></g><g><title>ReadSubstate(1343) (12,421 Execution Cost Units, 0.21%)</title><rect x="11.6345%" y="53" width="0.2137%" height="15" fill="rgb(225,35,8)" fg:x="676114" fg:w="12421"/><text x="11.8845%" y="63.50"></text></g><g><title>ReadSubstate(1353) (7,525 Execution Cost Units, 0.13%)</title><rect x="11.8543%" y="53" width="0.1295%" height="15" fill="rgb(250,213,24)" fg:x="688886" fg:w="7525"/><text x="12.1043%" y="63.50"></text></g><g><title>RunNativeCode::deposit_batch(1371) (110,731 Execution Cost Units, 1.91%)</title><rect x="12.1161%" y="53" width="1.9054%" height="15" fill="rgb(247,123,22)" fg:x="704102" fg:w="110731"/><text x="12.3661%" y="63.50">R..</text></g><g><title>WriteSubstate(1446) (582 Execution Cost Units, 0.01%)</title><rect x="14.0216%" y="53" width="0.0100%" height="15" fill="rgb(231,138,38)" fg:x="814833" fg:w="582"/><text x="14.2716%" y="63.50"></text></g><g><title>WriteSubstate(1580) (582 Execution Cost Units, 0.01%)</title><rect x="14.0316%" y="53" width="0.0100%" height="15" fill="rgb(231,145,46)" fg:x="815415" fg:w="582"/><text x="14.2816%" y="63.50"></text></g><g><title>Invocation: Method &lt;account_sim1c8m6h4yv2x9ca0wx5ddtl0nctqmjt2t740wfjgj9w8sdz82zf8ppcr&gt;::Account::deposit_batch (1319) (685,050 Execution Cost Units, 11.79%)</title><rect x="2.2533%" y="69" width="11.7883%" height="15" fill="rgb(251,118,11)" fg:x="130947" fg:w="685050"/><text x="2.5033%" y="79.50">Invocation: Metho..</text></g><g><title>CreateNode(555) (870 Execution Cost Units, 0.01%)</title><rect x="14.1346%" y="53" width="0.0150%" height="15" fill="rgb(217,147,25)" fg:x="821400" fg:w="870"/><text x="14.3846%" y="63.50"></text></g><g><title>CreateNode(701) (980 Execution Cost Units, 0.02%)</title><rect x="14.1495%" y="53" width="0.0169%" height="15" fill="rgb(247,81,37)" fg:x="822270" fg:w="980"/><text x="14.3995%" y="63.50"></text></g><g><title>CreateNode(799) (980 Execution Cost Units, 0.02%)</title><rect x="14.1664%" y="53" width="0.0169%" height="15" fill="rgb(209,12,38)" fg:x="823250" fg:w="980"/><text x="14.4164%" y="63.50"></text></g><g><title>DropNode(646) (1,557 Execution Cost Units, 0.03%)</title><rect x="14.1833%" y="53" width="0.0268%" height="15" fill="rgb(227,1,9)" fg:x="824230" fg:w="1557"/><text x="14.4333%" y="63.50"></text></g><g><title>DropNode(769) (1,667 Execution Cost Units, 0.03%)</title><rect x="14.2101%" y="53" width="0.0287%" height="15" fill="rgb(248,47,43)" fg:x="825787" fg:w="1667"/><text x="14.4601%" y="63.50"></text></g><g><title>DropNode(923) (1,667 Execution Cost Units, 0.03%)</title><rect x="14.2388%" y="53" width="0.0287%" height="15" fill="rgb(221,10,30)" fg:x="827454" fg:w="1667"/><text x="14.4888%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(577) (40,013 Execution Cost Units, 0.69%)</title><rect x="14.3178%" y="37" width="0.6885%" height="15" fill="rgb(210,229,1)" fg:x="832046" fg:w="40013"/><text x="14.5678%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(583) (40,001 Execution Cost Units, 0.69%)</title><rect x="15.0162%" y="37" width="0.6883%" height="15" fill="rgb(222,148,37)" fg:x="872632" fg:w="40001"/><text x="15.2662%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(589) (40,013 Execution Cost Units, 0.69%)</title><rect x="15.7103%" y="37" width="0.6885%" height="15" fill="rgb(234,67,33)" fg:x="912972" fg:w="40013"/><text x="15.9603%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(595) (40,207 Execution Cost Units, 0.69%)</title><rect x="16.4088%" y="37" width="0.6919%" height="15" fill="rgb(247,98,35)" fg:x="953564" fg:w="40207"/><text x="16.6588%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(597) (4,455 Execution Cost Units, 0.08%)</title><rect x="17.1007%" y="37" width="0.0767%" height="15" fill="rgb(247,138,52)" fg:x="993771" fg:w="4455"/><text x="17.3507%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(605) (40,341 Execution Cost Units, 0.69%)</title><rect x="17.1774%" y="37" width="0.6942%" height="15" fill="rgb(213,79,30)" fg:x="998226" fg:w="40341"/><text x="17.4274%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(607) (7,135 Execution Cost Units, 0.12%)</title><rect x="17.8716%" y="37" width="0.1228%" height="15" fill="rgb(246,177,23)" fg:x="1038567" fg:w="7135"/><text x="18.1216%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(611) (40,001 Execution Cost Units, 0.69%)</title><rect x="17.9943%" y="37" width="0.6883%" height="15" fill="rgb(230,62,27)" fg:x="1045702" fg:w="40001"/><text x="18.2443%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(617) (40,002 Execution Cost Units, 0.69%)</title><rect x="18.6885%" y="37" width="0.6884%" height="15" fill="rgb(216,154,8)" fg:x="1086042" fg:w="40002"/><text x="18.9385%" y="47.50"></text></g><g><title>ReadSubstate(598) (4,265 Execution Cost Units, 0.07%)</title><rect x="19.3988%" y="37" width="0.0734%" height="15" fill="rgb(244,35,45)" fg:x="1127320" fg:w="4265"/><text x="19.6488%" y="47.50"></text></g><g><title>ReadSubstate(608) (6,945 Execution Cost Units, 0.12%)</title><rect x="19.4786%" y="37" width="0.1195%" height="15" fill="rgb(251,115,12)" fg:x="1131954" fg:w="6945"/><text x="19.7286%" y="47.50"></text></g><g><title>Invocation: Method &lt;consensusmanager_sim1scxxxxxxxxxxcnsmgrxxxxxxxxx000999665565xxxxxxxxxxc06cl&gt;::ConsensusManager::get_current_epoch (574) (324,051 Execution Cost Units, 5.58%)</title><rect x="14.2674%" y="53" width="5.5762%" height="15" fill="rgb(240,54,50)" fg:x="829121" fg:w="324051"/><text x="14.5174%" y="63.50">Invocat..</text></g><g><title>RunNativeCode::get_current_epoch(622) (13,363 Execution Cost Units, 0.23%)</title><rect x="19.6137%" y="37" width="0.2299%" height="15" fill="rgb(233,84,52)" fg:x="1139809" fg:w="13363"/><text x="19.8637%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::get_amount (715) (21,684 Execution Cost Units, 0.37%)</title><rect x="19.8437%" y="53" width="0.3731%" height="15" fill="rgb(207,117,47)" fg:x="1153172" fg:w="21684"/><text x="20.0937%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleVault(737) (14,451 Execution Cost Units, 0.25%)</title><rect x="19.9681%" y="37" width="0.2487%" height="15" fill="rgb(249,43,39)" fg:x="1160405" fg:w="14451"/><text x="20.2181%" y="47.50"></text></g><g><title>CreateNode(889) (788 Execution Cost Units, 0.01%)</title><rect x="20.2606%" y="37" width="0.0136%" height="15" fill="rgb(209,38,44)" fg:x="1177399" fg:w="788"/><text x="20.5106%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(846) (593 Execution Cost Units, 0.01%)</title><rect x="20.2837%" y="37" width="0.0102%" height="15" fill="rgb(236,212,23)" fg:x="1178743" fg:w="593"/><text x="20.5337%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(854) (593 Execution Cost Units, 0.01%)</title><rect x="20.2939%" y="37" width="0.0102%" height="15" fill="rgb(242,79,21)" fg:x="1179336" fg:w="593"/><text x="20.5439%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(879) (593 Execution Cost Units, 0.01%)</title><rect x="20.3098%" y="37" width="0.0102%" height="15" fill="rgb(211,96,35)" fg:x="1180260" fg:w="593"/><text x="20.5598%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(873) (40,207 Execution Cost Units, 0.69%)</title><rect x="20.3471%" y="37" width="0.6919%" height="15" fill="rgb(253,215,40)" fg:x="1182427" fg:w="40207"/><text x="20.5971%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(875) (4,447 Execution Cost Units, 0.08%)</title><rect x="21.0390%" y="37" width="0.0765%" height="15" fill="rgb(211,81,21)" fg:x="1222634" fg:w="4447"/><text x="21.2890%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(883) (40,101 Execution Cost Units, 0.69%)</title><rect x="21.1155%" y="37" width="0.6901%" height="15" fill="rgb(208,190,38)" fg:x="1227081" fg:w="40101"/><text x="21.3655%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(885) (2,335 Execution Cost Units, 0.04%)</title><rect x="21.8055%" y="37" width="0.0402%" height="15" fill="rgb(235,213,38)" fg:x="1267182" fg:w="2335"/><text x="22.0555%" y="47.50"></text></g><g><title>ReadSubstate(876) (4,257 Execution Cost Units, 0.07%)</title><rect x="21.9860%" y="37" width="0.0733%" height="15" fill="rgb(237,122,38)" fg:x="1277670" fg:w="4257"/><text x="22.2360%" y="47.50"></text></g><g><title>ReadSubstate(886) (2,145 Execution Cost Units, 0.04%)</title><rect x="22.0662%" y="37" width="0.0369%" height="15" fill="rgb(244,218,35)" fg:x="1282330" fg:w="2145"/><text x="22.3162%" y="47.50"></text></g><g><title>RunNativeCode::take_FungibleVault(839) (42,457 Execution Cost Units, 0.73%)</title><rect x="22.1194%" y="37" width="0.7306%" height="15" fill="rgb(240,68,47)" fg:x="1285418" fg:w="42457"/><text x="22.3694%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::take (817) (153,311 Execution Cost Units, 2.64%)</title><rect x="20.2168%" y="53" width="2.6382%" height="15" fill="rgb(210,16,53)" fg:x="1174856" fg:w="153311"/><text x="20.4668%" y="63.50">In..</text></g><g><title>OpenSubstate::GlobalConsensusManager(545) (40,012 Execution Cost Units, 0.69%)</title><rect x="22.8550%" y="53" width="0.6885%" height="15" fill="rgb(235,124,12)" fg:x="1328167" fg:w="40012"/><text x="23.1050%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(508) (354,209 Execution Cost Units, 6.10%)</title><rect x="23.6414%" y="53" width="6.0952%" height="15" fill="rgb(224,169,11)" fg:x="1373871" fg:w="354209"/><text x="23.8914%" y="63.50">OpenSubs..</text></g><g><title>OpenSubstate::GlobalPackage(565) (40,023 Execution Cost Units, 0.69%)</title><rect x="29.7366%" y="53" width="0.6887%" height="15" fill="rgb(250,166,2)" fg:x="1728080" fg:w="40023"/><text x="29.9866%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(567) (765 Execution Cost Units, 0.01%)</title><rect x="30.4254%" y="53" width="0.0132%" height="15" fill="rgb(242,216,29)" fg:x="1768103" fg:w="765"/><text x="30.6754%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(698) (605 Execution Cost Units, 0.01%)</title><rect x="30.5389%" y="53" width="0.0104%" height="15" fill="rgb(230,116,27)" fg:x="1774703" fg:w="605"/><text x="30.7889%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(757) (667 Execution Cost Units, 0.01%)</title><rect x="30.5493%" y="53" width="0.0115%" height="15" fill="rgb(228,99,48)" fg:x="1775308" fg:w="667"/><text x="30.7993%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(796) (605 Execution Cost Units, 0.01%)</title><rect x="30.5688%" y="53" width="0.0104%" height="15" fill="rgb(253,11,6)" fg:x="1776438" fg:w="605"/><text x="30.8188%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(911) (667 Execution Cost Units, 0.01%)</title><rect x="30.5792%" y="53" width="0.0115%" height="15" fill="rgb(247,143,39)" fg:x="1777043" fg:w="667"/><text x="30.8292%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(660) (160,000 Execution Cost Units, 2.75%)</title><rect x="30.6262%" y="53" width="2.7533%" height="15" fill="rgb(236,97,10)" fg:x="1779772" fg:w="160000"/><text x="30.8762%" y="63.50">Op..</text></g><g><title>PrepareWasmCode(511) (353,866 Execution Cost Units, 6.09%)</title><rect x="33.4094%" y="53" width="6.0893%" height="15" fill="rgb(233,208,19)" fg:x="1941512" fg:w="353866"/><text x="33.6594%" y="63.50">PrepareW..</text></g><g><title>ReadSubstate(509) (354,019 Execution Cost Units, 6.09%)</title><rect x="39.5275%" y="53" width="6.0919%" height="15" fill="rgb(216,164,2)" fg:x="2297057" fg:w="354019"/><text x="39.7775%" y="63.50">ReadSubs..</text></g><g><title>RunWasmCode::Faucet_free(512) (1,034 Execution Cost Units, 0.02%)</title><rect x="45.7978%" y="53" width="0.0178%" height="15" fill="rgb(220,129,5)" fg:x="2661437" fg:w="1034"/><text x="46.0478%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_free(514) (5,004 Execution Cost Units, 0.09%)</title><rect x="45.8213%" y="53" width="0.0861%" height="15" fill="rgb(242,17,10)" fg:x="2662805" fg:w="5004"/><text x="46.0713%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_free(668) (734 Execution Cost Units, 0.01%)</title><rect x="46.0979%" y="53" width="0.0126%" height="15" fill="rgb(242,107,0)" fg:x="2678880" fg:w="734"/><text x="46.3479%" y="63.50"></text></g><g><title>WriteSubstate(759) (582 Execution Cost Units, 0.01%)</title><rect x="46.4094%" y="53" width="0.0100%" height="15" fill="rgb(251,28,31)" fg:x="2696984" fg:w="582"/><text x="46.6594%" y="63.50"></text></g><g><title>WriteSubstate(913) (582 Execution Cost Units, 0.01%)</title><rect x="46.4195%" y="53" width="0.0100%" height="15" fill="rgb(233,223,10)" fg:x="2697566" fg:w="582"/><text x="46.6695%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::free (485) (1,882,515 Execution Cost Units, 32.39%)</title><rect x="14.0416%" y="69" width="32.3941%" height="15" fill="rgb(215,21,27)" fg:x="815997" fg:w="1882515"/><text x="14.2916%" y="79.50">Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucet..</text></g><g><title>CreateNode(179) (980 Execution Cost Units, 0.02%)</title><rect x="46.5067%" y="53" width="0.0169%" height="15" fill="rgb(232,23,21)" fg:x="2702637" fg:w="980"/><text x="46.7567%" y="63.50"></text></g><g><title>CreateNode(312) (980 Execution Cost Units, 0.02%)</title><rect x="46.5236%" y="53" width="0.0169%" height="15" fill="rgb(244,5,23)" fg:x="2703617" fg:w="980"/><text x="46.7736%" y="63.50"></text></g><g><title>DropNode(282) (1,667 Execution Cost Units, 0.03%)</title><rect x="46.5405%" y="53" width="0.0287%" height="15" fill="rgb(226,81,46)" fg:x="2704597" fg:w="1667"/><text x="46.7905%" y="63.50"></text></g><g><title>DropNode(419) (1,667 Execution Cost Units, 0.03%)</title><rect x="46.5691%" y="53" width="0.0287%" height="15" fill="rgb(247,70,30)" fg:x="2706264" fg:w="1667"/><text x="46.8191%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(202) (40,011 Execution Cost Units, 0.69%)</title><rect x="46.6247%" y="37" width="0.6885%" height="15" fill="rgb(212,68,19)" fg:x="2709491" fg:w="40011"/><text x="46.8747%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(208) (40,001 Execution Cost Units, 0.69%)</title><rect x="47.3225%" y="37" width="0.6883%" height="15" fill="rgb(240,187,13)" fg:x="2750043" fg:w="40001"/><text x="47.5725%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(214) (40,293 Execution Cost Units, 0.69%)</title><rect x="48.0167%" y="37" width="0.6934%" height="15" fill="rgb(223,113,26)" fg:x="2790383" fg:w="40293"/><text x="48.2667%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(216) (6,171 Execution Cost Units, 0.11%)</title><rect x="48.7100%" y="37" width="0.1062%" height="15" fill="rgb(206,192,2)" fg:x="2830676" fg:w="6171"/><text x="48.9600%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(224) (40,179 Execution Cost Units, 0.69%)</title><rect x="48.8162%" y="37" width="0.6914%" height="15" fill="rgb(241,108,4)" fg:x="2836847" fg:w="40179"/><text x="49.0662%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(226) (3,883 Execution Cost Units, 0.07%)</title><rect x="49.5076%" y="37" width="0.0668%" height="15" fill="rgb(247,173,49)" fg:x="2877026" fg:w="3883"/><text x="49.7576%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(230) (40,001 Execution Cost Units, 0.69%)</title><rect x="49.5744%" y="37" width="0.6883%" height="15" fill="rgb(224,114,35)" fg:x="2880909" fg:w="40001"/><text x="49.8244%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(236) (40,002 Execution Cost Units, 0.69%)</title><rect x="50.2686%" y="37" width="0.6884%" height="15" fill="rgb(245,159,27)" fg:x="2921249" fg:w="40002"/><text x="50.5186%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(247) (40,003 Execution Cost Units, 0.69%)</title><rect x="50.9815%" y="37" width="0.6884%" height="15" fill="rgb(245,172,44)" fg:x="2962676" fg:w="40003"/><text x="51.2315%" y="47.50"></text></g><g><title>ReadSubstate(217) (5,981 Execution Cost Units, 0.10%)</title><rect x="51.7000%" y="37" width="0.1029%" height="15" fill="rgb(236,23,11)" fg:x="3004430" fg:w="5981"/><text x="51.9500%" y="47.50"></text></g><g><title>ReadSubstate(227) (3,693 Execution Cost Units, 0.06%)</title><rect x="51.8088%" y="37" width="0.0635%" height="15" fill="rgb(205,117,38)" fg:x="3010756" fg:w="3693"/><text x="52.0588%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::get_amount (199) (322,160 Execution Cost Units, 5.54%)</title><rect x="46.5978%" y="53" width="5.5437%" height="15" fill="rgb(237,72,25)" fg:x="2707931" fg:w="322160"/><text x="46.8478%" y="63.50">Invocat..</text></g><g><title>RunNativeCode::get_amount_FungibleVault(241) (14,451 Execution Cost Units, 0.25%)</title><rect x="51.8929%" y="37" width="0.2487%" height="15" fill="rgb(244,70,9)" fg:x="3015640" fg:w="14451"/><text x="52.1429%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(361) (40,014 Execution Cost Units, 0.69%)</title><rect x="52.1931%" y="37" width="0.6886%" height="15" fill="rgb(217,125,39)" fg:x="3033089" fg:w="40014"/><text x="52.4431%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(363) (593 Execution Cost Units, 0.01%)</title><rect x="52.8817%" y="37" width="0.0102%" height="15" fill="rgb(235,36,10)" fg:x="3073103" fg:w="593"/><text x="53.1317%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(376) (593 Execution Cost Units, 0.01%)</title><rect x="52.8919%" y="37" width="0.0102%" height="15" fill="rgb(251,123,47)" fg:x="3073696" fg:w="593"/><text x="53.1419%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(386) (40,001 Execution Cost Units, 0.69%)</title><rect x="52.9021%" y="37" width="0.6883%" height="15" fill="rgb(221,13,13)" fg:x="3074289" fg:w="40001"/><text x="53.1521%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(380) (40,292 Execution Cost Units, 0.69%)</title><rect x="53.6232%" y="37" width="0.6933%" height="15" fill="rgb(238,131,9)" fg:x="3116195" fg:w="40292"/><text x="53.8732%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(382) (6,153 Execution Cost Units, 0.11%)</title><rect x="54.3165%" y="37" width="0.1059%" height="15" fill="rgb(211,50,8)" fg:x="3156487" fg:w="6153"/><text x="54.5665%" y="47.50"></text></g><g><title>ReadSubstate(383) (5,963 Execution Cost Units, 0.10%)</title><rect x="54.5438%" y="37" width="0.1026%" height="15" fill="rgb(245,182,24)" fg:x="3169692" fg:w="5963"/><text x="54.7938%" y="47.50"></text></g><g><title>RunNativeCode::lock_fee(354) (45,243 Execution Cost Units, 0.78%)</title><rect x="54.6612%" y="37" width="0.7785%" height="15" fill="rgb(242,14,37)" fg:x="3176515" fg:w="45243"/><text x="54.9112%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::lock_fee (332) (191,959 Execution Cost Units, 3.30%)</title><rect x="52.1415%" y="53" width="3.3032%" height="15" fill="rgb(246,228,12)" fg:x="3030091" fg:w="191959"/><text x="52.3915%" y="63.50">Inv..</text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(327) (40,001 Execution Cost Units, 0.69%)</title><rect x="55.4447%" y="53" width="0.6883%" height="15" fill="rgb(213,55,15)" fg:x="3222050" fg:w="40001"/><text x="55.6947%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(144) (40,007 Execution Cost Units, 0.69%)</title><rect x="56.1575%" y="53" width="0.6884%" height="15" fill="rgb(209,9,3)" fg:x="3263468" fg:w="40007"/><text x="56.4075%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(102) (40,075 Execution Cost Units, 0.69%)</title><rect x="56.8536%" y="53" width="0.6896%" height="15" fill="rgb(230,59,30)" fg:x="3303924" fg:w="40075"/><text x="57.1036%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(104) (1,819 Execution Cost Units, 0.03%)</title><rect x="57.5432%" y="53" width="0.0313%" height="15" fill="rgb(209,121,21)" fg:x="3343999" fg:w="1819"/><text x="57.7932%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(112) (40,035 Execution Cost Units, 0.69%)</title><rect x="57.5745%" y="53" width="0.6889%" height="15" fill="rgb(220,109,13)" fg:x="3345818" fg:w="40035"/><text x="57.8245%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(114) (1,003 Execution Cost Units, 0.02%)</title><rect x="58.2634%" y="53" width="0.0173%" height="15" fill="rgb(232,18,1)" fg:x="3385853" fg:w="1003"/><text x="58.5134%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(118) (40,001 Execution Cost Units, 0.69%)</title><rect x="58.2807%" y="53" width="0.6883%" height="15" fill="rgb(215,41,42)" fg:x="3386856" fg:w="40001"/><text x="58.5307%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(124) (57,695 Execution Cost Units, 0.99%)</title><rect x="58.9749%" y="53" width="0.9928%" height="15" fill="rgb(224,123,36)" fg:x="3427196" fg:w="57695"/><text x="59.2249%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(126) (354,209 Execution Cost Units, 6.10%)</title><rect x="59.9677%" y="53" width="6.0952%" height="15" fill="rgb(240,125,3)" fg:x="3484891" fg:w="354209"/><text x="60.2177%" y="63.50">OpenSubs..</text></g><g><title>OpenSubstate::GlobalPackage(190) (40,027 Execution Cost Units, 0.69%)</title><rect x="66.0629%" y="53" width="0.6888%" height="15" fill="rgb(205,98,50)" fg:x="3839100" fg:w="40027"/><text x="66.3129%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(192) (853 Execution Cost Units, 0.01%)</title><rect x="66.7517%" y="53" width="0.0147%" height="15" fill="rgb(205,185,37)" fg:x="3879127" fg:w="853"/><text x="67.0017%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(275) (40,221 Execution Cost Units, 0.69%)</title><rect x="66.7663%" y="53" width="0.6921%" height="15" fill="rgb(238,207,15)" fg:x="3879980" fg:w="40221"/><text x="67.0163%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(277) (4,739 Execution Cost Units, 0.08%)</title><rect x="67.4585%" y="53" width="0.0815%" height="15" fill="rgb(213,199,42)" fg:x="3920201" fg:w="4739"/><text x="67.7085%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(84) (40,013 Execution Cost Units, 0.69%)</title><rect x="67.5400%" y="53" width="0.6885%" height="15" fill="rgb(235,201,11)" fg:x="3924940" fg:w="40013"/><text x="67.7900%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(90) (40,001 Execution Cost Units, 0.69%)</title><rect x="68.2384%" y="53" width="0.6883%" height="15" fill="rgb(207,46,11)" fg:x="3965526" fg:w="40001"/><text x="68.4884%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(96) (40,001 Execution Cost Units, 0.69%)</title><rect x="68.9326%" y="53" width="0.6883%" height="15" fill="rgb(241,35,35)" fg:x="4005866" fg:w="40001"/><text x="69.1826%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(166) (40,011 Execution Cost Units, 0.69%)</title><rect x="69.6267%" y="53" width="0.6885%" height="15" fill="rgb(243,32,47)" fg:x="4046206" fg:w="40011"/><text x="69.8767%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(176) (605 Execution Cost Units, 0.01%)</title><rect x="70.3981%" y="53" width="0.0104%" height="15" fill="rgb(247,202,23)" fg:x="4091032" fg:w="605"/><text x="70.6481%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(264) (667 Execution Cost Units, 0.01%)</title><rect x="70.4085%" y="53" width="0.0115%" height="15" fill="rgb(219,102,11)" fg:x="4091637" fg:w="667"/><text x="70.6585%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(309) (605 Execution Cost Units, 0.01%)</title><rect x="70.4280%" y="53" width="0.0104%" height="15" fill="rgb(243,110,44)" fg:x="4092767" fg:w="605"/><text x="70.6780%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(407) (667 Execution Cost Units, 0.01%)</title><rect x="70.4384%" y="53" width="0.0115%" height="15" fill="rgb(222,74,54)" fg:x="4093372" fg:w="667"/><text x="70.6884%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(439) (40,011 Execution Cost Units, 0.69%)</title><rect x="70.4578%" y="53" width="0.6885%" height="15" fill="rgb(216,99,12)" fg:x="4094502" fg:w="40011"/><text x="70.7078%" y="63.50"></text></g><g><title>PrepareWasmCode(129) (353,866 Execution Cost Units, 6.09%)</title><rect x="71.1558%" y="53" width="6.0893%" height="15" fill="rgb(226,22,26)" fg:x="4135062" fg:w="353866"/><text x="71.4058%" y="63.50">PrepareW..</text></g><g><title>ReadSubstate(105) (1,629 Execution Cost Units, 0.03%)</title><rect x="77.2451%" y="53" width="0.0280%" height="15" fill="rgb(217,163,10)" fg:x="4488928" fg:w="1629"/><text x="77.4951%" y="63.50"></text></g><g><title>ReadSubstate(115) (813 Execution Cost Units, 0.01%)</title><rect x="77.2791%" y="53" width="0.0140%" height="15" fill="rgb(213,25,53)" fg:x="4490906" fg:w="813"/><text x="77.5291%" y="63.50"></text></g><g><title>ReadSubstate(127) (354,019 Execution Cost Units, 6.09%)</title><rect x="77.2956%" y="53" width="6.0919%" height="15" fill="rgb(252,105,26)" fg:x="4491868" fg:w="354019"/><text x="77.5456%" y="63.50">ReadSubs..</text></g><g><title>ReadSubstate(193) (663 Execution Cost Units, 0.01%)</title><rect x="83.4266%" y="53" width="0.0114%" height="15" fill="rgb(220,39,43)" fg:x="4848156" fg:w="663"/><text x="83.6766%" y="63.50"></text></g><g><title>ReadSubstate(278) (4,549 Execution Cost Units, 0.08%)</title><rect x="83.4552%" y="53" width="0.0783%" height="15" fill="rgb(229,68,48)" fg:x="4849818" fg:w="4549"/><text x="83.7052%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(130) (590 Execution Cost Units, 0.01%)</title><rect x="83.6008%" y="53" width="0.0102%" height="15" fill="rgb(252,8,32)" fg:x="4858278" fg:w="590"/><text x="83.8508%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(132) (5,004 Execution Cost Units, 0.09%)</title><rect x="83.6167%" y="53" width="0.0861%" height="15" fill="rgb(223,20,43)" fg:x="4859202" fg:w="5004"/><text x="83.8667%" y="63.50"></text></g><g><title>WriteSubstate(266) (582 Execution Cost Units, 0.01%)</title><rect x="84.0239%" y="53" width="0.0100%" height="15" fill="rgb(229,81,49)" fg:x="4882867" fg:w="582"/><text x="84.2739%" y="63.50"></text></g><g><title>WriteSubstate(409) (582 Execution Cost Units, 0.01%)</title><rect x="84.0339%" y="53" width="0.0100%" height="15" fill="rgb(236,28,36)" fg:x="4883449" fg:w="582"/><text x="84.2839%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (81) (2,185,883 Execution Cost Units, 37.61%)</title><rect x="46.4357%" y="69" width="37.6145%" height="15" fill="rgb(249,185,26)" fg:x="2698512" fg:w="2185883"/><text x="46.6857%" y="79.50">Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx..</text></g><g><title>RunNativeCode::Worktop_drain(1232) (11,224 Execution Cost Units, 0.19%)</title><rect x="84.1804%" y="53" width="0.1931%" height="15" fill="rgb(249,174,33)" fg:x="4891959" fg:w="11224"/><text x="84.4304%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lpqm4mlluwc6f36yv4cv5ypwljrchnr84uadvtyskjdftrnyyc9gap&gt;::Worktop::Worktop_drain (1210) (19,036 Execution Cost Units, 0.33%)</title><rect x="84.0502%" y="69" width="0.3276%" height="15" fill="rgb(233,201,37)" fg:x="4884395" fg:w="19036"/><text x="84.3002%" y="79.50"></text></g><g><title>CreateNode(1076) (798 Execution Cost Units, 0.01%)</title><rect x="84.4273%" y="53" width="0.0137%" height="15" fill="rgb(221,78,26)" fg:x="4906310" fg:w="798"/><text x="84.6773%" y="63.50"></text></g><g><title>DropNode(1152) (1,485 Execution Cost Units, 0.03%)</title><rect x="84.4411%" y="53" width="0.0256%" height="15" fill="rgb(250,127,30)" fg:x="4907108" fg:w="1485"/><text x="84.6911%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1103) (40,001 Execution Cost Units, 0.69%)</title><rect x="84.4974%" y="37" width="0.6883%" height="15" fill="rgb(230,49,44)" fg:x="4910381" fg:w="40001"/><text x="84.7474%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lqfj6847j2mvhxjz289pxu7d34az0k9hgy4366tjfcrjs8s4qyffpf&gt;::FungibleBucket::get_amount (1096) (58,092 Execution Cost Units, 1.00%)</title><rect x="84.4666%" y="53" width="0.9996%" height="15" fill="rgb(229,67,23)" fg:x="4908593" fg:w="58092"/><text x="84.7166%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleBucket(1120) (11,016 Execution Cost Units, 0.19%)</title><rect x="85.2767%" y="37" width="0.1896%" height="15" fill="rgb(249,83,47)" fg:x="4955669" fg:w="11016"/><text x="85.5267%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1162) (593 Execution Cost Units, 0.01%)</title><rect x="85.4663%" y="53" width="0.0102%" height="15" fill="rgb(215,43,3)" fg:x="4966685" fg:w="593"/><text x="85.7163%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1026) (40,001 Execution Cost Units, 0.69%)</title><rect x="85.4858%" y="53" width="0.6883%" height="15" fill="rgb(238,154,13)" fg:x="4967819" fg:w="40001"/><text x="85.7358%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1032) (40,204 Execution Cost Units, 0.69%)</title><rect x="86.1799%" y="53" width="0.6918%" height="15" fill="rgb(219,56,2)" fg:x="5008159" fg:w="40204"/><text x="86.4299%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1034) (4,389 Execution Cost Units, 0.08%)</title><rect x="86.8718%" y="53" width="0.0755%" height="15" fill="rgb(233,0,4)" fg:x="5048363" fg:w="4389"/><text x="87.1218%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1042) (40,082 Execution Cost Units, 0.69%)</title><rect x="86.9473%" y="53" width="0.6897%" height="15" fill="rgb(235,30,7)" fg:x="5052752" fg:w="40082"/><text x="87.1973%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1044) (1,957 Execution Cost Units, 0.03%)</title><rect x="87.6370%" y="53" width="0.0337%" height="15" fill="rgb(250,79,13)" fg:x="5092834" fg:w="1957"/><text x="87.8870%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1087) (40,017 Execution Cost Units, 0.69%)</title><rect x="87.6826%" y="53" width="0.6886%" height="15" fill="rgb(211,146,34)" fg:x="5095485" fg:w="40017"/><text x="87.9326%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1089) (651 Execution Cost Units, 0.01%)</title><rect x="88.3712%" y="53" width="0.0112%" height="15" fill="rgb(228,22,38)" fg:x="5135502" fg:w="651"/><text x="88.6212%" y="63.50"></text></g><g><title>ReadSubstate(1035) (4,199 Execution Cost Units, 0.07%)</title><rect x="88.4930%" y="53" width="0.0723%" height="15" fill="rgb(235,168,5)" fg:x="5142575" fg:w="4199"/><text x="88.7430%" y="63.50"></text></g><g><title>ReadSubstate(1045) (1,767 Execution Cost Units, 0.03%)</title><rect x="88.5690%" y="53" width="0.0304%" height="15" fill="rgb(221,155,16)" fg:x="5146997" fg:w="1767"/><text x="88.8190%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_put(1059) (29,033 Execution Cost Units, 0.50%)</title><rect x="88.6701%" y="53" width="0.4996%" height="15" fill="rgb(215,215,53)" fg:x="5152868" fg:w="29033"/><text x="88.9201%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lpqm4mlluwc6f36yv4cv5ypwljrchnr84uadvtyskjdftrnyyc9gap&gt;::Worktop::Worktop_put (1019) (279,238 Execution Cost Units, 4.81%)</title><rect x="84.3778%" y="69" width="4.8051%" height="15" fill="rgb(223,4,10)" fg:x="4903431" fg:w="279238"/><text x="84.6278%" y="79.50">Invoca..</text></g><g><title>OpenSubstate::GlobalAccount(1297) (160,000 Execution Cost Units, 2.75%)</title><rect x="89.2201%" y="69" width="2.7533%" height="15" fill="rgb(234,103,6)" fg:x="5184833" fg:w="160000"/><text x="89.4701%" y="79.50">Op..</text></g><g><title>OpenSubstate::GlobalAccount(1302) (40,009 Execution Cost Units, 0.69%)</title><rect x="91.9790%" y="69" width="0.6885%" height="15" fill="rgb(227,97,0)" fg:x="5345160" fg:w="40009"/><text x="92.2290%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1006) (40,002 Execution Cost Units, 0.69%)</title><rect x="92.7501%" y="69" width="0.6884%" height="15" fill="rgb(234,150,53)" fg:x="5389972" fg:w="40002"/><text x="93.0001%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1287) (40,075 Execution Cost Units, 0.69%)</title><rect x="93.4445%" y="69" width="0.6896%" height="15" fill="rgb(228,201,54)" fg:x="5430323" fg:w="40075"/><text x="93.6945%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1289) (1,805 Execution Cost Units, 0.03%)</title><rect x="94.1341%" y="69" width="0.0311%" height="15" fill="rgb(222,22,37)" fg:x="5470398" fg:w="1805"/><text x="94.3841%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(18) (40,001 Execution Cost Units, 0.69%)</title><rect x="94.1652%" y="69" width="0.6883%" height="15" fill="rgb(237,53,32)" fg:x="5472203" fg:w="40001"/><text x="94.4152%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(24) (40,021 Execution Cost Units, 0.69%)</title><rect x="94.8593%" y="69" width="0.6887%" height="15" fill="rgb(233,25,53)" fg:x="5512543" fg:w="40021"/><text x="95.1093%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(26) (737 Execution Cost Units, 0.01%)</title><rect x="95.5480%" y="69" width="0.0127%" height="15" fill="rgb(210,40,34)" fg:x="5552564" fg:w="737"/><text x="95.7980%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(30) (40,039 Execution Cost Units, 0.69%)</title><rect x="95.5607%" y="69" width="0.6890%" height="15" fill="rgb(241,220,44)" fg:x="5553301" fg:w="40039"/><text x="95.8107%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(32) (1,095 Execution Cost Units, 0.02%)</title><rect x="96.2497%" y="69" width="0.0188%" height="15" fill="rgb(235,28,35)" fg:x="5593340" fg:w="1095"/><text x="96.4997%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(36) (40,001 Execution Cost Units, 0.69%)</title><rect x="96.2685%" y="69" width="0.6883%" height="15" fill="rgb(210,56,17)" fg:x="5594435" fg:w="40001"/><text x="96.5185%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(42) (40,002 Execution Cost Units, 0.69%)</title><rect x="96.9627%" y="69" width="0.6884%" height="15" fill="rgb(224,130,29)" fg:x="5634775" fg:w="40002"/><text x="97.2127%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(72) (40,002 Execution Cost Units, 0.69%)</title><rect x="97.6571%" y="69" width="0.6884%" height="15" fill="rgb(235,212,8)" fg:x="5675132" fg:w="40002"/><text x="97.9071%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1308) (605 Execution Cost Units, 0.01%)</title><rect x="98.4494%" y="69" width="0.0104%" height="15" fill="rgb(223,33,50)" fg:x="5721171" fg:w="605"/><text x="98.6994%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1604) (605 Execution Cost Units, 0.01%)</title><rect x="98.4774%" y="69" width="0.0104%" height="15" fill="rgb(219,149,13)" fg:x="5722802" fg:w="605"/><text x="98.7274%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1671) (605 Execution Cost Units, 0.01%)</title><rect x="98.5038%" y="69" width="0.0104%" height="15" fill="rgb(250,156,29)" fg:x="5724331" fg:w="605"/><text x="98.7538%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(450) (605 Execution Cost Units, 0.01%)</title><rect x="98.5221%" y="69" width="0.0104%" height="15" fill="rgb(216,193,19)" fg:x="5725399" fg:w="605"/><text x="98.7721%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(966) (605 Execution Cost Units, 0.01%)</title><rect x="98.5405%" y="69" width="0.0104%" height="15" fill="rgb(216,135,14)" fg:x="5726467" fg:w="605"/><text x="98.7905%" y="79.50"></text></g><g><title>ReadSubstate(1290) (1,615 Execution Cost Units, 0.03%)</title><rect x="98.6634%" y="69" width="0.0278%" height="15" fill="rgb(241,47,5)" fg:x="5733611" fg:w="1615"/><text x="98.9134%" y="79.50"></text></g><g><title>ReadSubstate(33) (905 Execution Cost Units, 0.02%)</title><rect x="98.7544%" y="69" width="0.0156%" height="15" fill="rgb(233,42,35)" fg:x="5738898" fg:w="905"/><text x="99.0044%" y="79.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (16) (5,665,331 Execution Cost Units, 97.49%)</title><rect x="1.4248%" y="85" width="97.4885%" height="15" fill="rgb(231,13,6)" fg:x="82797" fg:w="5665331"/><text x="1.6748%" y="95.50">Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (16)</text></g><g><title>OpenSubstate::GlobalPackage(11) (40,002 Execution Cost Units, 0.69%)</title><rect x="98.9133%" y="85" width="0.6884%" height="15" fill="rgb(207,181,40)" fg:x="5748128" fg:w="40002"/><text x="99.1633%" y="95.50"></text></g><g><title>ValidateTxPayload(0) (6,800 Execution Cost Units, 0.12%)</title><rect x="99.6351%" y="85" width="0.1170%" height="15" fill="rgb(254,173,49)" fg:x="5790078" fg:w="6800"/><text x="99.8851%" y="95.50"></text></g><g><title>VerifyTxSignatures(1) (14,000 Execution Cost Units, 0.24%)</title><rect x="99.7521%" y="85" width="0.2409%" height="15" fill="rgb(221,1,38)" fg:x="5796878" fg:w="14000"/><text x="100.0021%" y="95.50"></text></g><g><title>all (5,811,282 Execution Cost Units, 100%)</title><rect x="0.0000%" y="101" width="100.0000%" height="15" fill="rgb(206,124,46)" fg:x="0" fg:w="5811282"/><text x="0.2500%" y="111.50"></text></g></svg></svg>