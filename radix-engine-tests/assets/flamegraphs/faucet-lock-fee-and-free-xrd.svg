<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="150" onload="init(evt)" viewBox="0 0 1200 150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="150" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">faucet-lock-fee-and-free-xrd</text><text id="details" fill="rgb(0,0,0)" x="10" y="133.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="133.00"> </text><svg id="frames" x="10" width="1180" total_samples="5812782"><g><title>CheckReference(2) (40,011 Execution Cost Units, 0.69%)</title><rect x="0.0017%" y="85" width="0.6883%" height="15" fill="rgb(227,0,7)" fg:x="97" fg:w="40011"/><text x="0.2517%" y="95.50"></text></g><g><title>CheckReference(3) (40,011 Execution Cost Units, 0.69%)</title><rect x="0.6900%" y="85" width="0.6883%" height="15" fill="rgb(217,0,24)" fg:x="40108" fg:w="40011"/><text x="0.9400%" y="95.50"></text></g><g><title>CreateNode(6) (802 Execution Cost Units, 0.01%)</title><rect x="1.3850%" y="85" width="0.0138%" height="15" fill="rgb(221,193,54)" fg:x="80506" fg:w="802"/><text x="1.6350%" y="95.50"></text></g><g><title>DropNode(1701) (1,489 Execution Cost Units, 0.03%)</title><rect x="1.3988%" y="85" width="0.0256%" height="15" fill="rgb(248,212,6)" fg:x="81308" fg:w="1489"/><text x="1.6488%" y="95.50"></text></g><g><title>CreateNode(1198) (798 Execution Cost Units, 0.01%)</title><rect x="1.5583%" y="69" width="0.0137%" height="15" fill="rgb(208,68,35)" fg:x="90582" fg:w="798"/><text x="1.8083%" y="79.50"></text></g><g><title>CreateNode(1279) (918 Execution Cost Units, 0.02%)</title><rect x="1.5721%" y="69" width="0.0158%" height="15" fill="rgb(232,128,0)" fg:x="91380" fg:w="918"/><text x="1.8221%" y="79.50"></text></g><g><title>CreateNode(1621) (918 Execution Cost Units, 0.02%)</title><rect x="1.5878%" y="69" width="0.0158%" height="15" fill="rgb(207,160,47)" fg:x="92298" fg:w="918"/><text x="1.8378%" y="79.50"></text></g><g><title>CreateNode(474) (918 Execution Cost Units, 0.02%)</title><rect x="1.6036%" y="69" width="0.0158%" height="15" fill="rgb(228,23,34)" fg:x="93216" fg:w="918"/><text x="1.8536%" y="79.50"></text></g><g><title>CreateNode(49) (644 Execution Cost Units, 0.01%)</title><rect x="1.6194%" y="69" width="0.0111%" height="15" fill="rgb(218,30,26)" fg:x="94134" fg:w="644"/><text x="1.8694%" y="79.50"></text></g><g><title>CreateNode(63) (918 Execution Cost Units, 0.02%)</title><rect x="1.6305%" y="69" width="0.0158%" height="15" fill="rgb(220,122,19)" fg:x="94778" fg:w="918"/><text x="1.8805%" y="79.50"></text></g><g><title>CreateNode(997) (798 Execution Cost Units, 0.01%)</title><rect x="1.6463%" y="69" width="0.0137%" height="15" fill="rgb(250,228,42)" fg:x="95696" fg:w="798"/><text x="1.8963%" y="79.50"></text></g><g><title>DropNode(1185) (1,485 Execution Cost Units, 0.03%)</title><rect x="1.6600%" y="69" width="0.0255%" height="15" fill="rgb(240,193,28)" fg:x="96494" fg:w="1485"/><text x="1.9100%" y="79.50"></text></g><g><title>DropNode(1269) (1,485 Execution Cost Units, 0.03%)</title><rect x="1.6856%" y="69" width="0.0255%" height="15" fill="rgb(216,20,37)" fg:x="97979" fg:w="1485"/><text x="1.9356%" y="79.50"></text></g><g><title>DropNode(1618) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7111%" y="69" width="0.0276%" height="15" fill="rgb(206,188,39)" fg:x="99464" fg:w="1605"/><text x="1.9611%" y="79.50"></text></g><g><title>DropNode(1686) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7387%" y="69" width="0.0276%" height="15" fill="rgb(217,207,13)" fg:x="101069" fg:w="1605"/><text x="1.9887%" y="79.50"></text></g><g><title>DropNode(464) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7663%" y="69" width="0.0276%" height="15" fill="rgb(231,73,38)" fg:x="102674" fg:w="1605"/><text x="2.0163%" y="79.50"></text></g><g><title>DropNode(980) (1,605 Execution Cost Units, 0.03%)</title><rect x="1.7940%" y="69" width="0.0276%" height="15" fill="rgb(225,20,46)" fg:x="104279" fg:w="1605"/><text x="2.0440%" y="79.50"></text></g><g><title>DropNode(1670) (1,331 Execution Cost Units, 0.02%)</title><rect x="1.8508%" y="53" width="0.0229%" height="15" fill="rgb(210,31,41)" fg:x="107582" fg:w="1331"/><text x="2.1008%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_drop(1652) (17,918 Execution Cost Units, 0.31%)</title><rect x="1.9574%" y="53" width="0.3083%" height="15" fill="rgb(221,200,47)" fg:x="113781" fg:w="17918"/><text x="2.2074%" y="63.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9&gt;::Worktop::Worktop_drop (1630) (25,563 Execution Cost Units, 0.44%)</title><rect x="1.8302%" y="69" width="0.4398%" height="15" fill="rgb(226,26,5)" fg:x="106384" fg:w="25563"/><text x="2.0802%" y="79.50"></text></g><g><title>CreateNode(1390) (980 Execution Cost Units, 0.02%)</title><rect x="2.3458%" y="53" width="0.0169%" height="15" fill="rgb(249,33,26)" fg:x="136356" fg:w="980"/><text x="2.5958%" y="63.50"></text></g><g><title>CreateNode(1486) (980 Execution Cost Units, 0.02%)</title><rect x="2.3627%" y="53" width="0.0169%" height="15" fill="rgb(235,183,28)" fg:x="137336" fg:w="980"/><text x="2.6127%" y="63.50"></text></g><g><title>DropNode(1458) (1,667 Execution Cost Units, 0.03%)</title><rect x="2.3795%" y="53" width="0.0287%" height="15" fill="rgb(221,5,38)" fg:x="138316" fg:w="1667"/><text x="2.6295%" y="63.50"></text></g><g><title>DropNode(1592) (1,667 Execution Cost Units, 0.03%)</title><rect x="2.4082%" y="53" width="0.0287%" height="15" fill="rgb(247,18,42)" fg:x="139983" fg:w="1667"/><text x="2.6582%" y="63.50"></text></g><g><title>EmitEvent(1594) (620 Execution Cost Units, 0.01%)</title><rect x="2.4369%" y="53" width="0.0107%" height="15" fill="rgb(241,131,45)" fg:x="141650" fg:w="620"/><text x="2.6869%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lqfj6847j2mvhxjz289pxu7d34az0k9hgy4366tjfcrjs8s4qyffpf&gt;::FungibleBucket::get_amount (1404) (18,091 Execution Cost Units, 0.31%)</title><rect x="2.4475%" y="53" width="0.3112%" height="15" fill="rgb(249,31,29)" fg:x="142270" fg:w="18091"/><text x="2.6975%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleBucket(1426) (11,016 Execution Cost Units, 0.19%)</title><rect x="2.5693%" y="37" width="0.1895%" height="15" fill="rgb(225,111,53)" fg:x="149345" fg:w="11016"/><text x="2.8193%" y="47.50"></text></g><g><title>DropNode(1558) (1,475 Execution Cost Units, 0.03%)</title><rect x="2.7899%" y="37" width="0.0254%" height="15" fill="rgb(238,160,17)" fg:x="162172" fg:w="1475"/><text x="3.0399%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1543) (593 Execution Cost Units, 0.01%)</title><rect x="2.8249%" y="37" width="0.0102%" height="15" fill="rgb(214,148,48)" fg:x="164203" fg:w="593"/><text x="3.0749%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(1564) (40,003 Execution Cost Units, 0.69%)</title><rect x="2.8898%" y="37" width="0.6882%" height="15" fill="rgb(232,36,49)" fg:x="167975" fg:w="40003"/><text x="3.1398%" y="47.50"></text></g><g><title>RunNativeCode::put_FungibleVault(1536) (24,554 Execution Cost Units, 0.42%)</title><rect x="3.6965%" y="37" width="0.4224%" height="15" fill="rgb(209,103,24)" fg:x="214869" fg:w="24554"/><text x="3.9465%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1trfekxxzevygt2uwrknmykuh8m2538myupm9d954d9q658844cxfp8&gt;::FungibleVault::put (1510) (79,354 Execution Cost Units, 1.37%)</title><rect x="2.7588%" y="53" width="1.3652%" height="15" fill="rgb(229,88,8)" fg:x="160361" fg:w="79354"/><text x="3.0088%" y="63.50"></text></g><g><title>OpenSubstate::GlobalAccount(1468) (40,004 Execution Cost Units, 0.69%)</title><rect x="4.1425%" y="53" width="0.6882%" height="15" fill="rgb(213,181,19)" fg:x="240797" fg:w="40004"/><text x="4.3925%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1464) (593 Execution Cost Units, 0.01%)</title><rect x="4.8469%" y="53" width="0.0102%" height="15" fill="rgb(254,191,54)" fg:x="281737" fg:w="593"/><text x="5.0969%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1501) (40,001 Execution Cost Units, 0.69%)</title><rect x="4.8571%" y="53" width="0.6882%" height="15" fill="rgb(241,83,37)" fg:x="282330" fg:w="40001"/><text x="5.1071%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1600) (593 Execution Cost Units, 0.01%)</title><rect x="5.5510%" y="53" width="0.0102%" height="15" fill="rgb(233,36,39)" fg:x="322670" fg:w="593"/><text x="5.8010%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1324) (40,013 Execution Cost Units, 0.69%)</title><rect x="5.5612%" y="53" width="0.6884%" height="15" fill="rgb(226,3,54)" fg:x="323263" fg:w="40013"/><text x="5.8112%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1330) (40,001 Execution Cost Units, 0.69%)</title><rect x="6.2595%" y="53" width="0.6882%" height="15" fill="rgb(245,192,40)" fg:x="363849" fg:w="40001"/><text x="6.5095%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1336) (40,013 Execution Cost Units, 0.69%)</title><rect x="6.9535%" y="53" width="0.6884%" height="15" fill="rgb(238,167,29)" fg:x="404189" fg:w="40013"/><text x="7.2035%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1342) (40,615 Execution Cost Units, 0.70%)</title><rect x="7.6518%" y="53" width="0.6987%" height="15" fill="rgb(232,182,51)" fg:x="444781" fg:w="40615"/><text x="7.9018%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1344) (12,611 Execution Cost Units, 0.22%)</title><rect x="8.3505%" y="53" width="0.2170%" height="15" fill="rgb(231,60,39)" fg:x="485396" fg:w="12611"/><text x="8.6005%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1352) (40,370 Execution Cost Units, 0.69%)</title><rect x="8.5674%" y="53" width="0.6945%" height="15" fill="rgb(208,69,12)" fg:x="498007" fg:w="40370"/><text x="8.8174%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1354) (7,715 Execution Cost Units, 0.13%)</title><rect x="9.2620%" y="53" width="0.1327%" height="15" fill="rgb(235,93,37)" fg:x="538377" fg:w="7715"/><text x="9.5120%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1362) (40,001 Execution Cost Units, 0.69%)</title><rect x="9.3947%" y="53" width="0.6882%" height="15" fill="rgb(213,116,39)" fg:x="546092" fg:w="40001"/><text x="9.6447%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1368) (40,002 Execution Cost Units, 0.69%)</title><rect x="10.0887%" y="53" width="0.6882%" height="15" fill="rgb(222,207,29)" fg:x="586432" fg:w="40002"/><text x="10.3387%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(1473) (40,011 Execution Cost Units, 0.69%)</title><rect x="10.7829%" y="53" width="0.6883%" height="15" fill="rgb(206,96,30)" fg:x="626789" fg:w="40011"/><text x="11.0329%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1387) (605 Execution Cost Units, 0.01%)</title><rect x="11.5450%" y="53" width="0.0104%" height="15" fill="rgb(218,138,4)" fg:x="671088" fg:w="605"/><text x="11.7950%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1446) (667 Execution Cost Units, 0.01%)</title><rect x="11.5739%" y="53" width="0.0115%" height="15" fill="rgb(250,191,14)" fg:x="672767" fg:w="667"/><text x="11.8239%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1483) (605 Execution Cost Units, 0.01%)</title><rect x="11.5934%" y="53" width="0.0104%" height="15" fill="rgb(239,60,40)" fg:x="673897" fg:w="605"/><text x="11.8434%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1580) (667 Execution Cost Units, 0.01%)</title><rect x="11.6130%" y="53" width="0.0115%" height="15" fill="rgb(206,27,48)" fg:x="675039" fg:w="667"/><text x="11.8630%" y="63.50"></text></g><g><title>ReadSubstate(1345) (12,421 Execution Cost Units, 0.21%)</title><rect x="11.6487%" y="53" width="0.2137%" height="15" fill="rgb(225,35,8)" fg:x="677114" fg:w="12421"/><text x="11.8987%" y="63.50"></text></g><g><title>ReadSubstate(1355) (7,525 Execution Cost Units, 0.13%)</title><rect x="11.8684%" y="53" width="0.1295%" height="15" fill="rgb(250,213,24)" fg:x="689886" fg:w="7525"/><text x="12.1184%" y="63.50"></text></g><g><title>RunNativeCode::deposit_batch(1373) (110,731 Execution Cost Units, 1.90%)</title><rect x="12.1302%" y="53" width="1.9050%" height="15" fill="rgb(247,123,22)" fg:x="705102" fg:w="110731"/><text x="12.3802%" y="63.50">R..</text></g><g><title>WriteSubstate(1448) (582 Execution Cost Units, 0.01%)</title><rect x="14.0352%" y="53" width="0.0100%" height="15" fill="rgb(231,138,38)" fg:x="815833" fg:w="582"/><text x="14.2852%" y="63.50"></text></g><g><title>WriteSubstate(1582) (582 Execution Cost Units, 0.01%)</title><rect x="14.0452%" y="53" width="0.0100%" height="15" fill="rgb(231,145,46)" fg:x="816415" fg:w="582"/><text x="14.2952%" y="63.50"></text></g><g><title>Invocation: Method &lt;account_sim1c8m6h4yv2x9ca0wx5ddtl0nctqmjt2t740wfjgj9w8sdz82zf8ppcr&gt;::Account::deposit_batch (1321) (685,050 Execution Cost Units, 11.79%)</title><rect x="2.2699%" y="69" width="11.7852%" height="15" fill="rgb(251,118,11)" fg:x="131947" fg:w="685050"/><text x="2.5199%" y="79.50">Invocation: Metho..</text></g><g><title>CreateNode(557) (870 Execution Cost Units, 0.01%)</title><rect x="14.1481%" y="53" width="0.0150%" height="15" fill="rgb(217,147,25)" fg:x="822400" fg:w="870"/><text x="14.3981%" y="63.50"></text></g><g><title>CreateNode(703) (980 Execution Cost Units, 0.02%)</title><rect x="14.1631%" y="53" width="0.0169%" height="15" fill="rgb(247,81,37)" fg:x="823270" fg:w="980"/><text x="14.4131%" y="63.50"></text></g><g><title>CreateNode(801) (980 Execution Cost Units, 0.02%)</title><rect x="14.1800%" y="53" width="0.0169%" height="15" fill="rgb(209,12,38)" fg:x="824250" fg:w="980"/><text x="14.4300%" y="63.50"></text></g><g><title>DropNode(648) (1,557 Execution Cost Units, 0.03%)</title><rect x="14.1968%" y="53" width="0.0268%" height="15" fill="rgb(227,1,9)" fg:x="825230" fg:w="1557"/><text x="14.4468%" y="63.50"></text></g><g><title>DropNode(771) (1,667 Execution Cost Units, 0.03%)</title><rect x="14.2236%" y="53" width="0.0287%" height="15" fill="rgb(248,47,43)" fg:x="826787" fg:w="1667"/><text x="14.4736%" y="63.50"></text></g><g><title>DropNode(925) (1,667 Execution Cost Units, 0.03%)</title><rect x="14.2523%" y="53" width="0.0287%" height="15" fill="rgb(221,10,30)" fg:x="828454" fg:w="1667"/><text x="14.5023%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(579) (40,013 Execution Cost Units, 0.69%)</title><rect x="14.3313%" y="37" width="0.6884%" height="15" fill="rgb(210,229,1)" fg:x="833046" fg:w="40013"/><text x="14.5813%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(585) (40,001 Execution Cost Units, 0.69%)</title><rect x="15.0295%" y="37" width="0.6882%" height="15" fill="rgb(222,148,37)" fg:x="873632" fg:w="40001"/><text x="15.2795%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(591) (40,013 Execution Cost Units, 0.69%)</title><rect x="15.7235%" y="37" width="0.6884%" height="15" fill="rgb(234,67,33)" fg:x="913972" fg:w="40013"/><text x="15.9735%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(597) (40,207 Execution Cost Units, 0.69%)</title><rect x="16.4218%" y="37" width="0.6917%" height="15" fill="rgb(247,98,35)" fg:x="954564" fg:w="40207"/><text x="16.6718%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(599) (4,455 Execution Cost Units, 0.08%)</title><rect x="17.1135%" y="37" width="0.0766%" height="15" fill="rgb(247,138,52)" fg:x="994771" fg:w="4455"/><text x="17.3635%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(607) (40,341 Execution Cost Units, 0.69%)</title><rect x="17.1902%" y="37" width="0.6940%" height="15" fill="rgb(213,79,30)" fg:x="999226" fg:w="40341"/><text x="17.4402%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(609) (7,135 Execution Cost Units, 0.12%)</title><rect x="17.8842%" y="37" width="0.1227%" height="15" fill="rgb(246,177,23)" fg:x="1039567" fg:w="7135"/><text x="18.1342%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(613) (40,001 Execution Cost Units, 0.69%)</title><rect x="18.0069%" y="37" width="0.6882%" height="15" fill="rgb(230,62,27)" fg:x="1046702" fg:w="40001"/><text x="18.2569%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(619) (40,002 Execution Cost Units, 0.69%)</title><rect x="18.7009%" y="37" width="0.6882%" height="15" fill="rgb(216,154,8)" fg:x="1087042" fg:w="40002"/><text x="18.9509%" y="47.50"></text></g><g><title>ReadSubstate(600) (4,265 Execution Cost Units, 0.07%)</title><rect x="19.4110%" y="37" width="0.0734%" height="15" fill="rgb(244,35,45)" fg:x="1128320" fg:w="4265"/><text x="19.6610%" y="47.50"></text></g><g><title>ReadSubstate(610) (6,945 Execution Cost Units, 0.12%)</title><rect x="19.4907%" y="37" width="0.1195%" height="15" fill="rgb(251,115,12)" fg:x="1132954" fg:w="6945"/><text x="19.7407%" y="47.50"></text></g><g><title>Invocation: Method &lt;consensusmanager_sim1scxxxxxxxxxxcnsmgrxxxxxxxxx000999665565xxxxxxxxxxc06cl&gt;::ConsensusManager::get_current_epoch (576) (324,051 Execution Cost Units, 5.57%)</title><rect x="14.2810%" y="53" width="5.5748%" height="15" fill="rgb(240,54,50)" fg:x="830121" fg:w="324051"/><text x="14.5310%" y="63.50">Invocat..</text></g><g><title>RunNativeCode::get_current_epoch(624) (13,363 Execution Cost Units, 0.23%)</title><rect x="19.6259%" y="37" width="0.2299%" height="15" fill="rgb(233,84,52)" fg:x="1140809" fg:w="13363"/><text x="19.8759%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::get_amount (717) (21,684 Execution Cost Units, 0.37%)</title><rect x="19.8558%" y="53" width="0.3730%" height="15" fill="rgb(207,117,47)" fg:x="1154172" fg:w="21684"/><text x="20.1058%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleVault(739) (14,451 Execution Cost Units, 0.25%)</title><rect x="19.9802%" y="37" width="0.2486%" height="15" fill="rgb(249,43,39)" fg:x="1161405" fg:w="14451"/><text x="20.2302%" y="47.50"></text></g><g><title>CreateNode(891) (788 Execution Cost Units, 0.01%)</title><rect x="20.2725%" y="37" width="0.0136%" height="15" fill="rgb(209,38,44)" fg:x="1178399" fg:w="788"/><text x="20.5225%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(848) (593 Execution Cost Units, 0.01%)</title><rect x="20.2957%" y="37" width="0.0102%" height="15" fill="rgb(236,212,23)" fg:x="1179743" fg:w="593"/><text x="20.5457%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(856) (593 Execution Cost Units, 0.01%)</title><rect x="20.3059%" y="37" width="0.0102%" height="15" fill="rgb(242,79,21)" fg:x="1180336" fg:w="593"/><text x="20.5559%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(881) (593 Execution Cost Units, 0.01%)</title><rect x="20.3218%" y="37" width="0.0102%" height="15" fill="rgb(211,96,35)" fg:x="1181260" fg:w="593"/><text x="20.5718%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(875) (40,207 Execution Cost Units, 0.69%)</title><rect x="20.3590%" y="37" width="0.6917%" height="15" fill="rgb(253,215,40)" fg:x="1183427" fg:w="40207"/><text x="20.6090%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(877) (4,447 Execution Cost Units, 0.08%)</title><rect x="21.0507%" y="37" width="0.0765%" height="15" fill="rgb(211,81,21)" fg:x="1223634" fg:w="4447"/><text x="21.3007%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(885) (40,101 Execution Cost Units, 0.69%)</title><rect x="21.1273%" y="37" width="0.6899%" height="15" fill="rgb(208,190,38)" fg:x="1228081" fg:w="40101"/><text x="21.3773%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(887) (2,335 Execution Cost Units, 0.04%)</title><rect x="21.8171%" y="37" width="0.0402%" height="15" fill="rgb(235,213,38)" fg:x="1268182" fg:w="2335"/><text x="22.0671%" y="47.50"></text></g><g><title>ReadSubstate(878) (4,257 Execution Cost Units, 0.07%)</title><rect x="21.9976%" y="37" width="0.0732%" height="15" fill="rgb(237,122,38)" fg:x="1278670" fg:w="4257"/><text x="22.2476%" y="47.50"></text></g><g><title>ReadSubstate(888) (2,145 Execution Cost Units, 0.04%)</title><rect x="22.0777%" y="37" width="0.0369%" height="15" fill="rgb(244,218,35)" fg:x="1283330" fg:w="2145"/><text x="22.3277%" y="47.50"></text></g><g><title>RunNativeCode::take_FungibleVault(841) (42,457 Execution Cost Units, 0.73%)</title><rect x="22.1308%" y="37" width="0.7304%" height="15" fill="rgb(240,68,47)" fg:x="1286418" fg:w="42457"/><text x="22.3808%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::take (819) (153,311 Execution Cost Units, 2.64%)</title><rect x="20.2288%" y="53" width="2.6375%" height="15" fill="rgb(210,16,53)" fg:x="1175856" fg:w="153311"/><text x="20.4788%" y="63.50">In..</text></g><g><title>OpenSubstate::GlobalConsensusManager(547) (40,012 Execution Cost Units, 0.69%)</title><rect x="22.8663%" y="53" width="0.6883%" height="15" fill="rgb(235,124,12)" fg:x="1329167" fg:w="40012"/><text x="23.1163%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(510) (354,209 Execution Cost Units, 6.09%)</title><rect x="23.6525%" y="53" width="6.0936%" height="15" fill="rgb(224,169,11)" fg:x="1374871" fg:w="354209"/><text x="23.9025%" y="63.50">OpenSubs..</text></g><g><title>OpenSubstate::GlobalPackage(567) (40,023 Execution Cost Units, 0.69%)</title><rect x="29.7462%" y="53" width="0.6885%" height="15" fill="rgb(250,166,2)" fg:x="1729080" fg:w="40023"/><text x="29.9962%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(569) (765 Execution Cost Units, 0.01%)</title><rect x="30.4347%" y="53" width="0.0132%" height="15" fill="rgb(242,216,29)" fg:x="1769103" fg:w="765"/><text x="30.6847%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(700) (605 Execution Cost Units, 0.01%)</title><rect x="30.5482%" y="53" width="0.0104%" height="15" fill="rgb(230,116,27)" fg:x="1775703" fg:w="605"/><text x="30.7982%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(759) (667 Execution Cost Units, 0.01%)</title><rect x="30.5587%" y="53" width="0.0115%" height="15" fill="rgb(228,99,48)" fg:x="1776308" fg:w="667"/><text x="30.8087%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(798) (605 Execution Cost Units, 0.01%)</title><rect x="30.5781%" y="53" width="0.0104%" height="15" fill="rgb(253,11,6)" fg:x="1777438" fg:w="605"/><text x="30.8281%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(913) (667 Execution Cost Units, 0.01%)</title><rect x="30.5885%" y="53" width="0.0115%" height="15" fill="rgb(247,143,39)" fg:x="1778043" fg:w="667"/><text x="30.8385%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(662) (160,000 Execution Cost Units, 2.75%)</title><rect x="30.6355%" y="53" width="2.7526%" height="15" fill="rgb(236,97,10)" fg:x="1780772" fg:w="160000"/><text x="30.8855%" y="63.50">Op..</text></g><g><title>PrepareWasmCode(513) (353,866 Execution Cost Units, 6.09%)</title><rect x="33.4179%" y="53" width="6.0877%" height="15" fill="rgb(233,208,19)" fg:x="1942512" fg:w="353866"/><text x="33.6679%" y="63.50">PrepareW..</text></g><g><title>ReadSubstate(511) (354,019 Execution Cost Units, 6.09%)</title><rect x="39.5345%" y="53" width="6.0904%" height="15" fill="rgb(216,164,2)" fg:x="2298057" fg:w="354019"/><text x="39.7845%" y="63.50">ReadSubs..</text></g><g><title>RunWasmCode::Faucet_free(514) (1,034 Execution Cost Units, 0.02%)</title><rect x="45.8031%" y="53" width="0.0178%" height="15" fill="rgb(220,129,5)" fg:x="2662437" fg:w="1034"/><text x="46.0531%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_free(516) (5,004 Execution Cost Units, 0.09%)</title><rect x="45.8267%" y="53" width="0.0861%" height="15" fill="rgb(242,17,10)" fg:x="2663805" fg:w="5004"/><text x="46.0767%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_free(670) (734 Execution Cost Units, 0.01%)</title><rect x="46.1032%" y="53" width="0.0126%" height="15" fill="rgb(242,107,0)" fg:x="2679880" fg:w="734"/><text x="46.3532%" y="63.50"></text></g><g><title>WriteSubstate(761) (582 Execution Cost Units, 0.01%)</title><rect x="46.4147%" y="53" width="0.0100%" height="15" fill="rgb(251,28,31)" fg:x="2697984" fg:w="582"/><text x="46.6647%" y="63.50"></text></g><g><title>WriteSubstate(915) (582 Execution Cost Units, 0.01%)</title><rect x="46.4247%" y="53" width="0.0100%" height="15" fill="rgb(233,223,10)" fg:x="2698566" fg:w="582"/><text x="46.6747%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::free (487) (1,882,515 Execution Cost Units, 32.39%)</title><rect x="14.0552%" y="69" width="32.3858%" height="15" fill="rgb(215,21,27)" fg:x="816997" fg:w="1882515"/><text x="14.3052%" y="79.50">Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucet..</text></g><g><title>CreateNode(180) (980 Execution Cost Units, 0.02%)</title><rect x="46.5119%" y="53" width="0.0169%" height="15" fill="rgb(232,23,21)" fg:x="2703637" fg:w="980"/><text x="46.7619%" y="63.50"></text></g><g><title>CreateNode(313) (980 Execution Cost Units, 0.02%)</title><rect x="46.5288%" y="53" width="0.0169%" height="15" fill="rgb(244,5,23)" fg:x="2704617" fg:w="980"/><text x="46.7788%" y="63.50"></text></g><g><title>DropNode(283) (1,667 Execution Cost Units, 0.03%)</title><rect x="46.5456%" y="53" width="0.0287%" height="15" fill="rgb(226,81,46)" fg:x="2705597" fg:w="1667"/><text x="46.7956%" y="63.50"></text></g><g><title>DropNode(421) (1,667 Execution Cost Units, 0.03%)</title><rect x="46.5743%" y="53" width="0.0287%" height="15" fill="rgb(247,70,30)" fg:x="2707264" fg:w="1667"/><text x="46.8243%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(203) (40,011 Execution Cost Units, 0.69%)</title><rect x="46.6298%" y="37" width="0.6883%" height="15" fill="rgb(212,68,19)" fg:x="2710491" fg:w="40011"/><text x="46.8798%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(209) (40,001 Execution Cost Units, 0.69%)</title><rect x="47.3275%" y="37" width="0.6882%" height="15" fill="rgb(240,187,13)" fg:x="2751043" fg:w="40001"/><text x="47.5775%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(215) (40,293 Execution Cost Units, 0.69%)</title><rect x="48.0215%" y="37" width="0.6932%" height="15" fill="rgb(223,113,26)" fg:x="2791383" fg:w="40293"/><text x="48.2715%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(217) (6,171 Execution Cost Units, 0.11%)</title><rect x="48.7146%" y="37" width="0.1062%" height="15" fill="rgb(206,192,2)" fg:x="2831676" fg:w="6171"/><text x="48.9646%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(225) (40,179 Execution Cost Units, 0.69%)</title><rect x="48.8208%" y="37" width="0.6912%" height="15" fill="rgb(241,108,4)" fg:x="2837847" fg:w="40179"/><text x="49.0708%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(227) (3,883 Execution Cost Units, 0.07%)</title><rect x="49.5120%" y="37" width="0.0668%" height="15" fill="rgb(247,173,49)" fg:x="2878026" fg:w="3883"/><text x="49.7620%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(231) (40,001 Execution Cost Units, 0.69%)</title><rect x="49.5788%" y="37" width="0.6882%" height="15" fill="rgb(224,114,35)" fg:x="2881909" fg:w="40001"/><text x="49.8288%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(237) (40,002 Execution Cost Units, 0.69%)</title><rect x="50.2728%" y="37" width="0.6882%" height="15" fill="rgb(245,159,27)" fg:x="2922249" fg:w="40002"/><text x="50.5228%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(248) (40,003 Execution Cost Units, 0.69%)</title><rect x="50.9855%" y="37" width="0.6882%" height="15" fill="rgb(245,172,44)" fg:x="2963676" fg:w="40003"/><text x="51.2355%" y="47.50"></text></g><g><title>ReadSubstate(218) (5,981 Execution Cost Units, 0.10%)</title><rect x="51.7038%" y="37" width="0.1029%" height="15" fill="rgb(236,23,11)" fg:x="3005430" fg:w="5981"/><text x="51.9538%" y="47.50"></text></g><g><title>ReadSubstate(228) (3,693 Execution Cost Units, 0.06%)</title><rect x="51.8126%" y="37" width="0.0635%" height="15" fill="rgb(205,117,38)" fg:x="3011756" fg:w="3693"/><text x="52.0626%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::get_amount (200) (322,160 Execution Cost Units, 5.54%)</title><rect x="46.6030%" y="53" width="5.5423%" height="15" fill="rgb(237,72,25)" fg:x="2708931" fg:w="322160"/><text x="46.8530%" y="63.50">Invocat..</text></g><g><title>RunNativeCode::get_amount_FungibleVault(242) (14,451 Execution Cost Units, 0.25%)</title><rect x="51.8967%" y="37" width="0.2486%" height="15" fill="rgb(244,70,9)" fg:x="3016640" fg:w="14451"/><text x="52.1467%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(362) (40,014 Execution Cost Units, 0.69%)</title><rect x="52.2054%" y="37" width="0.6884%" height="15" fill="rgb(217,125,39)" fg:x="3034589" fg:w="40014"/><text x="52.4554%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(364) (593 Execution Cost Units, 0.01%)</title><rect x="52.8938%" y="37" width="0.0102%" height="15" fill="rgb(235,36,10)" fg:x="3074603" fg:w="593"/><text x="53.1438%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(377) (593 Execution Cost Units, 0.01%)</title><rect x="52.9040%" y="37" width="0.0102%" height="15" fill="rgb(251,123,47)" fg:x="3075196" fg:w="593"/><text x="53.1540%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(387) (40,001 Execution Cost Units, 0.69%)</title><rect x="52.9142%" y="37" width="0.6882%" height="15" fill="rgb(221,13,13)" fg:x="3075789" fg:w="40001"/><text x="53.1642%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(381) (40,292 Execution Cost Units, 0.69%)</title><rect x="53.6352%" y="37" width="0.6932%" height="15" fill="rgb(238,131,9)" fg:x="3117695" fg:w="40292"/><text x="53.8852%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(383) (6,153 Execution Cost Units, 0.11%)</title><rect x="54.3283%" y="37" width="0.1059%" height="15" fill="rgb(211,50,8)" fg:x="3157987" fg:w="6153"/><text x="54.5783%" y="47.50"></text></g><g><title>ReadSubstate(384) (5,963 Execution Cost Units, 0.10%)</title><rect x="54.5555%" y="37" width="0.1026%" height="15" fill="rgb(245,182,24)" fg:x="3171192" fg:w="5963"/><text x="54.8055%" y="47.50"></text></g><g><title>RunNativeCode::lock_fee(355) (45,243 Execution Cost Units, 0.78%)</title><rect x="54.6729%" y="37" width="0.7783%" height="15" fill="rgb(242,14,37)" fg:x="3178015" fg:w="45243"/><text x="54.9229%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u&gt;::FungibleVault::lock_fee (333) (192,459 Execution Cost Units, 3.31%)</title><rect x="52.1453%" y="53" width="3.3110%" height="15" fill="rgb(246,228,12)" fg:x="3031091" fg:w="192459"/><text x="52.3953%" y="63.50">Inv..</text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(328) (40,001 Execution Cost Units, 0.69%)</title><rect x="55.4562%" y="53" width="0.6882%" height="15" fill="rgb(213,55,15)" fg:x="3223550" fg:w="40001"/><text x="55.7062%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(145) (40,007 Execution Cost Units, 0.69%)</title><rect x="56.1688%" y="53" width="0.6883%" height="15" fill="rgb(209,9,3)" fg:x="3264968" fg:w="40007"/><text x="56.4188%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(103) (40,075 Execution Cost Units, 0.69%)</title><rect x="56.8648%" y="53" width="0.6894%" height="15" fill="rgb(230,59,30)" fg:x="3305424" fg:w="40075"/><text x="57.1148%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(105) (1,819 Execution Cost Units, 0.03%)</title><rect x="57.5542%" y="53" width="0.0313%" height="15" fill="rgb(209,121,21)" fg:x="3345499" fg:w="1819"/><text x="57.8042%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(113) (40,035 Execution Cost Units, 0.69%)</title><rect x="57.5855%" y="53" width="0.6887%" height="15" fill="rgb(220,109,13)" fg:x="3347318" fg:w="40035"/><text x="57.8355%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(115) (1,003 Execution Cost Units, 0.02%)</title><rect x="58.2742%" y="53" width="0.0173%" height="15" fill="rgb(232,18,1)" fg:x="3387353" fg:w="1003"/><text x="58.5242%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(119) (40,001 Execution Cost Units, 0.69%)</title><rect x="58.2915%" y="53" width="0.6882%" height="15" fill="rgb(215,41,42)" fg:x="3388356" fg:w="40001"/><text x="58.5415%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(125) (57,695 Execution Cost Units, 0.99%)</title><rect x="58.9855%" y="53" width="0.9926%" height="15" fill="rgb(224,123,36)" fg:x="3428696" fg:w="57695"/><text x="59.2355%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(127) (354,209 Execution Cost Units, 6.09%)</title><rect x="59.9780%" y="53" width="6.0936%" height="15" fill="rgb(240,125,3)" fg:x="3486391" fg:w="354209"/><text x="60.2280%" y="63.50">OpenSubs..</text></g><g><title>OpenSubstate::GlobalPackage(191) (40,027 Execution Cost Units, 0.69%)</title><rect x="66.0716%" y="53" width="0.6886%" height="15" fill="rgb(205,98,50)" fg:x="3840600" fg:w="40027"/><text x="66.3216%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(193) (853 Execution Cost Units, 0.01%)</title><rect x="66.7602%" y="53" width="0.0147%" height="15" fill="rgb(205,185,37)" fg:x="3880627" fg:w="853"/><text x="67.0102%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(276) (40,221 Execution Cost Units, 0.69%)</title><rect x="66.7749%" y="53" width="0.6919%" height="15" fill="rgb(238,207,15)" fg:x="3881480" fg:w="40221"/><text x="67.0249%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(278) (4,739 Execution Cost Units, 0.08%)</title><rect x="67.4669%" y="53" width="0.0815%" height="15" fill="rgb(213,199,42)" fg:x="3921701" fg:w="4739"/><text x="67.7169%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(85) (40,013 Execution Cost Units, 0.69%)</title><rect x="67.5484%" y="53" width="0.6884%" height="15" fill="rgb(235,201,11)" fg:x="3926440" fg:w="40013"/><text x="67.7984%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(91) (40,001 Execution Cost Units, 0.69%)</title><rect x="68.2466%" y="53" width="0.6882%" height="15" fill="rgb(207,46,11)" fg:x="3967026" fg:w="40001"/><text x="68.4966%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(97) (40,001 Execution Cost Units, 0.69%)</title><rect x="68.9406%" y="53" width="0.6882%" height="15" fill="rgb(241,35,35)" fg:x="4007366" fg:w="40001"/><text x="69.1906%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(167) (40,011 Execution Cost Units, 0.69%)</title><rect x="69.6346%" y="53" width="0.6883%" height="15" fill="rgb(243,32,47)" fg:x="4047706" fg:w="40011"/><text x="69.8846%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(177) (605 Execution Cost Units, 0.01%)</title><rect x="70.4057%" y="53" width="0.0104%" height="15" fill="rgb(247,202,23)" fg:x="4092532" fg:w="605"/><text x="70.6557%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(265) (667 Execution Cost Units, 0.01%)</title><rect x="70.4161%" y="53" width="0.0115%" height="15" fill="rgb(219,102,11)" fg:x="4093137" fg:w="667"/><text x="70.6661%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(310) (605 Execution Cost Units, 0.01%)</title><rect x="70.4356%" y="53" width="0.0104%" height="15" fill="rgb(243,110,44)" fg:x="4094267" fg:w="605"/><text x="70.6856%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(409) (667 Execution Cost Units, 0.01%)</title><rect x="70.4460%" y="53" width="0.0115%" height="15" fill="rgb(222,74,54)" fg:x="4094872" fg:w="667"/><text x="70.6960%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(441) (40,011 Execution Cost Units, 0.69%)</title><rect x="70.4654%" y="53" width="0.6883%" height="15" fill="rgb(216,99,12)" fg:x="4096002" fg:w="40011"/><text x="70.7154%" y="63.50"></text></g><g><title>PrepareWasmCode(130) (353,866 Execution Cost Units, 6.09%)</title><rect x="71.1632%" y="53" width="6.0877%" height="15" fill="rgb(226,22,26)" fg:x="4136562" fg:w="353866"/><text x="71.4132%" y="63.50">PrepareW..</text></g><g><title>ReadSubstate(106) (1,629 Execution Cost Units, 0.03%)</title><rect x="77.2535%" y="53" width="0.0280%" height="15" fill="rgb(217,163,10)" fg:x="4490577" fg:w="1629"/><text x="77.5035%" y="63.50"></text></g><g><title>ReadSubstate(116) (813 Execution Cost Units, 0.01%)</title><rect x="77.2875%" y="53" width="0.0140%" height="15" fill="rgb(213,25,53)" fg:x="4492555" fg:w="813"/><text x="77.5375%" y="63.50"></text></g><g><title>ReadSubstate(128) (354,019 Execution Cost Units, 6.09%)</title><rect x="77.3041%" y="53" width="6.0904%" height="15" fill="rgb(252,105,26)" fg:x="4493517" fg:w="354019"/><text x="77.5541%" y="63.50">ReadSubs..</text></g><g><title>ReadSubstate(194) (663 Execution Cost Units, 0.01%)</title><rect x="83.4335%" y="53" width="0.0114%" height="15" fill="rgb(220,39,43)" fg:x="4849805" fg:w="663"/><text x="83.6835%" y="63.50"></text></g><g><title>ReadSubstate(279) (4,549 Execution Cost Units, 0.08%)</title><rect x="83.4620%" y="53" width="0.0783%" height="15" fill="rgb(229,68,48)" fg:x="4851467" fg:w="4549"/><text x="83.7120%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(131) (590 Execution Cost Units, 0.01%)</title><rect x="83.6050%" y="53" width="0.0102%" height="15" fill="rgb(252,8,32)" fg:x="4859778" fg:w="590"/><text x="83.8550%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(133) (5,004 Execution Cost Units, 0.09%)</title><rect x="83.6209%" y="53" width="0.0861%" height="15" fill="rgb(223,20,43)" fg:x="4860702" fg:w="5004"/><text x="83.8709%" y="63.50"></text></g><g><title>WriteSubstate(267) (582 Execution Cost Units, 0.01%)</title><rect x="84.0280%" y="53" width="0.0100%" height="15" fill="rgb(229,81,49)" fg:x="4884367" fg:w="582"/><text x="84.2780%" y="63.50"></text></g><g><title>WriteSubstate(411) (582 Execution Cost Units, 0.01%)</title><rect x="84.0381%" y="53" width="0.0100%" height="15" fill="rgb(236,28,36)" fg:x="4884949" fg:w="582"/><text x="84.2881%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh&gt;::Faucet::lock_fee (82) (2,186,383 Execution Cost Units, 37.61%)</title><rect x="46.4410%" y="69" width="37.6134%" height="15" fill="rgb(249,185,26)" fg:x="2699512" fg:w="2186383"/><text x="46.6910%" y="79.50">Invocation: Method &lt;component_sim1cptxxxxxxxxxfaucetxxxxxxxxx..</text></g><g><title>RunNativeCode::Worktop_drain(1234) (11,224 Execution Cost Units, 0.19%)</title><rect x="84.1845%" y="53" width="0.1931%" height="15" fill="rgb(249,174,33)" fg:x="4893459" fg:w="11224"/><text x="84.4345%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lpqm4mlluwc6f36yv4cv5ypwljrchnr84uadvtyskjdftrnyyc9gap&gt;::Worktop::Worktop_drain (1212) (19,036 Execution Cost Units, 0.33%)</title><rect x="84.0543%" y="69" width="0.3275%" height="15" fill="rgb(233,201,37)" fg:x="4885895" fg:w="19036"/><text x="84.3043%" y="79.50"></text></g><g><title>CreateNode(1078) (798 Execution Cost Units, 0.01%)</title><rect x="84.4313%" y="53" width="0.0137%" height="15" fill="rgb(221,78,26)" fg:x="4907810" fg:w="798"/><text x="84.6813%" y="63.50"></text></g><g><title>DropNode(1154) (1,485 Execution Cost Units, 0.03%)</title><rect x="84.4451%" y="53" width="0.0255%" height="15" fill="rgb(250,127,30)" fg:x="4908608" fg:w="1485"/><text x="84.6951%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1105) (40,001 Execution Cost Units, 0.69%)</title><rect x="84.5014%" y="37" width="0.6882%" height="15" fill="rgb(230,49,44)" fg:x="4911881" fg:w="40001"/><text x="84.7514%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lqfj6847j2mvhxjz289pxu7d34az0k9hgy4366tjfcrjs8s4qyffpf&gt;::FungibleBucket::get_amount (1098) (58,092 Execution Cost Units, 1.00%)</title><rect x="84.4706%" y="53" width="0.9994%" height="15" fill="rgb(229,67,23)" fg:x="4910093" fg:w="58092"/><text x="84.7206%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleBucket(1122) (11,016 Execution Cost Units, 0.19%)</title><rect x="85.2805%" y="37" width="0.1895%" height="15" fill="rgb(249,83,47)" fg:x="4957169" fg:w="11016"/><text x="85.5305%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1164) (593 Execution Cost Units, 0.01%)</title><rect x="85.4700%" y="53" width="0.0102%" height="15" fill="rgb(215,43,3)" fg:x="4968185" fg:w="593"/><text x="85.7200%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1028) (40,001 Execution Cost Units, 0.69%)</title><rect x="85.4895%" y="53" width="0.6882%" height="15" fill="rgb(238,154,13)" fg:x="4969319" fg:w="40001"/><text x="85.7395%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1034) (40,204 Execution Cost Units, 0.69%)</title><rect x="86.1835%" y="53" width="0.6916%" height="15" fill="rgb(219,56,2)" fg:x="5009659" fg:w="40204"/><text x="86.4335%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1036) (4,389 Execution Cost Units, 0.08%)</title><rect x="86.8751%" y="53" width="0.0755%" height="15" fill="rgb(233,0,4)" fg:x="5049863" fg:w="4389"/><text x="87.1251%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1044) (40,082 Execution Cost Units, 0.69%)</title><rect x="86.9507%" y="53" width="0.6895%" height="15" fill="rgb(235,30,7)" fg:x="5054252" fg:w="40082"/><text x="87.2007%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1046) (1,957 Execution Cost Units, 0.03%)</title><rect x="87.6402%" y="53" width="0.0337%" height="15" fill="rgb(250,79,13)" fg:x="5094334" fg:w="1957"/><text x="87.8902%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1089) (40,017 Execution Cost Units, 0.69%)</title><rect x="87.6858%" y="53" width="0.6884%" height="15" fill="rgb(211,146,34)" fg:x="5096985" fg:w="40017"/><text x="87.9358%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1091) (651 Execution Cost Units, 0.01%)</title><rect x="88.3742%" y="53" width="0.0112%" height="15" fill="rgb(228,22,38)" fg:x="5137002" fg:w="651"/><text x="88.6242%" y="63.50"></text></g><g><title>ReadSubstate(1037) (4,199 Execution Cost Units, 0.07%)</title><rect x="88.4959%" y="53" width="0.0722%" height="15" fill="rgb(235,168,5)" fg:x="5144075" fg:w="4199"/><text x="88.7459%" y="63.50"></text></g><g><title>ReadSubstate(1047) (1,767 Execution Cost Units, 0.03%)</title><rect x="88.5720%" y="53" width="0.0304%" height="15" fill="rgb(221,155,16)" fg:x="5148497" fg:w="1767"/><text x="88.8220%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_put(1061) (29,033 Execution Cost Units, 0.50%)</title><rect x="88.6730%" y="53" width="0.4995%" height="15" fill="rgb(215,215,53)" fg:x="5154368" fg:w="29033"/><text x="88.9230%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_sim1lpqm4mlluwc6f36yv4cv5ypwljrchnr84uadvtyskjdftrnyyc9gap&gt;::Worktop::Worktop_put (1021) (279,238 Execution Cost Units, 4.80%)</title><rect x="84.3818%" y="69" width="4.8039%" height="15" fill="rgb(223,4,10)" fg:x="4904931" fg:w="279238"/><text x="84.6318%" y="79.50">Invoca..</text></g><g><title>OpenSubstate::GlobalAccount(1299) (160,000 Execution Cost Units, 2.75%)</title><rect x="89.2229%" y="69" width="2.7526%" height="15" fill="rgb(234,103,6)" fg:x="5186333" fg:w="160000"/><text x="89.4729%" y="79.50">Op..</text></g><g><title>OpenSubstate::GlobalAccount(1304) (40,009 Execution Cost Units, 0.69%)</title><rect x="91.9811%" y="69" width="0.6883%" height="15" fill="rgb(227,97,0)" fg:x="5346660" fg:w="40009"/><text x="92.2311%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1008) (40,002 Execution Cost Units, 0.69%)</title><rect x="92.7520%" y="69" width="0.6882%" height="15" fill="rgb(234,150,53)" fg:x="5391472" fg:w="40002"/><text x="93.0020%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1289) (40,075 Execution Cost Units, 0.69%)</title><rect x="93.4462%" y="69" width="0.6894%" height="15" fill="rgb(228,201,54)" fg:x="5431823" fg:w="40075"/><text x="93.6962%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1291) (1,805 Execution Cost Units, 0.03%)</title><rect x="94.1356%" y="69" width="0.0311%" height="15" fill="rgb(222,22,37)" fg:x="5471898" fg:w="1805"/><text x="94.3856%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(19) (40,001 Execution Cost Units, 0.69%)</title><rect x="94.1667%" y="69" width="0.6882%" height="15" fill="rgb(237,53,32)" fg:x="5473703" fg:w="40001"/><text x="94.4167%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(25) (40,021 Execution Cost Units, 0.69%)</title><rect x="94.8607%" y="69" width="0.6885%" height="15" fill="rgb(233,25,53)" fg:x="5514043" fg:w="40021"/><text x="95.1107%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(27) (737 Execution Cost Units, 0.01%)</title><rect x="95.5492%" y="69" width="0.0127%" height="15" fill="rgb(210,40,34)" fg:x="5554064" fg:w="737"/><text x="95.7992%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(31) (40,039 Execution Cost Units, 0.69%)</title><rect x="95.5618%" y="69" width="0.6888%" height="15" fill="rgb(241,220,44)" fg:x="5554801" fg:w="40039"/><text x="95.8118%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(33) (1,095 Execution Cost Units, 0.02%)</title><rect x="96.2506%" y="69" width="0.0188%" height="15" fill="rgb(235,28,35)" fg:x="5594840" fg:w="1095"/><text x="96.5006%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(37) (40,001 Execution Cost Units, 0.69%)</title><rect x="96.2695%" y="69" width="0.6882%" height="15" fill="rgb(210,56,17)" fg:x="5595935" fg:w="40001"/><text x="96.5195%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(43) (40,002 Execution Cost Units, 0.69%)</title><rect x="96.9635%" y="69" width="0.6882%" height="15" fill="rgb(224,130,29)" fg:x="5636275" fg:w="40002"/><text x="97.2135%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(73) (40,002 Execution Cost Units, 0.69%)</title><rect x="97.6577%" y="69" width="0.6882%" height="15" fill="rgb(235,212,8)" fg:x="5676632" fg:w="40002"/><text x="97.9077%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1310) (605 Execution Cost Units, 0.01%)</title><rect x="98.4498%" y="69" width="0.0104%" height="15" fill="rgb(223,33,50)" fg:x="5722671" fg:w="605"/><text x="98.6998%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1606) (605 Execution Cost Units, 0.01%)</title><rect x="98.4778%" y="69" width="0.0104%" height="15" fill="rgb(219,149,13)" fg:x="5724302" fg:w="605"/><text x="98.7278%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1674) (605 Execution Cost Units, 0.01%)</title><rect x="98.5041%" y="69" width="0.0104%" height="15" fill="rgb(250,156,29)" fg:x="5725831" fg:w="605"/><text x="98.7541%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(452) (605 Execution Cost Units, 0.01%)</title><rect x="98.5225%" y="69" width="0.0104%" height="15" fill="rgb(216,193,19)" fg:x="5726899" fg:w="605"/><text x="98.7725%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(968) (605 Execution Cost Units, 0.01%)</title><rect x="98.5409%" y="69" width="0.0104%" height="15" fill="rgb(216,135,14)" fg:x="5727967" fg:w="605"/><text x="98.7909%" y="79.50"></text></g><g><title>ReadSubstate(1292) (1,615 Execution Cost Units, 0.03%)</title><rect x="98.6638%" y="69" width="0.0278%" height="15" fill="rgb(241,47,5)" fg:x="5735111" fg:w="1615"/><text x="98.9138%" y="79.50"></text></g><g><title>ReadSubstate(34) (905 Execution Cost Units, 0.02%)</title><rect x="98.7547%" y="69" width="0.0156%" height="15" fill="rgb(233,42,35)" fg:x="5740398" fg:w="905"/><text x="99.0047%" y="79.50"></text></g><g><title>Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (17) (5,666,331 Execution Cost Units, 97.48%)</title><rect x="1.4330%" y="85" width="97.4805%" height="15" fill="rgb(231,13,6)" fg:x="83297" fg:w="5666331"/><text x="1.6830%" y="95.50">Invocation: Function &lt;package_sim1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxx4dvqkl&gt;::TransactionProcessor::run (17)</text></g><g><title>OpenSubstate::GlobalPackage(12) (40,002 Execution Cost Units, 0.69%)</title><rect x="98.9135%" y="85" width="0.6882%" height="15" fill="rgb(207,181,40)" fg:x="5749628" fg:w="40002"/><text x="99.1635%" y="95.50"></text></g><g><title>ValidateTxPayload(0) (6,800 Execution Cost Units, 0.12%)</title><rect x="99.6352%" y="85" width="0.1170%" height="15" fill="rgb(254,173,49)" fg:x="5791578" fg:w="6800"/><text x="99.8852%" y="95.50"></text></g><g><title>VerifyTxSignatures(1) (14,000 Execution Cost Units, 0.24%)</title><rect x="99.7522%" y="85" width="0.2408%" height="15" fill="rgb(221,1,38)" fg:x="5798378" fg:w="14000"/><text x="100.0022%" y="95.50"></text></g><g><title>all (5,812,782 Execution Cost Units, 100%)</title><rect x="0.0000%" y="101" width="100.0000%" height="15" fill="rgb(206,124,46)" fg:x="0" fg:w="5812782"/><text x="0.2500%" y="111.50"></text></g></svg></svg>