<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="150" onload="init(evt)" viewBox="0 0 1200 150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="150" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Faucet Free XRD</text><text id="details" fill="rgb(0,0,0)" x="10" y="133.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="133.00"> </text><svg id="frames" x="10" width="1180" total_samples="5811282"><g><title>CreateNode(5) (802 Execution Cost Units, 0.01%)</title><rect x="0.0083%" y="85" width="0.0138%" height="15" fill="rgb(227,0,7)" fg:x="484" fg:w="802"/><text x="0.2583%" y="95.50"></text></g><g><title>DropNode(1698) (1,489 Execution Cost Units, 0.03%)</title><rect x="0.0221%" y="85" width="0.0256%" height="15" fill="rgb(217,0,24)" fg:x="1286" fg:w="1489"/><text x="0.2721%" y="95.50"></text></g><g><title>CreateNode(1196) (798 Execution Cost Units, 0.01%)</title><rect x="0.1731%" y="69" width="0.0137%" height="15" fill="rgb(221,193,54)" fg:x="10060" fg:w="798"/><text x="0.4231%" y="79.50"></text></g><g><title>CreateNode(1277) (918 Execution Cost Units, 0.02%)</title><rect x="0.1868%" y="69" width="0.0158%" height="15" fill="rgb(248,212,6)" fg:x="10858" fg:w="918"/><text x="0.4368%" y="79.50"></text></g><g><title>CreateNode(1618) (918 Execution Cost Units, 0.02%)</title><rect x="0.2026%" y="69" width="0.0158%" height="15" fill="rgb(208,68,35)" fg:x="11776" fg:w="918"/><text x="0.4526%" y="79.50"></text></g><g><title>CreateNode(472) (918 Execution Cost Units, 0.02%)</title><rect x="0.2184%" y="69" width="0.0158%" height="15" fill="rgb(232,128,0)" fg:x="12694" fg:w="918"/><text x="0.4684%" y="79.50"></text></g><g><title>CreateNode(48) (644 Execution Cost Units, 0.01%)</title><rect x="0.2342%" y="69" width="0.0111%" height="15" fill="rgb(207,160,47)" fg:x="13612" fg:w="644"/><text x="0.4842%" y="79.50"></text></g><g><title>CreateNode(62) (918 Execution Cost Units, 0.02%)</title><rect x="0.2453%" y="69" width="0.0158%" height="15" fill="rgb(228,23,34)" fg:x="14256" fg:w="918"/><text x="0.4953%" y="79.50"></text></g><g><title>CreateNode(995) (798 Execution Cost Units, 0.01%)</title><rect x="0.2611%" y="69" width="0.0137%" height="15" fill="rgb(218,30,26)" fg:x="15174" fg:w="798"/><text x="0.5111%" y="79.50"></text></g><g><title>DropNode(1183) (1,485 Execution Cost Units, 0.03%)</title><rect x="0.2748%" y="69" width="0.0256%" height="15" fill="rgb(220,122,19)" fg:x="15972" fg:w="1485"/><text x="0.5248%" y="79.50"></text></g><g><title>DropNode(1267) (1,485 Execution Cost Units, 0.03%)</title><rect x="0.3004%" y="69" width="0.0256%" height="15" fill="rgb(250,228,42)" fg:x="17457" fg:w="1485"/><text x="0.5504%" y="79.50"></text></g><g><title>DropNode(1616) (1,605 Execution Cost Units, 0.03%)</title><rect x="0.3260%" y="69" width="0.0276%" height="15" fill="rgb(240,193,28)" fg:x="18942" fg:w="1605"/><text x="0.5760%" y="79.50"></text></g><g><title>DropNode(1683) (1,605 Execution Cost Units, 0.03%)</title><rect x="0.3536%" y="69" width="0.0276%" height="15" fill="rgb(216,20,37)" fg:x="20547" fg:w="1605"/><text x="0.6036%" y="79.50"></text></g><g><title>DropNode(462) (1,605 Execution Cost Units, 0.03%)</title><rect x="0.3812%" y="69" width="0.0276%" height="15" fill="rgb(206,188,39)" fg:x="22152" fg:w="1605"/><text x="0.6312%" y="79.50"></text></g><g><title>DropNode(978) (1,605 Execution Cost Units, 0.03%)</title><rect x="0.4088%" y="69" width="0.0276%" height="15" fill="rgb(217,207,13)" fg:x="23757" fg:w="1605"/><text x="0.6588%" y="79.50"></text></g><g><title>DropNode(1667) (1,331 Execution Cost Units, 0.02%)</title><rect x="0.4570%" y="53" width="0.0229%" height="15" fill="rgb(231,73,38)" fg:x="26560" fg:w="1331"/><text x="0.7070%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_drop(1649) (17,918 Execution Cost Units, 0.31%)</title><rect x="0.5637%" y="53" width="0.3083%" height="15" fill="rgb(225,20,46)" fg:x="32759" fg:w="17918"/><text x="0.8137%" y="63.50"></text></g><g><title>Invocation: Function &lt;package_rdx1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxresrce&gt;::Worktop::Worktop_drop (1627) (25,563 Execution Cost Units, 0.44%)</title><rect x="0.4364%" y="69" width="0.4399%" height="15" fill="rgb(210,31,41)" fg:x="25362" fg:w="25563"/><text x="0.6864%" y="79.50"></text></g><g><title>CreateNode(1388) (980 Execution Cost Units, 0.02%)</title><rect x="0.9522%" y="53" width="0.0169%" height="15" fill="rgb(221,200,47)" fg:x="55334" fg:w="980"/><text x="1.2022%" y="63.50"></text></g><g><title>CreateNode(1484) (980 Execution Cost Units, 0.02%)</title><rect x="0.9690%" y="53" width="0.0169%" height="15" fill="rgb(226,26,5)" fg:x="56314" fg:w="980"/><text x="1.2190%" y="63.50"></text></g><g><title>DropNode(1456) (1,667 Execution Cost Units, 0.03%)</title><rect x="0.9859%" y="53" width="0.0287%" height="15" fill="rgb(249,33,26)" fg:x="57294" fg:w="1667"/><text x="1.2359%" y="63.50"></text></g><g><title>DropNode(1590) (1,667 Execution Cost Units, 0.03%)</title><rect x="1.0146%" y="53" width="0.0287%" height="15" fill="rgb(235,183,28)" fg:x="58961" fg:w="1667"/><text x="1.2646%" y="63.50"></text></g><g><title>EmitEvent(1592) (620 Execution Cost Units, 0.01%)</title><rect x="1.0433%" y="53" width="0.0107%" height="15" fill="rgb(221,5,38)" fg:x="60628" fg:w="620"/><text x="1.2933%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_rdx1lqfj6847j2mvhxjz289pxu7d34az0k9hgy4366tjfcrjs8s470kg34&gt;::FungibleBucket::get_amount (1402) (18,091 Execution Cost Units, 0.31%)</title><rect x="1.0539%" y="53" width="0.3113%" height="15" fill="rgb(247,18,42)" fg:x="61248" fg:w="18091"/><text x="1.3039%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleBucket(1424) (11,016 Execution Cost Units, 0.19%)</title><rect x="1.1757%" y="37" width="0.1896%" height="15" fill="rgb(241,131,45)" fg:x="68323" fg:w="11016"/><text x="1.4257%" y="47.50"></text></g><g><title>DropNode(1556) (1,475 Execution Cost Units, 0.03%)</title><rect x="1.3964%" y="37" width="0.0254%" height="15" fill="rgb(249,31,29)" fg:x="81150" fg:w="1475"/><text x="1.6464%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1541) (593 Execution Cost Units, 0.01%)</title><rect x="1.4314%" y="37" width="0.0102%" height="15" fill="rgb(225,111,53)" fg:x="83181" fg:w="593"/><text x="1.6814%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(1562) (40,003 Execution Cost Units, 0.69%)</title><rect x="1.4963%" y="37" width="0.6884%" height="15" fill="rgb(238,160,17)" fg:x="86953" fg:w="40003"/><text x="1.7463%" y="47.50"></text></g><g><title>RunNativeCode::put_FungibleVault(1534) (24,554 Execution Cost Units, 0.42%)</title><rect x="2.3032%" y="37" width="0.4225%" height="15" fill="rgb(214,148,48)" fg:x="133847" fg:w="24554"/><text x="2.5532%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_rdx1trfekxxzevygt2uwrknmykuh8m2538myupm9d954d9q65884tneg3m&gt;::FungibleVault::put (1508) (79,354 Execution Cost Units, 1.37%)</title><rect x="1.3653%" y="53" width="1.3655%" height="15" fill="rgb(232,36,49)" fg:x="79339" fg:w="79354"/><text x="1.6153%" y="63.50"></text></g><g><title>OpenSubstate::GlobalAccount(1466) (40,004 Execution Cost Units, 0.69%)</title><rect x="2.7494%" y="53" width="0.6884%" height="15" fill="rgb(209,103,24)" fg:x="159775" fg:w="40004"/><text x="2.9994%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1462) (593 Execution Cost Units, 0.01%)</title><rect x="3.4539%" y="53" width="0.0102%" height="15" fill="rgb(229,88,8)" fg:x="200715" fg:w="593"/><text x="3.7039%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1499) (40,001 Execution Cost Units, 0.69%)</title><rect x="3.4641%" y="53" width="0.6883%" height="15" fill="rgb(213,181,19)" fg:x="201308" fg:w="40001"/><text x="3.7141%" y="63.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1598) (593 Execution Cost Units, 0.01%)</title><rect x="4.1583%" y="53" width="0.0102%" height="15" fill="rgb(254,191,54)" fg:x="241648" fg:w="593"/><text x="4.4083%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1322) (40,013 Execution Cost Units, 0.69%)</title><rect x="4.1685%" y="53" width="0.6885%" height="15" fill="rgb(241,83,37)" fg:x="242241" fg:w="40013"/><text x="4.4185%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1328) (40,001 Execution Cost Units, 0.69%)</title><rect x="4.8669%" y="53" width="0.6883%" height="15" fill="rgb(233,36,39)" fg:x="282827" fg:w="40001"/><text x="5.1169%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1334) (40,013 Execution Cost Units, 0.69%)</title><rect x="5.5610%" y="53" width="0.6885%" height="15" fill="rgb(226,3,54)" fg:x="323167" fg:w="40013"/><text x="5.8110%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1340) (40,615 Execution Cost Units, 0.70%)</title><rect x="6.2595%" y="53" width="0.6989%" height="15" fill="rgb(245,192,40)" fg:x="363759" fg:w="40615"/><text x="6.5095%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1342) (12,611 Execution Cost Units, 0.22%)</title><rect x="6.9584%" y="53" width="0.2170%" height="15" fill="rgb(238,167,29)" fg:x="404374" fg:w="12611"/><text x="7.2084%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1350) (40,370 Execution Cost Units, 0.69%)</title><rect x="7.1754%" y="53" width="0.6947%" height="15" fill="rgb(232,182,51)" fg:x="416985" fg:w="40370"/><text x="7.4254%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1352) (7,715 Execution Cost Units, 0.13%)</title><rect x="7.8701%" y="53" width="0.1328%" height="15" fill="rgb(231,60,39)" fg:x="457355" fg:w="7715"/><text x="8.1201%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1360) (40,001 Execution Cost Units, 0.69%)</title><rect x="8.0029%" y="53" width="0.6883%" height="15" fill="rgb(208,69,12)" fg:x="465070" fg:w="40001"/><text x="8.2529%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1366) (40,002 Execution Cost Units, 0.69%)</title><rect x="8.6970%" y="53" width="0.6884%" height="15" fill="rgb(235,93,37)" fg:x="505410" fg:w="40002"/><text x="8.9470%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(1471) (40,011 Execution Cost Units, 0.69%)</title><rect x="9.3915%" y="53" width="0.6885%" height="15" fill="rgb(213,116,39)" fg:x="545767" fg:w="40011"/><text x="9.6415%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1385) (605 Execution Cost Units, 0.01%)</title><rect x="10.1538%" y="53" width="0.0104%" height="15" fill="rgb(222,207,29)" fg:x="590066" fg:w="605"/><text x="10.4038%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1444) (667 Execution Cost Units, 0.01%)</title><rect x="10.1827%" y="53" width="0.0115%" height="15" fill="rgb(206,96,30)" fg:x="591745" fg:w="667"/><text x="10.4327%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1481) (605 Execution Cost Units, 0.01%)</title><rect x="10.2021%" y="53" width="0.0104%" height="15" fill="rgb(218,138,4)" fg:x="592875" fg:w="605"/><text x="10.4521%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1578) (667 Execution Cost Units, 0.01%)</title><rect x="10.2218%" y="53" width="0.0115%" height="15" fill="rgb(250,191,14)" fg:x="594017" fg:w="667"/><text x="10.4718%" y="63.50"></text></g><g><title>ReadSubstate(1343) (12,421 Execution Cost Units, 0.21%)</title><rect x="10.2575%" y="53" width="0.2137%" height="15" fill="rgb(239,60,40)" fg:x="596092" fg:w="12421"/><text x="10.5075%" y="63.50"></text></g><g><title>ReadSubstate(1353) (7,525 Execution Cost Units, 0.13%)</title><rect x="10.4773%" y="53" width="0.1295%" height="15" fill="rgb(206,27,48)" fg:x="608864" fg:w="7525"/><text x="10.7273%" y="63.50"></text></g><g><title>RunNativeCode::deposit_batch(1371) (110,731 Execution Cost Units, 1.91%)</title><rect x="10.7391%" y="53" width="1.9054%" height="15" fill="rgb(225,35,8)" fg:x="624080" fg:w="110731"/><text x="10.9891%" y="63.50">R..</text></g><g><title>WriteSubstate(1446) (582 Execution Cost Units, 0.01%)</title><rect x="12.6446%" y="53" width="0.0100%" height="15" fill="rgb(250,213,24)" fg:x="734811" fg:w="582"/><text x="12.8946%" y="63.50"></text></g><g><title>WriteSubstate(1580) (582 Execution Cost Units, 0.01%)</title><rect x="12.6546%" y="53" width="0.0100%" height="15" fill="rgb(247,123,22)" fg:x="735393" fg:w="582"/><text x="12.9046%" y="63.50"></text></g><g><title>Invocation: Method &lt;account_rdx1c8m6h4yv2x9ca0wx5ddtl0nctqmjt2t740wfjgj9w8sdz82zhv7qgl&gt;::Account::deposit_batch (1319) (685,050 Execution Cost Units, 11.79%)</title><rect x="0.8763%" y="69" width="11.7883%" height="15" fill="rgb(231,138,38)" fg:x="50925" fg:w="685050"/><text x="1.1263%" y="79.50">Invocation: Metho..</text></g><g><title>CreateNode(555) (870 Execution Cost Units, 0.01%)</title><rect x="12.7576%" y="53" width="0.0150%" height="15" fill="rgb(231,145,46)" fg:x="741378" fg:w="870"/><text x="13.0076%" y="63.50"></text></g><g><title>CreateNode(701) (980 Execution Cost Units, 0.02%)</title><rect x="12.7725%" y="53" width="0.0169%" height="15" fill="rgb(251,118,11)" fg:x="742248" fg:w="980"/><text x="13.0225%" y="63.50"></text></g><g><title>CreateNode(799) (980 Execution Cost Units, 0.02%)</title><rect x="12.7894%" y="53" width="0.0169%" height="15" fill="rgb(217,147,25)" fg:x="743228" fg:w="980"/><text x="13.0394%" y="63.50"></text></g><g><title>DropNode(646) (1,557 Execution Cost Units, 0.03%)</title><rect x="12.8063%" y="53" width="0.0268%" height="15" fill="rgb(247,81,37)" fg:x="744208" fg:w="1557"/><text x="13.0563%" y="63.50"></text></g><g><title>DropNode(769) (1,667 Execution Cost Units, 0.03%)</title><rect x="12.8331%" y="53" width="0.0287%" height="15" fill="rgb(209,12,38)" fg:x="745765" fg:w="1667"/><text x="13.0831%" y="63.50"></text></g><g><title>DropNode(923) (1,667 Execution Cost Units, 0.03%)</title><rect x="12.8617%" y="53" width="0.0287%" height="15" fill="rgb(227,1,9)" fg:x="747432" fg:w="1667"/><text x="13.1117%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(577) (40,013 Execution Cost Units, 0.69%)</title><rect x="12.9408%" y="37" width="0.6885%" height="15" fill="rgb(248,47,43)" fg:x="752024" fg:w="40013"/><text x="13.1908%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(583) (40,001 Execution Cost Units, 0.69%)</title><rect x="13.6392%" y="37" width="0.6883%" height="15" fill="rgb(221,10,30)" fg:x="792610" fg:w="40001"/><text x="13.8892%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(589) (40,013 Execution Cost Units, 0.69%)</title><rect x="14.3333%" y="37" width="0.6885%" height="15" fill="rgb(210,229,1)" fg:x="832950" fg:w="40013"/><text x="14.5833%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(595) (40,207 Execution Cost Units, 0.69%)</title><rect x="15.0318%" y="37" width="0.6919%" height="15" fill="rgb(222,148,37)" fg:x="873542" fg:w="40207"/><text x="15.2818%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(597) (4,455 Execution Cost Units, 0.08%)</title><rect x="15.7237%" y="37" width="0.0767%" height="15" fill="rgb(234,67,33)" fg:x="913749" fg:w="4455"/><text x="15.9737%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(605) (40,341 Execution Cost Units, 0.69%)</title><rect x="15.8004%" y="37" width="0.6942%" height="15" fill="rgb(247,98,35)" fg:x="918204" fg:w="40341"/><text x="16.0504%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(607) (7,135 Execution Cost Units, 0.12%)</title><rect x="16.4946%" y="37" width="0.1228%" height="15" fill="rgb(247,138,52)" fg:x="958545" fg:w="7135"/><text x="16.7446%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(611) (40,001 Execution Cost Units, 0.69%)</title><rect x="16.6173%" y="37" width="0.6883%" height="15" fill="rgb(213,79,30)" fg:x="965680" fg:w="40001"/><text x="16.8673%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(617) (40,002 Execution Cost Units, 0.69%)</title><rect x="17.3115%" y="37" width="0.6884%" height="15" fill="rgb(246,177,23)" fg:x="1006020" fg:w="40002"/><text x="17.5615%" y="47.50"></text></g><g><title>ReadSubstate(598) (4,265 Execution Cost Units, 0.07%)</title><rect x="18.0218%" y="37" width="0.0734%" height="15" fill="rgb(230,62,27)" fg:x="1047298" fg:w="4265"/><text x="18.2718%" y="47.50"></text></g><g><title>ReadSubstate(608) (6,945 Execution Cost Units, 0.12%)</title><rect x="18.1015%" y="37" width="0.1195%" height="15" fill="rgb(216,154,8)" fg:x="1051932" fg:w="6945"/><text x="18.3515%" y="47.50"></text></g><g><title>Invocation: Method &lt;consensusmanager_rdx1scxxxxxxxxxxcnsmgrxxxxxxxxx000999665565xxxxxxxxxcnsmgr&gt;::ConsensusManager::get_current_epoch (574) (324,051 Execution Cost Units, 5.58%)</title><rect x="12.8904%" y="53" width="5.5762%" height="15" fill="rgb(244,35,45)" fg:x="749099" fg:w="324051"/><text x="13.1404%" y="63.50">Invocat..</text></g><g><title>RunNativeCode::get_current_epoch(622) (13,363 Execution Cost Units, 0.23%)</title><rect x="18.2367%" y="37" width="0.2299%" height="15" fill="rgb(251,115,12)" fg:x="1059787" fg:w="13363"/><text x="18.4867%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_rdx1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fxxrp6q&gt;::FungibleVault::get_amount (715) (21,684 Execution Cost Units, 0.37%)</title><rect x="18.4667%" y="53" width="0.3731%" height="15" fill="rgb(240,54,50)" fg:x="1073150" fg:w="21684"/><text x="18.7167%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleVault(737) (14,451 Execution Cost Units, 0.25%)</title><rect x="18.5911%" y="37" width="0.2487%" height="15" fill="rgb(233,84,52)" fg:x="1080383" fg:w="14451"/><text x="18.8411%" y="47.50"></text></g><g><title>CreateNode(889) (788 Execution Cost Units, 0.01%)</title><rect x="18.8836%" y="37" width="0.0136%" height="15" fill="rgb(207,117,47)" fg:x="1097377" fg:w="788"/><text x="19.1336%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(846) (593 Execution Cost Units, 0.01%)</title><rect x="18.9067%" y="37" width="0.0102%" height="15" fill="rgb(249,43,39)" fg:x="1098721" fg:w="593"/><text x="19.1567%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(854) (593 Execution Cost Units, 0.01%)</title><rect x="18.9169%" y="37" width="0.0102%" height="15" fill="rgb(209,38,44)" fg:x="1099314" fg:w="593"/><text x="19.1669%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(879) (593 Execution Cost Units, 0.01%)</title><rect x="18.9328%" y="37" width="0.0102%" height="15" fill="rgb(236,212,23)" fg:x="1100238" fg:w="593"/><text x="19.1828%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(873) (40,207 Execution Cost Units, 0.69%)</title><rect x="18.9701%" y="37" width="0.6919%" height="15" fill="rgb(242,79,21)" fg:x="1102405" fg:w="40207"/><text x="19.2201%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(875) (4,447 Execution Cost Units, 0.08%)</title><rect x="19.6620%" y="37" width="0.0765%" height="15" fill="rgb(211,96,35)" fg:x="1142612" fg:w="4447"/><text x="19.9120%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(883) (40,101 Execution Cost Units, 0.69%)</title><rect x="19.7385%" y="37" width="0.6901%" height="15" fill="rgb(253,215,40)" fg:x="1147059" fg:w="40101"/><text x="19.9885%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(885) (2,335 Execution Cost Units, 0.04%)</title><rect x="20.4285%" y="37" width="0.0402%" height="15" fill="rgb(211,81,21)" fg:x="1187160" fg:w="2335"/><text x="20.6785%" y="47.50"></text></g><g><title>ReadSubstate(876) (4,257 Execution Cost Units, 0.07%)</title><rect x="20.6090%" y="37" width="0.0733%" height="15" fill="rgb(208,190,38)" fg:x="1197648" fg:w="4257"/><text x="20.8590%" y="47.50"></text></g><g><title>ReadSubstate(886) (2,145 Execution Cost Units, 0.04%)</title><rect x="20.6892%" y="37" width="0.0369%" height="15" fill="rgb(235,213,38)" fg:x="1202308" fg:w="2145"/><text x="20.9392%" y="47.50"></text></g><g><title>RunNativeCode::take_FungibleVault(839) (42,457 Execution Cost Units, 0.73%)</title><rect x="20.7423%" y="37" width="0.7306%" height="15" fill="rgb(237,122,38)" fg:x="1205396" fg:w="42457"/><text x="20.9923%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_rdx1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fxxrp6q&gt;::FungibleVault::take (817) (153,311 Execution Cost Units, 2.64%)</title><rect x="18.8398%" y="53" width="2.6382%" height="15" fill="rgb(244,218,35)" fg:x="1094834" fg:w="153311"/><text x="19.0898%" y="63.50">In..</text></g><g><title>OpenSubstate::GlobalConsensusManager(545) (40,012 Execution Cost Units, 0.69%)</title><rect x="21.4780%" y="53" width="0.6885%" height="15" fill="rgb(240,68,47)" fg:x="1248145" fg:w="40012"/><text x="21.7280%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(508) (354,209 Execution Cost Units, 6.10%)</title><rect x="22.2644%" y="53" width="6.0952%" height="15" fill="rgb(210,16,53)" fg:x="1293849" fg:w="354209"/><text x="22.5144%" y="63.50">OpenSubs..</text></g><g><title>OpenSubstate::GlobalPackage(565) (40,023 Execution Cost Units, 0.69%)</title><rect x="28.3596%" y="53" width="0.6887%" height="15" fill="rgb(235,124,12)" fg:x="1648058" fg:w="40023"/><text x="28.6096%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(567) (765 Execution Cost Units, 0.01%)</title><rect x="29.0483%" y="53" width="0.0132%" height="15" fill="rgb(224,169,11)" fg:x="1688081" fg:w="765"/><text x="29.2983%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(698) (605 Execution Cost Units, 0.01%)</title><rect x="29.1619%" y="53" width="0.0104%" height="15" fill="rgb(250,166,2)" fg:x="1694681" fg:w="605"/><text x="29.4119%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(757) (667 Execution Cost Units, 0.01%)</title><rect x="29.1723%" y="53" width="0.0115%" height="15" fill="rgb(242,216,29)" fg:x="1695286" fg:w="667"/><text x="29.4223%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(796) (605 Execution Cost Units, 0.01%)</title><rect x="29.1918%" y="53" width="0.0104%" height="15" fill="rgb(230,116,27)" fg:x="1696416" fg:w="605"/><text x="29.4418%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(911) (667 Execution Cost Units, 0.01%)</title><rect x="29.2022%" y="53" width="0.0115%" height="15" fill="rgb(228,99,48)" fg:x="1697021" fg:w="667"/><text x="29.4522%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(660) (160,000 Execution Cost Units, 2.75%)</title><rect x="29.2491%" y="53" width="2.7533%" height="15" fill="rgb(253,11,6)" fg:x="1699750" fg:w="160000"/><text x="29.4991%" y="63.50">Op..</text></g><g><title>PrepareWasmCode(511) (353,866 Execution Cost Units, 6.09%)</title><rect x="32.0323%" y="53" width="6.0893%" height="15" fill="rgb(247,143,39)" fg:x="1861490" fg:w="353866"/><text x="32.2823%" y="63.50">PrepareW..</text></g><g><title>ReadSubstate(509) (354,019 Execution Cost Units, 6.09%)</title><rect x="38.1505%" y="53" width="6.0919%" height="15" fill="rgb(236,97,10)" fg:x="2217035" fg:w="354019"/><text x="38.4005%" y="63.50">ReadSubs..</text></g><g><title>RunWasmCode::Faucet_free(512) (1,034 Execution Cost Units, 0.02%)</title><rect x="44.4207%" y="53" width="0.0178%" height="15" fill="rgb(233,208,19)" fg:x="2581415" fg:w="1034"/><text x="44.6707%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_free(514) (5,004 Execution Cost Units, 0.09%)</title><rect x="44.4443%" y="53" width="0.0861%" height="15" fill="rgb(216,164,2)" fg:x="2582783" fg:w="5004"/><text x="44.6943%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_free(668) (734 Execution Cost Units, 0.01%)</title><rect x="44.7209%" y="53" width="0.0126%" height="15" fill="rgb(220,129,5)" fg:x="2598858" fg:w="734"/><text x="44.9709%" y="63.50"></text></g><g><title>WriteSubstate(759) (582 Execution Cost Units, 0.01%)</title><rect x="45.0324%" y="53" width="0.0100%" height="15" fill="rgb(242,17,10)" fg:x="2616962" fg:w="582"/><text x="45.2824%" y="63.50"></text></g><g><title>WriteSubstate(913) (582 Execution Cost Units, 0.01%)</title><rect x="45.0425%" y="53" width="0.0100%" height="15" fill="rgb(242,107,0)" fg:x="2617544" fg:w="582"/><text x="45.2925%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_rdx1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxfaucet&gt;::Faucet::free (485) (1,882,515 Execution Cost Units, 32.39%)</title><rect x="12.6646%" y="69" width="32.3941%" height="15" fill="rgb(251,28,31)" fg:x="735975" fg:w="1882515"/><text x="12.9146%" y="79.50">Invocation: Method &lt;component_rdx1cptxxxxxxxxxfaucet..</text></g><g><title>CreateNode(179) (980 Execution Cost Units, 0.02%)</title><rect x="45.1297%" y="53" width="0.0169%" height="15" fill="rgb(233,223,10)" fg:x="2622615" fg:w="980"/><text x="45.3797%" y="63.50"></text></g><g><title>CreateNode(312) (980 Execution Cost Units, 0.02%)</title><rect x="45.1466%" y="53" width="0.0169%" height="15" fill="rgb(215,21,27)" fg:x="2623595" fg:w="980"/><text x="45.3966%" y="63.50"></text></g><g><title>DropNode(282) (1,667 Execution Cost Units, 0.03%)</title><rect x="45.1634%" y="53" width="0.0287%" height="15" fill="rgb(232,23,21)" fg:x="2624575" fg:w="1667"/><text x="45.4134%" y="63.50"></text></g><g><title>DropNode(419) (1,667 Execution Cost Units, 0.03%)</title><rect x="45.1921%" y="53" width="0.0287%" height="15" fill="rgb(244,5,23)" fg:x="2626242" fg:w="1667"/><text x="45.4421%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(202) (40,011 Execution Cost Units, 0.69%)</title><rect x="45.2477%" y="37" width="0.6885%" height="15" fill="rgb(226,81,46)" fg:x="2629469" fg:w="40011"/><text x="45.4977%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(208) (40,001 Execution Cost Units, 0.69%)</title><rect x="45.9455%" y="37" width="0.6883%" height="15" fill="rgb(247,70,30)" fg:x="2670021" fg:w="40001"/><text x="46.1955%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(214) (40,293 Execution Cost Units, 0.69%)</title><rect x="46.6396%" y="37" width="0.6934%" height="15" fill="rgb(212,68,19)" fg:x="2710361" fg:w="40293"/><text x="46.8896%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(216) (6,171 Execution Cost Units, 0.11%)</title><rect x="47.3330%" y="37" width="0.1062%" height="15" fill="rgb(240,187,13)" fg:x="2750654" fg:w="6171"/><text x="47.5830%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(224) (40,179 Execution Cost Units, 0.69%)</title><rect x="47.4392%" y="37" width="0.6914%" height="15" fill="rgb(223,113,26)" fg:x="2756825" fg:w="40179"/><text x="47.6892%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(226) (3,883 Execution Cost Units, 0.07%)</title><rect x="48.1306%" y="37" width="0.0668%" height="15" fill="rgb(206,192,2)" fg:x="2797004" fg:w="3883"/><text x="48.3806%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(230) (40,001 Execution Cost Units, 0.69%)</title><rect x="48.1974%" y="37" width="0.6883%" height="15" fill="rgb(241,108,4)" fg:x="2800887" fg:w="40001"/><text x="48.4474%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(236) (40,002 Execution Cost Units, 0.69%)</title><rect x="48.8916%" y="37" width="0.6884%" height="15" fill="rgb(247,173,49)" fg:x="2841227" fg:w="40002"/><text x="49.1416%" y="47.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(247) (40,003 Execution Cost Units, 0.69%)</title><rect x="49.6044%" y="37" width="0.6884%" height="15" fill="rgb(224,114,35)" fg:x="2882654" fg:w="40003"/><text x="49.8544%" y="47.50"></text></g><g><title>ReadSubstate(217) (5,981 Execution Cost Units, 0.10%)</title><rect x="50.3229%" y="37" width="0.1029%" height="15" fill="rgb(245,159,27)" fg:x="2924408" fg:w="5981"/><text x="50.5729%" y="47.50"></text></g><g><title>ReadSubstate(227) (3,693 Execution Cost Units, 0.06%)</title><rect x="50.4318%" y="37" width="0.0635%" height="15" fill="rgb(245,172,44)" fg:x="2930734" fg:w="3693"/><text x="50.6818%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_rdx1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fxxrp6q&gt;::FungibleVault::get_amount (199) (322,160 Execution Cost Units, 5.54%)</title><rect x="45.2208%" y="53" width="5.5437%" height="15" fill="rgb(236,23,11)" fg:x="2627909" fg:w="322160"/><text x="45.4708%" y="63.50">Invocat..</text></g><g><title>RunNativeCode::get_amount_FungibleVault(241) (14,451 Execution Cost Units, 0.25%)</title><rect x="50.5158%" y="37" width="0.2487%" height="15" fill="rgb(205,117,38)" fg:x="2935618" fg:w="14451"/><text x="50.7658%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(361) (40,014 Execution Cost Units, 0.69%)</title><rect x="50.8161%" y="37" width="0.6886%" height="15" fill="rgb(237,72,25)" fg:x="2953067" fg:w="40014"/><text x="51.0661%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(363) (593 Execution Cost Units, 0.01%)</title><rect x="51.5047%" y="37" width="0.0102%" height="15" fill="rgb(244,70,9)" fg:x="2993081" fg:w="593"/><text x="51.7547%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(376) (593 Execution Cost Units, 0.01%)</title><rect x="51.5149%" y="37" width="0.0102%" height="15" fill="rgb(217,125,39)" fg:x="2993674" fg:w="593"/><text x="51.7649%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(386) (40,001 Execution Cost Units, 0.69%)</title><rect x="51.5251%" y="37" width="0.6883%" height="15" fill="rgb(235,36,10)" fg:x="2994267" fg:w="40001"/><text x="51.7751%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(380) (40,292 Execution Cost Units, 0.69%)</title><rect x="52.2462%" y="37" width="0.6933%" height="15" fill="rgb(251,123,47)" fg:x="3036173" fg:w="40292"/><text x="52.4962%" y="47.50"></text></g><g><title>OpenSubstate::GlobalPackage(382) (6,153 Execution Cost Units, 0.11%)</title><rect x="52.9395%" y="37" width="0.1059%" height="15" fill="rgb(221,13,13)" fg:x="3076465" fg:w="6153"/><text x="53.1895%" y="47.50"></text></g><g><title>ReadSubstate(383) (5,963 Execution Cost Units, 0.10%)</title><rect x="53.1668%" y="37" width="0.1026%" height="15" fill="rgb(238,131,9)" fg:x="3089670" fg:w="5963"/><text x="53.4168%" y="47.50"></text></g><g><title>RunNativeCode::lock_fee(354) (45,243 Execution Cost Units, 0.78%)</title><rect x="53.2842%" y="37" width="0.7785%" height="15" fill="rgb(211,50,8)" fg:x="3096493" fg:w="45243"/><text x="53.5342%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_vault_rdx1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fxxrp6q&gt;::FungibleVault::lock_fee (332) (191,959 Execution Cost Units, 3.30%)</title><rect x="50.7645%" y="53" width="3.3032%" height="15" fill="rgb(245,182,24)" fg:x="2950069" fg:w="191959"/><text x="51.0145%" y="63.50">Inv..</text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(327) (40,001 Execution Cost Units, 0.69%)</title><rect x="54.0677%" y="53" width="0.6883%" height="15" fill="rgb(242,14,37)" fg:x="3142028" fg:w="40001"/><text x="54.3177%" y="63.50"></text></g><g><title>OpenSubstate::GlobalGenericComponent(144) (40,007 Execution Cost Units, 0.69%)</title><rect x="54.7804%" y="53" width="0.6884%" height="15" fill="rgb(246,228,12)" fg:x="3183446" fg:w="40007"/><text x="55.0304%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(102) (40,075 Execution Cost Units, 0.69%)</title><rect x="55.4766%" y="53" width="0.6896%" height="15" fill="rgb(213,55,15)" fg:x="3223902" fg:w="40075"/><text x="55.7266%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(104) (1,819 Execution Cost Units, 0.03%)</title><rect x="56.1662%" y="53" width="0.0313%" height="15" fill="rgb(209,9,3)" fg:x="3263977" fg:w="1819"/><text x="56.4162%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(112) (40,035 Execution Cost Units, 0.69%)</title><rect x="56.1975%" y="53" width="0.6889%" height="15" fill="rgb(230,59,30)" fg:x="3265796" fg:w="40035"/><text x="56.4475%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(114) (1,003 Execution Cost Units, 0.02%)</title><rect x="56.8864%" y="53" width="0.0173%" height="15" fill="rgb(209,121,21)" fg:x="3305831" fg:w="1003"/><text x="57.1364%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(118) (40,001 Execution Cost Units, 0.69%)</title><rect x="56.9037%" y="53" width="0.6883%" height="15" fill="rgb(220,109,13)" fg:x="3306834" fg:w="40001"/><text x="57.1537%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(124) (57,695 Execution Cost Units, 0.99%)</title><rect x="57.5979%" y="53" width="0.9928%" height="15" fill="rgb(232,18,1)" fg:x="3347174" fg:w="57695"/><text x="57.8479%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(126) (354,209 Execution Cost Units, 6.10%)</title><rect x="58.5907%" y="53" width="6.0952%" height="15" fill="rgb(215,41,42)" fg:x="3404869" fg:w="354209"/><text x="58.8407%" y="63.50">OpenSubs..</text></g><g><title>OpenSubstate::GlobalPackage(190) (40,027 Execution Cost Units, 0.69%)</title><rect x="64.6859%" y="53" width="0.6888%" height="15" fill="rgb(224,123,36)" fg:x="3759078" fg:w="40027"/><text x="64.9359%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(192) (853 Execution Cost Units, 0.01%)</title><rect x="65.3746%" y="53" width="0.0147%" height="15" fill="rgb(240,125,3)" fg:x="3799105" fg:w="853"/><text x="65.6246%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(275) (40,221 Execution Cost Units, 0.69%)</title><rect x="65.3893%" y="53" width="0.6921%" height="15" fill="rgb(205,98,50)" fg:x="3799958" fg:w="40221"/><text x="65.6393%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(277) (4,739 Execution Cost Units, 0.08%)</title><rect x="66.0814%" y="53" width="0.0815%" height="15" fill="rgb(205,185,37)" fg:x="3840179" fg:w="4739"/><text x="66.3314%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(84) (40,013 Execution Cost Units, 0.69%)</title><rect x="66.1630%" y="53" width="0.6885%" height="15" fill="rgb(238,207,15)" fg:x="3844918" fg:w="40013"/><text x="66.4130%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(90) (40,001 Execution Cost Units, 0.69%)</title><rect x="66.8614%" y="53" width="0.6883%" height="15" fill="rgb(213,199,42)" fg:x="3885504" fg:w="40001"/><text x="67.1114%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(96) (40,001 Execution Cost Units, 0.69%)</title><rect x="67.5556%" y="53" width="0.6883%" height="15" fill="rgb(235,201,11)" fg:x="3925844" fg:w="40001"/><text x="67.8056%" y="63.50"></text></g><g><title>OpenSubstate::InternalFungibleVault(166) (40,011 Execution Cost Units, 0.69%)</title><rect x="68.2497%" y="53" width="0.6885%" height="15" fill="rgb(207,46,11)" fg:x="3966184" fg:w="40011"/><text x="68.4997%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(176) (605 Execution Cost Units, 0.01%)</title><rect x="69.0211%" y="53" width="0.0104%" height="15" fill="rgb(241,35,35)" fg:x="4011010" fg:w="605"/><text x="69.2711%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(264) (667 Execution Cost Units, 0.01%)</title><rect x="69.0315%" y="53" width="0.0115%" height="15" fill="rgb(243,32,47)" fg:x="4011615" fg:w="667"/><text x="69.2815%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(309) (605 Execution Cost Units, 0.01%)</title><rect x="69.0509%" y="53" width="0.0104%" height="15" fill="rgb(247,202,23)" fg:x="4012745" fg:w="605"/><text x="69.3009%" y="63.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(407) (667 Execution Cost Units, 0.01%)</title><rect x="69.0614%" y="53" width="0.0115%" height="15" fill="rgb(219,102,11)" fg:x="4013350" fg:w="667"/><text x="69.3114%" y="63.50"></text></g><g><title>OpenSubstate::InternalKeyValueStore(439) (40,011 Execution Cost Units, 0.69%)</title><rect x="69.0808%" y="53" width="0.6885%" height="15" fill="rgb(243,110,44)" fg:x="4014480" fg:w="40011"/><text x="69.3308%" y="63.50"></text></g><g><title>PrepareWasmCode(129) (353,866 Execution Cost Units, 6.09%)</title><rect x="69.7788%" y="53" width="6.0893%" height="15" fill="rgb(222,74,54)" fg:x="4055040" fg:w="353866"/><text x="70.0288%" y="63.50">PrepareW..</text></g><g><title>ReadSubstate(105) (1,629 Execution Cost Units, 0.03%)</title><rect x="75.8680%" y="53" width="0.0280%" height="15" fill="rgb(216,99,12)" fg:x="4408906" fg:w="1629"/><text x="76.1180%" y="63.50"></text></g><g><title>ReadSubstate(115) (813 Execution Cost Units, 0.01%)</title><rect x="75.9021%" y="53" width="0.0140%" height="15" fill="rgb(226,22,26)" fg:x="4410884" fg:w="813"/><text x="76.1521%" y="63.50"></text></g><g><title>ReadSubstate(127) (354,019 Execution Cost Units, 6.09%)</title><rect x="75.9186%" y="53" width="6.0919%" height="15" fill="rgb(217,163,10)" fg:x="4411846" fg:w="354019"/><text x="76.1686%" y="63.50">ReadSubs..</text></g><g><title>ReadSubstate(193) (663 Execution Cost Units, 0.01%)</title><rect x="82.0496%" y="53" width="0.0114%" height="15" fill="rgb(213,25,53)" fg:x="4768134" fg:w="663"/><text x="82.2996%" y="63.50"></text></g><g><title>ReadSubstate(278) (4,549 Execution Cost Units, 0.08%)</title><rect x="82.0782%" y="53" width="0.0783%" height="15" fill="rgb(252,105,26)" fg:x="4769796" fg:w="4549"/><text x="82.3282%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(130) (590 Execution Cost Units, 0.01%)</title><rect x="82.2238%" y="53" width="0.0102%" height="15" fill="rgb(220,39,43)" fg:x="4778256" fg:w="590"/><text x="82.4738%" y="63.50"></text></g><g><title>RunWasmCode::Faucet_lock_fee(132) (5,004 Execution Cost Units, 0.09%)</title><rect x="82.2397%" y="53" width="0.0861%" height="15" fill="rgb(229,68,48)" fg:x="4779180" fg:w="5004"/><text x="82.4897%" y="63.50"></text></g><g><title>WriteSubstate(266) (582 Execution Cost Units, 0.01%)</title><rect x="82.6469%" y="53" width="0.0100%" height="15" fill="rgb(252,8,32)" fg:x="4802845" fg:w="582"/><text x="82.8969%" y="63.50"></text></g><g><title>WriteSubstate(409) (582 Execution Cost Units, 0.01%)</title><rect x="82.6569%" y="53" width="0.0100%" height="15" fill="rgb(223,20,43)" fg:x="4803427" fg:w="582"/><text x="82.9069%" y="63.50"></text></g><g><title>Invocation: Method &lt;component_rdx1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxfaucet&gt;::Faucet::lock_fee (81) (2,185,883 Execution Cost Units, 37.61%)</title><rect x="45.0587%" y="69" width="37.6145%" height="15" fill="rgb(229,81,49)" fg:x="2618490" fg:w="2185883"/><text x="45.3087%" y="79.50">Invocation: Method &lt;component_rdx1cptxxxxxxxxxfaucetxxxxxxxxx..</text></g><g><title>RunNativeCode::Worktop_drain(1232) (11,224 Execution Cost Units, 0.19%)</title><rect x="82.8034%" y="53" width="0.1931%" height="15" fill="rgb(236,28,36)" fg:x="4811937" fg:w="11224"/><text x="83.0534%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_rdx1lpqm4mlluwc6f36yv4cv5ypwljrchnr84uadvtyskjdftrny6n6fda&gt;::Worktop::Worktop_drain (1210) (19,036 Execution Cost Units, 0.33%)</title><rect x="82.6732%" y="69" width="0.3276%" height="15" fill="rgb(249,185,26)" fg:x="4804373" fg:w="19036"/><text x="82.9232%" y="79.50"></text></g><g><title>CreateNode(1076) (798 Execution Cost Units, 0.01%)</title><rect x="83.0503%" y="53" width="0.0137%" height="15" fill="rgb(249,174,33)" fg:x="4826288" fg:w="798"/><text x="83.3003%" y="63.50"></text></g><g><title>DropNode(1152) (1,485 Execution Cost Units, 0.03%)</title><rect x="83.0640%" y="53" width="0.0256%" height="15" fill="rgb(233,201,37)" fg:x="4827086" fg:w="1485"/><text x="83.3140%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1103) (40,001 Execution Cost Units, 0.69%)</title><rect x="83.1204%" y="37" width="0.6883%" height="15" fill="rgb(221,78,26)" fg:x="4830359" fg:w="40001"/><text x="83.3704%" y="47.50"></text></g><g><title>Invocation: Method &lt;internal_component_rdx1lqfj6847j2mvhxjz289pxu7d34az0k9hgy4366tjfcrjs8s470kg34&gt;::FungibleBucket::get_amount (1096) (58,092 Execution Cost Units, 1.00%)</title><rect x="83.0896%" y="53" width="0.9996%" height="15" fill="rgb(250,127,30)" fg:x="4828571" fg:w="58092"/><text x="83.3396%" y="63.50"></text></g><g><title>RunNativeCode::get_amount_FungibleBucket(1120) (11,016 Execution Cost Units, 0.19%)</title><rect x="83.8997%" y="37" width="0.1896%" height="15" fill="rgb(230,49,44)" fg:x="4875647" fg:w="11016"/><text x="84.1497%" y="47.50"></text></g><g><title>OpenSubstate::GlobalFungibleResourceManager(1162) (593 Execution Cost Units, 0.01%)</title><rect x="84.0892%" y="53" width="0.0102%" height="15" fill="rgb(229,67,23)" fg:x="4886663" fg:w="593"/><text x="84.3392%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1026) (40,001 Execution Cost Units, 0.69%)</title><rect x="84.1088%" y="53" width="0.6883%" height="15" fill="rgb(249,83,47)" fg:x="4887797" fg:w="40001"/><text x="84.3588%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1032) (40,204 Execution Cost Units, 0.69%)</title><rect x="84.8029%" y="53" width="0.6918%" height="15" fill="rgb(215,43,3)" fg:x="4928137" fg:w="40204"/><text x="85.0529%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1034) (4,389 Execution Cost Units, 0.08%)</title><rect x="85.4947%" y="53" width="0.0755%" height="15" fill="rgb(238,154,13)" fg:x="4968341" fg:w="4389"/><text x="85.7447%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1042) (40,082 Execution Cost Units, 0.69%)</title><rect x="85.5703%" y="53" width="0.6897%" height="15" fill="rgb(219,56,2)" fg:x="4972730" fg:w="40082"/><text x="85.8203%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1044) (1,957 Execution Cost Units, 0.03%)</title><rect x="86.2600%" y="53" width="0.0337%" height="15" fill="rgb(233,0,4)" fg:x="5012812" fg:w="1957"/><text x="86.5100%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1087) (40,017 Execution Cost Units, 0.69%)</title><rect x="86.3056%" y="53" width="0.6886%" height="15" fill="rgb(235,30,7)" fg:x="5015463" fg:w="40017"/><text x="86.5556%" y="63.50"></text></g><g><title>OpenSubstate::GlobalPackage(1089) (651 Execution Cost Units, 0.01%)</title><rect x="86.9942%" y="53" width="0.0112%" height="15" fill="rgb(250,79,13)" fg:x="5055480" fg:w="651"/><text x="87.2442%" y="63.50"></text></g><g><title>ReadSubstate(1035) (4,199 Execution Cost Units, 0.07%)</title><rect x="87.1159%" y="53" width="0.0723%" height="15" fill="rgb(211,146,34)" fg:x="5062553" fg:w="4199"/><text x="87.3659%" y="63.50"></text></g><g><title>ReadSubstate(1045) (1,767 Execution Cost Units, 0.03%)</title><rect x="87.1920%" y="53" width="0.0304%" height="15" fill="rgb(228,22,38)" fg:x="5066975" fg:w="1767"/><text x="87.4420%" y="63.50"></text></g><g><title>RunNativeCode::Worktop_put(1059) (29,033 Execution Cost Units, 0.50%)</title><rect x="87.2931%" y="53" width="0.4996%" height="15" fill="rgb(235,168,5)" fg:x="5072846" fg:w="29033"/><text x="87.5431%" y="63.50"></text></g><g><title>Invocation: Method &lt;internal_component_rdx1lpqm4mlluwc6f36yv4cv5ypwljrchnr84uadvtyskjdftrny6n6fda&gt;::Worktop::Worktop_put (1019) (279,238 Execution Cost Units, 4.81%)</title><rect x="83.0008%" y="69" width="4.8051%" height="15" fill="rgb(221,155,16)" fg:x="4823409" fg:w="279238"/><text x="83.2508%" y="79.50">Invoca..</text></g><g><title>OpenSubstate::GlobalAccount(1297) (160,000 Execution Cost Units, 2.75%)</title><rect x="87.8431%" y="69" width="2.7533%" height="15" fill="rgb(215,215,53)" fg:x="5104811" fg:w="160000"/><text x="88.0931%" y="79.50">Op..</text></g><g><title>OpenSubstate::GlobalAccount(1302) (40,009 Execution Cost Units, 0.69%)</title><rect x="90.6020%" y="69" width="0.6885%" height="15" fill="rgb(223,4,10)" fg:x="5265138" fg:w="40009"/><text x="90.8520%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1006) (40,002 Execution Cost Units, 0.69%)</title><rect x="91.3731%" y="69" width="0.6884%" height="15" fill="rgb(234,103,6)" fg:x="5309950" fg:w="40002"/><text x="91.6231%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1287) (40,075 Execution Cost Units, 0.69%)</title><rect x="92.0675%" y="69" width="0.6896%" height="15" fill="rgb(227,97,0)" fg:x="5350301" fg:w="40075"/><text x="92.3175%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(1289) (1,805 Execution Cost Units, 0.03%)</title><rect x="92.7571%" y="69" width="0.0311%" height="15" fill="rgb(234,150,53)" fg:x="5390376" fg:w="1805"/><text x="93.0071%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(18) (40,001 Execution Cost Units, 0.69%)</title><rect x="92.7881%" y="69" width="0.6883%" height="15" fill="rgb(228,201,54)" fg:x="5392181" fg:w="40001"/><text x="93.0381%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(24) (40,021 Execution Cost Units, 0.69%)</title><rect x="93.4823%" y="69" width="0.6887%" height="15" fill="rgb(222,22,37)" fg:x="5432521" fg:w="40021"/><text x="93.7323%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(26) (737 Execution Cost Units, 0.01%)</title><rect x="94.1710%" y="69" width="0.0127%" height="15" fill="rgb(237,53,32)" fg:x="5472542" fg:w="737"/><text x="94.4210%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(30) (40,039 Execution Cost Units, 0.69%)</title><rect x="94.1837%" y="69" width="0.6890%" height="15" fill="rgb(233,25,53)" fg:x="5473279" fg:w="40039"/><text x="94.4337%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(32) (1,095 Execution Cost Units, 0.02%)</title><rect x="94.8727%" y="69" width="0.0188%" height="15" fill="rgb(210,40,34)" fg:x="5513318" fg:w="1095"/><text x="95.1227%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(36) (40,001 Execution Cost Units, 0.69%)</title><rect x="94.8915%" y="69" width="0.6883%" height="15" fill="rgb(241,220,44)" fg:x="5514413" fg:w="40001"/><text x="95.1415%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(42) (40,002 Execution Cost Units, 0.69%)</title><rect x="95.5857%" y="69" width="0.6884%" height="15" fill="rgb(235,28,35)" fg:x="5554753" fg:w="40002"/><text x="95.8357%" y="79.50"></text></g><g><title>OpenSubstate::GlobalPackage(72) (40,002 Execution Cost Units, 0.69%)</title><rect x="96.2801%" y="69" width="0.6884%" height="15" fill="rgb(210,56,17)" fg:x="5595110" fg:w="40002"/><text x="96.5301%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1308) (605 Execution Cost Units, 0.01%)</title><rect x="97.0724%" y="69" width="0.0104%" height="15" fill="rgb(224,130,29)" fg:x="5641149" fg:w="605"/><text x="97.3224%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1604) (605 Execution Cost Units, 0.01%)</title><rect x="97.1004%" y="69" width="0.0104%" height="15" fill="rgb(235,212,8)" fg:x="5642780" fg:w="605"/><text x="97.3504%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(1671) (605 Execution Cost Units, 0.01%)</title><rect x="97.1267%" y="69" width="0.0104%" height="15" fill="rgb(223,33,50)" fg:x="5644309" fg:w="605"/><text x="97.3767%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(450) (605 Execution Cost Units, 0.01%)</title><rect x="97.1451%" y="69" width="0.0104%" height="15" fill="rgb(219,149,13)" fg:x="5645377" fg:w="605"/><text x="97.3951%" y="79.50"></text></g><g><title>OpenSubstate::InternalGenericComponent(966) (605 Execution Cost Units, 0.01%)</title><rect x="97.1635%" y="69" width="0.0104%" height="15" fill="rgb(250,156,29)" fg:x="5646445" fg:w="605"/><text x="97.4135%" y="79.50"></text></g><g><title>ReadSubstate(1290) (1,615 Execution Cost Units, 0.03%)</title><rect x="97.2864%" y="69" width="0.0278%" height="15" fill="rgb(216,193,19)" fg:x="5653589" fg:w="1615"/><text x="97.5364%" y="79.50"></text></g><g><title>ReadSubstate(33) (905 Execution Cost Units, 0.02%)</title><rect x="97.3774%" y="69" width="0.0156%" height="15" fill="rgb(216,135,14)" fg:x="5658876" fg:w="905"/><text x="97.6274%" y="79.50"></text></g><g><title>Invocation: Function &lt;package_rdx1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxxtxnpxr&gt;::TransactionProcessor::run (16) (5,665,331 Execution Cost Units, 97.49%)</title><rect x="0.0478%" y="85" width="97.4885%" height="15" fill="rgb(241,47,5)" fg:x="2775" fg:w="5665331"/><text x="0.2978%" y="95.50">Invocation: Function &lt;package_rdx1pkgxxxxxxxxxtxnpxrxxxxxxxxx002962227406xxxxxxxxxtxnpxr&gt;::TransactionProcessor::run (16)</text></g><g><title>OpenSubstate::GlobalPackage(11) (40,002 Execution Cost Units, 0.69%)</title><rect x="97.5362%" y="85" width="0.6884%" height="15" fill="rgb(233,42,35)" fg:x="5668106" fg:w="40002"/><text x="97.7862%" y="95.50"></text></g><g><title>RefCheck(2) (40,011 Execution Cost Units, 0.69%)</title><rect x="98.2581%" y="85" width="0.6885%" height="15" fill="rgb(231,13,6)" fg:x="5710056" fg:w="40011"/><text x="98.5081%" y="95.50"></text></g><g><title>RefCheck(3) (40,011 Execution Cost Units, 0.69%)</title><rect x="98.9466%" y="85" width="0.6885%" height="15" fill="rgb(207,181,40)" fg:x="5750067" fg:w="40011"/><text x="99.1966%" y="95.50"></text></g><g><title>ValidateTxPayload(0) (6,800 Execution Cost Units, 0.12%)</title><rect x="99.6351%" y="85" width="0.1170%" height="15" fill="rgb(254,173,49)" fg:x="5790078" fg:w="6800"/><text x="99.8851%" y="95.50"></text></g><g><title>VerifyTxSignatures(1) (14,000 Execution Cost Units, 0.24%)</title><rect x="99.7521%" y="85" width="0.2409%" height="15" fill="rgb(221,1,38)" fg:x="5796878" fg:w="14000"/><text x="100.0021%" y="95.50"></text></g><g><title>all (5,811,282 Execution Cost Units, 100%)</title><rect x="0.0000%" y="101" width="100.0000%" height="15" fill="rgb(206,124,46)" fg:x="0" fg:w="5811282"/><text x="0.2500%" y="111.50"></text></g></svg></svg>