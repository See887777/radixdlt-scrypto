TRANSACTION STATUS: COMMITTED SUCCESS

TRANSACTION COST: 105.9251400696 XRD
├─ Network execution: 1.84124405 XRD, 36824881 execution cost units
├─ Network finalization: 0.1601002 XRD, 3202004 finalization cost units
├─ Tip: 0 XRD
├─ Network Storage: 103.9237958196 XRD
└─ Royalties: 0 XRD

LOGS: 0

EVENTS: 5
├─ Emitter: Method { node: internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u, module_id: Main }
   Event: LockFeeEvent {
     amount: Decimal("5000"),
   }
├─ Emitter: Method { node: resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3, module_id: Main }
   Event: VaultCreationEvent {
     vault_id: NodeId(hex("584965093c5b972990e9b4cfb4aa0022718d3330bbfa3a8a98c4844450bc")),
   }
├─ Emitter: Method { node: internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u, module_id: Main }
   Event: PayFeeEvent {
     amount: Decimal("105.9251400696"),
   }
├─ Emitter: Method { node: internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel, module_id: Main }
   Event: DepositEvent {
     amount: Decimal("52.9625700348"),
   }
└─ Emitter: Method { node: resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3, module_id: Main }
   Event: BurnFungibleResourceEvent {
     amount: Decimal("52.9625700348"),
   }

STATE UPDATES: 10 entities
├─ consensusmanager_sim1scxxxxxxxxxxcnsmgrxxxxxxxxx000999665565xxxxxxxxxxc06cl across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(2)
       Value: UNLOCKED ConsensusManagerValidatorRewardsFieldPayload::V1(
         ValidatorRewardsSubstate {
           proposer_rewards: {
             0u8 => Decimal("26.9640293942875"),
           },
           rewards_vault: Vault(Own("internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel")),
         },
       )
├─ transactiontracker_sim1stxxxxxxxxxxtxtrakxxxxxxxxx006844685494xxxxxxxxx4d5zd2 across 2 partitions
  ├─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED TransactionTrackerSubstate::V1(
         TransactionTrackerSubstateV1 {
           start_epoch: 1u64,
           start_partition: 65u8,
           partition_range_start_inclusive: 65u8,
           partition_range_end_inclusive: 255u8,
           epochs_per_partition: 100u64,
         },
       )
  └─ Partition(65): 1 change
    └─ Set: Hash(hex("edf0c41e2926494c3e300bc534b057c96e726bff0a89fac01bbe06a9f1eec96d"))
       Value: UNLOCKED TransactionStatus::V1(
         TransactionStatusV1::CommittedSuccess,
       )
├─ component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED Faucet {
         vault: Vault(Own("internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u")),
         transactions: KeyValueStore(Own("internal_keyvaluestore_sim1krn7clzr3qmq2zhwr77mdenksxswf00yeh8tn3vyzesg4kr3p54gv8")),
       }
├─ internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED FungibleVaultBalanceFieldPayload::V1(
         LiquidFungibleResource(Decimal("99999999999989892.14388242285")),
       )
├─ package_sim1pk9jztrwzcl2px0w859fdkxkaygej4m9zryxpau3pqs7vlq9zpyzda across 12 partitions
  ├─ Partition(1): 1 change
    └─ Set: SchemaHash(bb99125ec01040730d3516daf3ea083c52829654c1a3fa56496ca0cb72cca9a5)
       Value: (Hidden as longer than 1024 bytes. Hash: fd179ce1552897e1199245d62ad8cf32849e947e06574d36415507ede5baa6e9)
  ├─ Partition(2): 3 changes
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "MayaRouter Package",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "MayaRouter package stores assets swappable with assets from other networks",
         ),
       )
    └─ Set: "tags"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::StringArray(
           [
             "bridge",
             "cross-chain",
           ],
         ),
       )
  ├─ Partition(5): 1 change
    └─ Set: Field(0)
       Value: LOCKED RoleAssignmentOwnerFieldPayload::V1(
         OwnerRoleSubstate {
           rule: AccessRule::DenyAll,
           updater: OwnerRoleUpdater::None,
         },
       )
  ├─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: LOCKED PackageRoyaltyAccumulatorFieldPayload::V1(
         PackageRoyaltyAccumulatorV1 {
           royalty_vault: Vault(Own("internal_vault_sim1tpyk2zfutwtjny8fkn8mf2sqyfcc6vesh0ar4z5ccjzyg59uvnl39m")),
         },
       )
  ├─ Partition(65): 1 change
    └─ Set: BlueprintVersionKey { blueprint: "MayaRouter", version: BlueprintVersion { major: 1u32, minor: 0u32, patch: 0u32 } }
       Value: (Hidden as longer than 1024 bytes. Hash: d92ebfbc6cd3cd9a0b9c1167fa9a019d1a4f7896db5021a00f983f4c66bafa92)
  ├─ Partition(66): 1 change
    └─ Set: BlueprintVersionKey { blueprint: "MayaRouter", version: BlueprintVersion { major: 1u32, minor: 0u32, patch: 0u32 } }
       Value: LOCKED PackageBlueprintVersionDependenciesEntryPayload::V1(
         BlueprintDependencies([]),
       )
  ├─ Partition(67): 1 change
    └─ Set: BlueprintVersionKey { blueprint: "MayaRouter", version: BlueprintVersion { major: 1u32, minor: 0u32, patch: 0u32 } }
       Value: LOCKED PackageBlueprintVersionRoyaltyConfigEntryPayload::V1(
         PackageRoyaltyConfig::Disabled,
       )
  ├─ Partition(68): 1 change
    └─ Set: BlueprintVersionKey { blueprint: "MayaRouter", version: BlueprintVersion { major: 1u32, minor: 0u32, patch: 0u32 } }
       Value: LOCKED PackageBlueprintVersionAuthConfigEntryPayload::V1(
         AuthConfig {
           function_auth: FunctionAuth::AllowAll,
           method_auth: MethodAuthTemplate::StaticRoleDefinition(
             StaticRoleDefinition {
               roles: RoleSpecification::Normal(
                 {},
               ),
               methods: {
                 MethodKey("deposit") => MethodAccessibility::Public,
                 MethodKey("transfer_out") => MethodAccessibility::Public,
                 MethodKey("transfer_between_asgard_vaults") => MethodAccessibility::Public,
               },
             },
           ),
         },
       )
  ├─ Partition(69): 1 change
    └─ Set: CodeHash(hex("814a1af902d10c59dd1b9d06a49db48cd9d9e76b6666a56435c5f1496de78794"))
       Value: LOCKED PackageCodeVmTypeEntryPayload::V1(
         PackageCodeVmTypeV1::ScryptoV1,
       )
  ├─ Partition(70): 1 change
    └─ Set: CodeHash(hex("814a1af902d10c59dd1b9d06a49db48cd9d9e76b6666a56435c5f1496de78794"))
       Value: (Hidden as longer than 1024 bytes. Hash: 779f453eeb2d5e7ab30ea757068a22df5a9d5251b453e72f6f4005b45e1d4fae)
  ├─ Partition(71): 1 change
    └─ Set: CodeHash(hex("814a1af902d10c59dd1b9d06a49db48cd9d9e76b6666a56435c5f1496de78794"))
       Value: (Hidden as longer than 1024 bytes. Hash: 67665ccb7576624c3e76cce8778f322078ceb708a6606af9599ee60ce98889b1)
  └─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pkgxxxxxxxxxpackgexxxxxxxxx000726633226xxxxxxxxxlk8hc9")),
               blueprint_name: "Package",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::None,
             features: [
               "package_royalty",
             ],
             generic_substitutions: [],
           },
           object_type: ObjectType::Global {
             modules: {
               AttachedModuleId::Metadata => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
               AttachedModuleId::RoleAssignment => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
             },
           },
         },
       )
├─ internal_vault_sim1tpyk2zfutwtjny8fkn8mf2sqyfcc6vesh0ar4z5ccjzyg59uvnl39m across 2 partitions
  ├─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9")),
               blueprint_name: "FungibleVault",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::Some {
               outer_object: GlobalAddress(Reference("resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3")),
             },
             features: [],
             generic_substitutions: [],
           },
           object_type: ObjectType::Owned,
         },
       )
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED FungibleVaultBalanceFieldPayload::V1(
         LiquidFungibleResource(Decimal("0")),
       )
├─ component_sim1cz2n04uz73lt83e2wagw0zveln0u0q24ydup5vspavglyspfqtl2zc across 3 partitions
  ├─ Partition(5): 1 change
    └─ Set: Field(0)
       Value: LOCKED RoleAssignmentOwnerFieldPayload::V1(
         OwnerRoleSubstate {
           rule: AccessRule::DenyAll,
           updater: OwnerRoleUpdater::None,
         },
       )
  ├─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED MayaRouter {
         locker: GlobalAccountLocker(Reference("locker_sim1dry2hugh70ruy9q9w5380369pxj25hx7y867ulqu0vqaq9ayj7yqqx")),
         vaults: KeyValueStore(Own("internal_keyvaluestore_sim1kr8slmdqe4eetc3uk5ggc4chg5tnmx6thwtwcpfzfh38hjvku0req7")),
       }
  └─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pk9jztrwzcl2px0w859fdkxkaygej4m9zryxpau3pqs7vlq9zpyzda")),
               blueprint_name: "MayaRouter",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::None,
             features: [],
             generic_substitutions: [],
           },
           object_type: ObjectType::Global {
             modules: {
               AttachedModuleId::Metadata => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
               AttachedModuleId::RoleAssignment => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
             },
           },
         },
       )
├─ locker_sim1dry2hugh70ruy9q9w5380369pxj25hx7y867ulqu0vqaq9ayj7yqqx across 4 partitions
  ├─ Partition(2): 1 change
    └─ Set: "admin_badge"
       Value: LOCKED EMPTY
  ├─ Partition(5): 1 change
    └─ Set: Field(0)
       Value: LOCKED RoleAssignmentOwnerFieldPayload::V1(
         OwnerRoleSubstate {
           rule: AccessRule::DenyAll,
           updater: OwnerRoleUpdater::None,
         },
       )
  ├─ Partition(6): 4 changes
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("storer_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("recoverer_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("storer") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::Protected(
           AccessRuleNode::ProofRule(
             ProofRule::Require(
               ResourceOrNonFungible::NonFungible(
                 NonFungibleGlobalId {
                   resource_address: ResourceAddress(Reference("resource_sim1nfxxxxxxxxxxglcllrxxxxxxxxx002350006550xxxxxxxxxk5870l")),
                   local_id: NonFungibleLocalId("[7d77c5d56de1a7975fc55cfee81a2d3bbe63ffea5a18cc631aeabaad176bcdd1]"),
                 },
               ),
             ),
           ),
         ),
       )
    └─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("recoverer") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
  └─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pkgxxxxxxxxxlckerxxxxxxxxxx000208064247xxxxxxxxxpnfcn6")),
               blueprint_name: "AccountLocker",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::None,
             features: [],
             generic_substitutions: [],
           },
           object_type: ObjectType::Global {
             modules: {
               AttachedModuleId::RoleAssignment => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
               AttachedModuleId::Metadata => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
             },
           },
         },
       )
├─ internal_keyvaluestore_sim1kr8slmdqe4eetc3uk5ggc4chg5tnmx6thwtwcpfzfh38hjvku0req7 across 2 partitions
  ├─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::KeyValueStore(
         KeyValueStoreInfo {
           generic_substitutions: KeyValueStoreGenericSubstitutions {
             key_generic_substitution: GenericSubstitution::Local(
               ScopedTypeId(
                 SchemaHash(hex("5984bee33c529de9f322241679b505ab2e60e2189bdf8c2b7811023ffb5c12f9")),
                 LocalTypeId::WellKnown(
                   WellKnownTypeId(208u8),
                 ),
               ),
             ),
             value_generic_substitution: GenericSubstitution::Local(
               ScopedTypeId(
                 SchemaHash(hex("5984bee33c529de9f322241679b505ab2e60e2189bdf8c2b7811023ffb5c12f9")),
                 LocalTypeId::WellKnown(
                   WellKnownTypeId(170u8),
                 ),
               ),
             ),
             allow_ownership: true,
           },
         },
       )
  └─ Partition(1): 1 change
    └─ Set: SchemaHash(5984bee33c529de9f322241679b505ab2e60e2189bdf8c2b7811023ffb5c12f9)
       Value: KeyValueEntrySubstate::V1(
         KeyValueEntrySubstateV1 {
           value: Option::Some(
             PackageSchemaEntryPayload::V1(
               SchemaV1 {
                 type_kinds: [],
                 type_metadata: [],
                 type_validations: [],
               },
             ),
           ),
           lock_status: LockStatus::Locked,
         },
       )
├─ internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED FungibleVaultBalanceFieldPayload::V1(
         LiquidFungibleResource(Decimal("53.928058788575")),
       )

OUTPUTS: 4
├─ Unit
├─ None
├─ Reference("package_sim1pk9jztrwzcl2px0w859fdkxkaygej4m9zryxpau3pqs7vlq9zpyzda")
└─ Reference("component_sim1cz2n04uz73lt83e2wagw0zveln0u0q24ydup5vspavglyspfqtl2zc")

BALANCE CHANGES: 2
├─ Vault: internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u
   ResAddr: resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3
   Change: -105.9251400696
└─ Vault: internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel
   ResAddr: resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3
   Change: 52.9625700348

NEW ENTITIES: 3
└─ Package: package_sim1pk9jztrwzcl2px0w859fdkxkaygej4m9zryxpau3pqs7vlq9zpyzda
├─ Component: component_sim1cz2n04uz73lt83e2wagw0zveln0u0q24ydup5vspavglyspfqtl2zc
└─ Component: locker_sim1dry2hugh70ruy9q9w5380369pxj25hx7y867ulqu0vqaq9ayj7yqqx