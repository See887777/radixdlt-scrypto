TRANSACTION STATUS: COMMITTED SUCCESS

TRANSACTION COST: 0 XRD
├─ Network execution: 0 XRD, 0 execution cost units
├─ Network finalization: 0 XRD, 0 finalization cost units
├─ Tip: 0 XRD
├─ Network Storage: 0 XRD
└─ Royalties: 0 XRD

LOGS: 0

EVENTS: 0

STATE UPDATES: 6 entities
├─ resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3 across 1 partitions
  └─ Partition(2): 1 change
    └─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::Url(
           Url("https://assets.radixdlt.com/icons/icon-xrd.png"),
         ),
       )
├─ resource_sim1nfxxxxxxxxxxpkcllrxxxxxxxxx003652646977xxxxxxxxxla870l across 1 partitions
  └─ Partition(2): 3 changes
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "Package of Direct Caller Resource",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "This is an implicit proof resource, intended for verifying access by specific code. It can be used with rule!(require(package_of_direct_caller(<PACKAGE_ADDRESS>))). At access rule resolution time, the Radix Engine includes an implicit proof of a specific non-fungible local id under this resource representing the specific package. See the info_url for further information.",
         ),
       )
    └─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::Url(
           Url("https://assets.radixdlt.com/icons/icon-package_of_direct_caller_resource.png"),
         ),
       )
├─ resource_sim1nfxxxxxxxxxxglcllrxxxxxxxxx002350006550xxxxxxxxxk5870l across 1 partitions
  └─ Partition(2): 3 changes
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "Global Caller Resource",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "This is an implicit proof resource, intended for verifying access by a specific global caller. In cases where you wish to find out the global caller, you can require the caller to pass their claimed global address into the method, and then verify it with this rule. It can be used with rule!(require(global_caller(<COMPONENT_ADDRESS>))) or rule!(require(global_caller(BlueprintId::new(<PACKAGE_ADDRESS>, “<BLUEPRINT_NAME>“))))). At access rule resolution time, the Radix Engine includes an implicit proof of a specific non-fungible local id under this resource representing the global ancestor of the local call frame which called you. See the info_url for further information.",
         ),
       )
    └─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::Url(
           Url("https://assets.radixdlt.com/icons/icon-global_caller_resource.png"),
         ),
       )
├─ resource_sim1nfxxxxxxxxxxsecpsgxxxxxxxxx004638826440xxxxxxxxxwj8qq5 across 1 partitions
  └─ Partition(2): 3 changes
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "ECDSA Secp256k1 Signature Resource",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "This is an implicit proof resource, intended for verifying access by a manifest of an intent signed with the given ECDSA Secp256k1 key hash. It can be used with rule!(require(signature(<PUBLIC_KEY_HASH or PUBLIC_KEY>))). At access rule resolution time, if a manifest is your global caller, the Radix Engine includes implicit proofs of a specific non-fungible local ids under this resource representing the public key hash of each signature of the intent. See the info_url for further information.",
         ),
       )
    └─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::Url(
           Url("https://assets.radixdlt.com/icons/icon-ecdsa_secp256k1_signature_resource.png"),
         ),
       )
├─ resource_sim1nfxxxxxxxxxxed25sgxxxxxxxxx002236757237xxxxxxxxx8x44q5 across 1 partitions
  └─ Partition(2): 3 changes
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "EdDSA Ed25519 Signature Resource",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "This is an implicit proof resource, intended for verifying access by a manifest signed with the given EdDSA Ed25519 key hash. It can be used with rule!(require(signature(<PUBLIC_KEY_HASH or PUBLIC_KEY>))). At access rule resolution time, if a manifest is your global caller, the Radix Engine includes implicit proofs of a specific non-fungible local ids under this resource representing the public key hash of each signature of the intent. See the info_url for further information.",
         ),
       )
    └─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::Url(
           Url("https://assets.radixdlt.com/icons/icon-eddsa_ed25519_signature_resource.png"),
         ),
       )
└─ resource_sim1nfxxxxxxxxxxsystxnxxxxxxxxx002683325037xxxxxxxxxw002k0 across 1 partitions
  └─ Partition(2): 3 changes
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "System Execution Resource",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "This is an implicit proof resource, intended for verifying access by a manifest of a certain type of system transaction, such as a protocol update or a validator transaction. See the info_url for further information.",
         ),
       )
    └─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::Url(
           Url("https://assets.radixdlt.com/icons/icon-system_execution_resource.png"),
         ),
       )

OUTPUTS: 0

BALANCE CHANGES: 0

NEW ENTITIES: 0