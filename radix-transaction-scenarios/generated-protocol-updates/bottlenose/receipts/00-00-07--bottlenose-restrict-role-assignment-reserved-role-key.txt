TRANSACTION STATUS: COMMITTED SUCCESS

TRANSACTION COST: 0 XRD
├─ Network execution: 0 XRD, 0 execution cost units
├─ Network finalization: 0 XRD, 0 finalization cost units
├─ Tip: 0 XRD
├─ Network Storage: 0 XRD
└─ Royalties: 0 XRD

LOGS: 0

EVENTS: 0

STATE UPDATES: 1 entity
└─ package_sim1pkgxxxxxxxxxpackgexxxxxxxxx000726633226xxxxxxxxxlk8hc9 across 3 partitions
  ├─ Partition(65): 1 change
    └─ Set: BlueprintVersionKey { blueprint: "Package", version: BlueprintVersion { major: 1u32, minor: 0u32, patch: 0u32 } }
       Value: LOCKED PackageBlueprintVersionDefinitionEntryPayload::V1(
         BlueprintDefinition {
           interface: BlueprintInterface {
             blueprint_type: BlueprintType::Outer,
             is_transient: false,
             generics: [],
             feature_set: [
               "package_royalty",
             ],
             state: IndexedStateSchema {
               fields: Option::Some(
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       0u8,
                     ),
                   ),
                   [
                     FieldSchema {
                       field: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             0u64,
                           ),
                         ),
                       ),
                       condition: Condition::IfFeature(
                         "package_royalty",
                       ),
                       transience: FieldTransience::NotTransient,
                     },
                   ],
                 ),
               ),
               collections: [
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       1u8,
                     ),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             2u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             4u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       2u8,
                     ),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             2u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             43u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
                 Tuple(
                   PartitionDescription::Physical(
                     PartitionNumber(1u8),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             21u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             45u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       3u8,
                     ),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             2u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             86u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       4u8,
                     ),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             2u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             89u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       5u8,
                     ),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             40u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             101u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       6u8,
                     ),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             40u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             103u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
                 Tuple(
                   PartitionDescription::Logical(
                     PartitionOffset(
                       7u8,
                     ),
                   ),
                   BlueprintCollectionSchema::KeyValueStore(
                     BlueprintKeyValueSchema {
                       key: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             40u64,
                           ),
                         ),
                       ),
                       value: BlueprintPayloadDef::Static(
                         ScopedTypeId(
                           SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                           LocalTypeId::SchemaLocalIndex(
                             105u64,
                           ),
                         ),
                       ),
                       allow_ownership: false,
                     },
                   ),
                 ),
               ],
               num_logical_partitions: 8u8,
             },
             functions: {
               "publish_wasm" => FunctionSchema {
                 receiver: Option::None,
                 input: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::SchemaLocalIndex(
                       107u64,
                     ),
                   ),
                 ),
                 output: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::SchemaLocalIndex(
                       146u64,
                     ),
                   ),
                 ),
               },
               "publish_wasm_advanced" => FunctionSchema {
                 receiver: Option::None,
                 input: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::SchemaLocalIndex(
                       147u64,
                     ),
                   ),
                 ),
                 output: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::WellKnown(
                       WellKnownTypeId(131u8),
                     ),
                   ),
                 ),
               },
               "publish_native" => FunctionSchema {
                 receiver: Option::None,
                 input: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::SchemaLocalIndex(
                       149u64,
                     ),
                   ),
                 ),
                 output: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::WellKnown(
                       WellKnownTypeId(131u8),
                     ),
                   ),
                 ),
               },
               "PackageRoyalty_claim_royalties" => FunctionSchema {
                 receiver: Option::Some(
                   ReceiverInfo {
                     receiver: Receiver::SelfRefMut,
                     ref_types: RefTypes {
                       bits: 1u32,
                     },
                   },
                 ),
                 input: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::SchemaLocalIndex(
                       150u64,
                     ),
                   ),
                 ),
                 output: BlueprintPayloadDef::Static(
                   ScopedTypeId(
                     SchemaHash(hex("e3077e612a8c5c864191d89c2432dd44675068393ce85202b03e939147e9c16e")),
                     LocalTypeId::WellKnown(
                       WellKnownTypeId(161u8),
                     ),
                   ),
                 ),
               },
             },
             events: {},
             types: {},
           },
           function_exports: {
             "publish_wasm" => PackageExport {
               code_hash: CodeHash(hex("59f4d77506db37de0f7f1ec4281a38cf6d47fe332e46bd7e562b848ec9e962a2")),
               export_name: "publish_wasm",
             },
             "publish_wasm_advanced" => PackageExport {
               code_hash: CodeHash(hex("59f4d77506db37de0f7f1ec4281a38cf6d47fe332e46bd7e562b848ec9e962a2")),
               export_name: "publish_wasm_advanced",
             },
             "publish_native" => PackageExport {
               code_hash: CodeHash(hex("59f4d77506db37de0f7f1ec4281a38cf6d47fe332e46bd7e562b848ec9e962a2")),
               export_name: "publish_native",
             },
             "PackageRoyalty_claim_royalties" => PackageExport {
               code_hash: CodeHash(hex("59f4d77506db37de0f7f1ec4281a38cf6d47fe332e46bd7e562b848ec9e962a2")),
               export_name: "PackageRoyalty_claim_royalties",
             },
           },
           hook_exports: {},
         },
       )
  ├─ Partition(69): 2 changes
    ├─ Delete: CodeHash(hex("81e47a19e6b29b0a65b9591762ce5143ed30d0261e5d24a3201752506b20f15c"))
    └─ Set: CodeHash(hex("59f4d77506db37de0f7f1ec4281a38cf6d47fe332e46bd7e562b848ec9e962a2"))
       Value: LOCKED PackageCodeVmTypeEntryPayload::V1(
         PackageCodeVmTypeV1::Native,
       )
  └─ Partition(70): 2 changes
    ├─ Delete: CodeHash(hex("81e47a19e6b29b0a65b9591762ce5143ed30d0261e5d24a3201752506b20f15c"))
    └─ Set: CodeHash(hex("59f4d77506db37de0f7f1ec4281a38cf6d47fe332e46bd7e562b848ec9e962a2"))
       Value: LOCKED PackageCodeOriginalCodeEntryPayload::V1(
         PackageCodeOriginalCodeV1(hex("0000000000000016")),
       )

OUTPUTS: 0

BALANCE CHANGES: 0

NEW ENTITIES: 0